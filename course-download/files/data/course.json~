{"units": [{"html_check_answers": false, "now_available": true, "weight": 1, "title": "Preview and Setup (Pre Course)", "href": null, "html_content": null, "release_date": "", "unit_id": 19, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Mobile computers and mobile apps", "href": null, "html_content": null, "release_date": "", "unit_id": 1, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Graphics and Drawing", "href": null, "html_content": null, "release_date": "", "unit_id": 22, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Create: Programming Performance Task #1", "href": null, "html_content": "<h2>Create: Programming Performance Task #1</h2>\n\n\n\n<question quid=\"5700735861784576\" weight=\"36\" instanceid=\"KDBONPmfAQb7\">\n</question><br>", "release_date": "", "unit_id": 57, "html_review_form": "<question-group qgid=\"5689792285114368\" instanceid=\"u4LU9YWMVqN8\"></question-group><br>", "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '', review_min_count: '', review_window_mins: '',\n  submission_due_date: ''}\n", "type": "A", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Animation, Simulation, and Modeling", "href": null, "html_content": null, "release_date": "", "unit_id": 23, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Exam 1", "href": null, "html_content": "", "release_date": "", "unit_id": 125, "html_review_form": null, "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '', review_min_count: '', review_window_mins: '',\n  submission_due_date: ''}\n", "type": "A", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Explore: Impact of Computing Innovations Performance Task #1 (Optional)", "href": null, "html_content": "<h2>Explore: Impact of Computing Innovations Performance Task #1 (Optional)</h2>\n\n<p><i>Note that this is an optional practice Performance Task</i></p>\n\n<question quid=\"6545390312620032\" weight=\"48\" instanceid=\"HaEwGI1t1YnT\"></question><br>\n", "release_date": "", "unit_id": 123, "html_review_form": null, "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '', review_min_count: '', review_window_mins: '',\n  submission_due_date: ''}\n", "type": "A", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Algorithms and Procedural Abstraction", "href": null, "html_content": null, "release_date": "", "unit_id": 24, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Explore: Impact of Computing Innovations Performance Task #2", "href": null, "html_content": "<h2>Explore: Investigate Innovation Performance Task #2</h2>\n\n<p><br></p>\n\n<question quid=\"6483030902308864\" weight=\"48\" instanceid=\"HaEwGI1t1YnT\"></question><br>\n", "release_date": "", "unit_id": 115, "html_review_form": "<question quid=\"6544095673581568\" weight=\"3\" instanceid=\"3J7Zr3isR3J5\"></question>&nbsp; &nbsp;<question quid=\"5921159119896576\" weight=\"3\" instanceid=\"NP8b7oSYeXz7\"></question>&nbsp; &nbsp;<question quid=\"5185895078559744\" weight=\"3\" instanceid=\"69kaURA1dvmn\"></question>&nbsp; &nbsp;<question quid=\"5527817961865216\" weight=\"3\" instanceid=\"zSqD632tmLWC\"></question>&nbsp; &nbsp;<question quid=\"6692973869793280\" weight=\"3\" instanceid=\"QjYdAqSDBVud\"></question>&nbsp; &nbsp;<question quid=\"6000951559192576\" weight=\"3\" instanceid=\"8By2ljNZ1vB0\"></question>&nbsp; &nbsp;<question quid=\"6407509405335552\" weight=\"3\" instanceid=\"SSUFajXAjjml\"></question>&nbsp; &nbsp;<question quid=\"6331549016391680\" weight=\"3\" instanceid=\"XJUqrIC2JqTA\"></question>&nbsp; &nbsp;<question quid=\"5076734189764608\" weight=\"3\" instanceid=\"ZZq9gv4psivS\"></question>&nbsp; &nbsp;<question quid=\"6356712290254848\" weight=\"3\" instanceid=\"EATPJexRWGEw\"></question>&nbsp; &nbsp;<question quid=\"4871812710137856\" weight=\"3\" instanceid=\"RZPETnKOXoEo\"></question>&nbsp; &nbsp;<question quid=\"5637952600276992\" weight=\"3\" instanceid=\"4bXJqLe70pDN\"></question>&nbsp; &nbsp;<question quid=\"5844559451914240\" weight=\"3\" instanceid=\"uaMtIap51DFZ\"></question>&nbsp; &nbsp;<question quid=\"4934265158500352\" weight=\"3\" instanceid=\"TWLQkA9VYjsc\"></question>&nbsp; &nbsp;<question quid=\"5917995205394432\" weight=\"3\" instanceid=\"Flp54SZ9T0ls\"></question>&nbsp; &nbsp;<question quid=\"5045677147029504\" weight=\"3\" instanceid=\"w0SRi5z6KGfH\"></question><br>", "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '2014-08-30 23:59', review_min_count: 2,\n  review_window_mins: 90, submission_due_date: ''}\n", "type": "A", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Lists, Databases, Data and Information", "href": null, "html_content": null, "release_date": "", "unit_id": 26, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "Data Project (Optional)", "href": null, "html_content": "<h2>Data Project (Optional)</h2>\n\n<br><br><question quid=\"5560227894132736\" weight=\"1\" instanceid=\"7S6JF16TWvUG\"></question><br>", "release_date": "", "unit_id": 124, "html_review_form": null, "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '', review_min_count: '', review_window_mins: '',\n  submission_due_date: ''}\n", "type": "A", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 1, "title": "The Internet", "href": null, "html_content": null, "release_date": "", "unit_id": 25, "html_review_form": null, "workflow_yaml": "grader: auto\n", "type": "U", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 100, "title": "Create: Programming Performance Task #2", "href": null, "html_content": "<h2>Create: Programming Performance Task #2</h2>\n\n<h3>The Assignment</h3>\n<p>Work with a partner to create a socially useful app that uses some combination of graphics, animation, simulation, location awareness, data persistence, and/or texting. As you develop your project keep track of significant errors and challenges that you encountered and how you solved or debugged them. After completing the project, you should complete an individual reflection.</p>\n<p>Please review the official proposed <a href=\"https://drive.google.com/a/css.edu/file/d/0B_DadwXBRAZ7bzZmRnJKTkd1REk1eTRvR2N3YWx6eEtTTTBB/edit?usp=sharing\" target=\"_blank\">Performance Task directions</a> from the College Board for directions.  You should carefully follow all of the directions as presented by the College Board and will need to address the requirements and prompts as outlined in the Performance Task directions. </p>\n\n<h3>The Process</h3>\n<p>Below is an overview of the process:</p>\n<ol>\n   <li>With your partner, brainstorm a project idea, develop drawing(s) of the User Interface and a rough storyboard of how your app will function. You can use <a href=\"https://docs.google.com/document/d/1ESrDBJECGT0eS6tLLkP6uy6xuLVDE8cfJLC6NhhXMyA/edit?usp=sharing\" target=\"_blank\">this template</a>. Your app should be about as complex as MoleMash and/or Broadcast Hub. </li>\n   <li>Meet with your instructor to discuss the feasibility of the app and if necessary make any changes to your plan.</li>\n   <li>Present a short (2-3 minute) elevator pitch of your project idea to the class.  The pitch could follow this template: <br>\n      <b><i>[name of app] is a [kind of thing it is] for [the people who would use it] that, unlike [similar apps] is able to [the major distinguishing feature of your app].</i></b></li>\n   <li>Other students should provide feedback: Is the app presented socially useful why or why not? What is a strength of the proposed app? What suggestions do you have to improve the app? </li>\n   <li>Consider the feedback provided and make adjustments if warranted. Work collaboratively to develop, test, and debug your app, making sure that it meets the following coding specifications.</li>\n      <ul>\n         <li><i>Documentation of Code:</i> For this assignment, a well documented app means having well named components, variables, and procedures. Where appropriate, your code should contain comments that explains the various parts of your code.</li>\n         <li><i>Data:</i> For this assignment, your app should make appropriate use of variables. If data persistence is necessary for your app, you should make use of a TinyDb and/or a TinyWebDb.</li>\n         <li><i>Algorithms: </i>For this assignment, your app should make appropriate use of sequence, selection, and repetition control structures.</li>\n         <li><i>Abstraction:</i> For this assignment, your app should make appropriate use of one or more programmer defined procedures to handle certain subtasks. Also, your procedures should use parameters where appropriate.</li>\n         <li><i>Feature Specifications:</i> For this assignment your app should make appropriate use of some combination of graphics, animation, simulation, location awareness, data persistence, and/or texting.</li>\n      </ul>\n   <li>Create a collaborative and individual portfolio write up of your project. </li>\n   <li>Create a one minute video demonstrating your app (<a href=\"https://docs.google.com/a/css.edu/document/d/1MVJ9gV2MEeOWan4Gu2dEwA5B9sJ3eMo7rVw97SnAqOk/edit\" target=\"_blank\">following these suggestions</a>).</li>\n   <li>Give a 5-10 minute oral presentation by walking the class through your portfolio write up and providing a live demo of your working app. You may also demo the app by showing your video.</li></ol><ul>\n</ul>\n\n\n\n<h3>Grading:</h3>\n\n<p>Your project will be graded based on your portfolio write up. A helpful checklist with explanations for what \nto include in your write up is included in the <a href=\"https://docs.google.com/document/d/15H4awBUZ0GHNcG3zVaqHZ7grJHimhUEm7dPWfTmfWl0/edit?usp=sharing\" target=\"_blank\">How To: Create a Portfolio Write Up</a>\n document. Your write up will be graded using this <a href=\"https://docs.google.com/document/d/1N0JEoeeygDq7zmheZrqzBDt3vUM7nlBH0nWSUMMv2pg/edit?usp=sharing\" target=\"_blank\">App Assessment Rubric</a>.</p>\n\n<table width=\"75%\" style=\"margin:auto;\">\n  <tbody><tr>\n    <th style=\"width:25%\">App Design Criterion</th>\n    <th>How to Score a 3 for Each Criterion</th>\n  </tr>\n\n  <tr>\n    <td>Does It Work?</td>\n    <td>The app works exactly as intended, without crashing, and contains no detectable errors or bugs. </td>\n  </tr>\n\n  <tr>\n    <td>Ease of Use?</td>\n    <td>The app is easy to use, by a novice user, in an obvious way and/or there are instructions on how to use it properly.</td>\n  </tr>\n\n  <tr>\n    <td>User Interface?</td>\n    <td>The app\u2019s user interface is attractive and provides an effective way to use the app for its intended purpose.</td>\n  </tr>\n\n  <tr>\n    <td>Documentation of Code?</td>\n    <td>The source code (the blocks and components) is descriptively named and easy to read (i.e. self-documenting). The source code contains informative comments where required.</td>\n  </tr>\n\n  <tr>\n    <td>Data?</td>\n    <td>The app makes appropriate and effective use of data for the problem it solves. The app meets the specific data requirements that are included in this assignment.</td>\n  </tr>\n\n  <tr>\n    <td>Abstraction?</td>\n    <td>The app makes appropriate and effective use of procedural abstraction and/or data abstraction for the problem it solves. The app meets the specific abstraction requirements that are included in this assignment.</td>\n  </tr>\n\n  <tr>\n    <td>Algorithms?</td>\n    <td>The app makes appropriate and effective use of algorithms for the problem it solves. The app meets the specific algorithm requirements that are included in this assignment.</td>\n  </tr>\n\n  <tr>\n    <td>Specifications?</td>\n    <td>The app meets all specifications listed for this assignment.\n    <br>(For this task: uses some combination of graphics, animation, simulation, location awareness, data persistence, and/or texting; around the complexity of Android Mash or Broadcast Hub.)\n    </td>\n  </tr>\n</tbody></table>\n\n\n<table width=\"75%\" style=\"margin:auto\">\n  <tbody><tr>\n    <th style=\"width: 25%\">Write Up Criterion</th>\n    <th>How to Score a 3 for Each Criterion</th>\n  </tr>\n\n  <tr>\n    <td>Organization?</td>\n    <td>The write up is well organized in a way that is easy to follow.</td>\n  </tr>\n\n  <tr>\n    <td>Clarity?</td>\n    <td>The write up is clearly written and easy to follow/read for content.</td>\n  </tr>\n\n  <tr>\n    <td>Grammar and Spelling?</td>\n    <td>The write up contains few or no grammatical and spelling errors.</td>\n  </tr>\n</tbody></table>\n\n\n<question quid=\"5839500500533248\" weight=\"36\" instanceid=\"OCOfCoXSF3Bz\"></question><br>", "release_date": "", "unit_id": 118, "html_review_form": "<p>Please complete each item of the rubric below. As a reminder, the first option is worth 3 pts, then 2 pts, 1 pt and 0 pts. If there is an issue with the portfolio and being able to access it, try contacting the student first. If there's no response, then assign a grade of 0's (did not complete) for all items.</p>\n\n<question quid=\"6312261979209728\" weight=\"3\" instanceid=\"bFoB6PajxvNi\"></question>&nbsp;<question quid=\"5151222596108288\" weight=\"3\" instanceid=\"AGduNdADReTm\"></question>&nbsp;<question quid=\"5677619357941760\" weight=\"3\" instanceid=\"bzHM6rK8iyIT\"></question>&nbsp;<question quid=\"6641295866986496\" weight=\"3\" instanceid=\"8BCSYc1La1rt\"></question>&nbsp;<question quid=\"5183218760286208\" weight=\"3\" instanceid=\"nVWsNtdw3WrD\"></question>&nbsp;<question quid=\"5656042515988480\" weight=\"3\" instanceid=\"lpdhWXNYlCE0\"></question>&nbsp;<question quid=\"5189486661074944\" weight=\"3\" instanceid=\"eCqBTcRDvTaX\"></question>&nbsp;<question quid=\"5699190361423872\" weight=\"3\" instanceid=\"HjEocGTnULUA\"></question>&nbsp;<question quid=\"5657759429165056\" weight=\"3\" instanceid=\"HuDpsSBKSFS1\"></question>&nbsp;<question quid=\"5661094001508352\" weight=\"3\" instanceid=\"PYC5GobHzNTh\"></question>&nbsp;<question quid=\"6315386567917568\" weight=\"3\" instanceid=\"TnWLNF6w1v61\"></question>&nbsp;<question quid=\"5186362072367104\" weight=\"0\" instanceid=\"6GQQA4JpSEAz\"></question><br>", "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '2014-09-01 23:59', review_min_count: 2,\n  review_window_mins: 90, submission_due_date: ''}\n", "type": "A", "properties": {}}, {"html_check_answers": false, "now_available": true, "weight": 100, "title": "Final Exam", "href": null, "html_content": "", "release_date": "", "unit_id": 119, "html_review_form": null, "workflow_yaml": "{grader: auto, matcher: peer, review_due_date: '', review_min_count: '', review_window_mins: '',\n  submission_due_date: '2014-08-22 23:59'}\n", "type": "A", "properties": {}}], "lessons": [{"scored": false, "now_available": true, "title": "Welcome to MobileCSP", "has_activity": false, "objectives": "<p>Welcome!  <a target=\"_blank\" href=\"http://mobile-csp.org\">Mobile Computer \nScience Principles (MobileCSP)</a> is an Advanced Place (AP) \nlevel introduction to computer science.  As its name suggests, the course teaches about \nthe principles of computer science from the  perspective of mobile computing.  This \nGoogle Course Builder site is the free and open online version of the course.</p>\n\n</p><p><a href=\"http://en.wikipedia.org/wiki/Mobile_computing\">\nMobile computing</a> is an emerging field that focuses on mobile devices, such as \ntablets and smart phones.  In this course we will use the mobile programming language,\n<a href=\"http://appinventor.mit.edu\" target=\"_blank\">App Inventor</a>, to program \nour Android tablets and smart phones.   You will learn how to design and \nbuild  mobile apps -- apps that are aware of their location, apps that send and receive text \nmessages, apps that give advice and directions.  The only limit on the types of apps\nyou will learn to build is your own imagination.  So, in this course you will learn \n<i>coding</i> or <i>computer programming</i>. \n\n</p><p>But computer science is not just about coding.  So, we will also learn broadly \nabout the fundamental principles of computer science.  We'll learn about the potential\nand the limitations of computing and coding.  We'll learn how to manipulate large \ndata sets and about the importance of data in today's computing environment.  We'll\nlearn how the Internet works and how encryption is used to protect our Internet \ntransactions.  We'll  learn about the positive and negative aspects of computing in \ntoday's society.  And lots more.\n\n</p><p>For these broader computing concepts we will work within\nan emerging curricular framework known as <a href=\"http://csprinciples.org\" target=\"_blank\">Computer Science Principles (CSP)</a>.\nThis framework is being developed by leading computer science educators from \naround the country under the auspices of the College Board and with funding support\nof the National Science Foundation. It is expected that an CSP AP course will be\napproved by the 2015-2016 academic year.</p>\n\nThe following video provides a quick overview of App Inventor and Mobile CSP curriculum. \n&nbsp;If you'd prefer to browse through the presentation at your own \npace,&nbsp;click on the \"Text Version\" button.\n<br><br><gcb-youtube videoid=\"OsPTZanNGtw\" instanceid=\"DMfc9bQkG89Z\"></gcb-youtube>", "unit_id": 19, "activity_title": "", "video": "", "lesson_id": 48, "duration": "", "notes": "https://docs.google.com/presentation/d/13jibip3z37Ftxo-kuXlu64ZIhmSeaRrVab-eqnjJHLQ", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Mazes, Algorithms, and Programs", "has_activity": false, "objectives": "<h3>Let's do some programming</h3> \n\n<p>App Inventor  is based on a blocks platform named \n<a href=\"https://blockly-demo.appspot.com/static/apps/index.html\" target=\"_blank\">Blockly</a>.  This demo \nwill help you get a sense of the type of programming you will\nbe doing in this course.  It lets you write small Blockly \nprograms (called <i>scripts</i>) \nto solve Maze puzzles.\n\n<h4>Click on the maze to get started!</h4>\n\n\n<a href=\"http://learn.code.org/hoc/1\" \ntarget=\"_blank\"><img src=\"assets/img/codeorgmaze.png\"></a>\n\n<h3>Algorithms and Programs</h3>\n\n<p>An <a href=\"http://en.wikipedia.org/wiki/Algorithm\" target=\"_blank\">algorithm</a> \nis a sequence of precise instructions that solves some\nproblem or performs some computation.   A program is an algorithm that is written in\na programming language that runs on a computer.  \n\n<p>The scripts you created in the Maze demo contain all the essential <i><b>control\nstructures</b></i> that programmers use to design algorithms:\n<ul>\n<li><b>Sequence</b>.  An algorithm is a sequence of precise statements (blocks).\n<li><b>Selection (if/else)</b>. An algorithm can select between two alternative\npaths based on some condition.\n<li><b>Repetition (repeat)</b>. An algorithm can repeat a sequence of statements.\n</ul>\n\n<h3>You Have the Power</h3>\n\n<p>Here's an interesting fact:  Computer scientists have \n<a href=\"http://en.wikipedia.org/wiki/Structured_program_theorem\"\ntarget=\"_blank\">proved</a> that sequence, \nselection, and repetition are sufficient to \nbuild any algorithm that can be thought of.  In other words, any algorithm \ncan be expressed using only sequence, selection, and repetition. \n\n<h3>Food for Thought</h3>\n\n<p>Computer scientists write algorithms to solve problems. \nAnd we know now that sequence, selection, and repetition are sufficient to \nexpress any algorithm we can think of.  \n\n<p>Are there algorithms we <i>can't</i> think of?  Or, to put that another\nway, are there problems that can't be solved by an algorithm?   What do you\nthink?\n\n<p>That's one of the interesting questions we will take up in this course. ,\nIn a few weeks, you'll know the answer.\n\n", "unit_id": 19, "activity_title": "", "video": "", "lesson_id": 69, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Google Account and Portfolio Set Up", "has_activity": false, "objectives": "Here are the list of steps you need to do to get set up:\n\n<ol>\n<li>Get a Google account (e.g., Gmail).</li>\n<li>Create a Google sites portfolio. </li>\n<li>Customize your portfolio according to the MobileCSP style.</li>\n<li>Share the link to your Google site with your teacher</li>\n</ol>\n\n<h3>Google Account</h3>\n\nIn order to \nbuild apps with App Inventor you will need a Gmail account. If you don't already have an \naccount <a href=\"https://accounts.google.com/SignUp\" target=\"_blank\">\nvisit the Google Signup Form</a> and  follow the instructions there for setting up \nan account.<p></p> \n\n<h3>Why a Portfolio</h3>\n\n<p>A Google site is a website.  We will be using a Google site to share ideas and to \npresent our apps and other work.  For each app that you build you will be asked to\ncreate a web page that describes your app and gives visitors links to download and\nrun your app.  For non-programming lessons you will be asked to answer questions\nabout a reading or to share your reflections about a contemporary issue such as \"Privacy\".\n\n</p><p>By the end of this course you will be very skilled at creating and maintaining\nyour own simple web site. Do your best to make your site attractive and informative.\nYour site will be one way to express yourself and \"Show your stuff!\"</p>\n\n<h3>Create and Customize Your Portfolio</h3>\n\n<p>To get started:<br><ol><li><span style=\"line-height: 1.22;\">Go to Google sites (<a href=\"http://sites.google.com\" target=\"_blank\">sites.google.com</a>).&nbsp;</span></li><li><span style=\"line-height: 1.22;\">Make sure you are logged in and click the red 'CREATE' button on the top left.&nbsp;</span></li><li><span style=\"line-height: 1.22;\">On the next page, click \"Browse the gallery for more.\"</span><br></li><li><span style=\"line-height: 1.22;\">In the search box, type \"Mobile CSP\" and press Enter.</span></li><li><span style=\"line-height: 1.22;\">Click on the \"Mobile CSP Student Portfolio\" to select it and then scroll to the bottom of the window and click the blue \"Select\" button.</span></li><li><span style=\"line-height: 1.22;\">Name your site using a&nbsp;</span>descriptive name, such as \"John Jone's Mobile Computing Portfolio\"</li><li>Type in the code shown</li><li>Click the red \"CREATE\" button again and wait for your site to load.</li></ol><span style=\"line-height: 1.22;\">Notice there is a navigation bar containing the following categories:</span><br></p><ul><ul><li><i>Homework</i></li><li><i>Creative projects</i></li><li><i>Reflections</i></li><li><i>Performance Tasks</i></li></ul></ul><span style=\"line-height: 1.22;\">You will add pages to each of the four categories as you complete the lessons in this course.</span><br><p>At a<span style=\"font-style: italic;\"> minimum</span> your site should have the following\nfeatures:</p><ul>\n<li>A home page with whatever personal information you want to share about \nyourself, including a photo or image. The photo doesn't have to be a personal photo.</li>\n</ul>\n\n<p>Here is another example of a site that provides a <a href=\"https://sites.google.com/site/sitesetupguide/home\" target=\"_blank\">step-by-step guide</a> for setting up a Google site and for how to add/customize pages.\n\n</p><h3>A Link to Your Portfolio</h3>\n\n<p>When you have completed this lesson use the Gmail account that you created to \nsend your instructor a link to your portfolio. \n</p>", "unit_id": 19, "activity_title": "", "video": "", "lesson_id": 49, "duration": "", "notes": "https://support.google.com/sites/answer/153098", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "App Inventor Setup", "has_activity": false, "objectives": "<img src=\"assets/img/appinventor-logo.png\"><br>\n\n<span class=\"yui-tag-span yui-tag\" tag=\"span\" style=\"font-size: 16px;\">For this \nlesson, we refer you to MIT's App Inventor site, which has complete setup \ninstructions. &nbsp; &nbsp;&nbsp;\n\n<p>The setup requires that you already have a gmail account. If you do not, \nyou should\ngo back to the \n<a href=\"https://ram8647.appspot.com/mobileCSP/unit?unit=19&amp;lesson=49\">previous lesson</a> \nbefore moving on.</p>\n\n<p>App Inventor is a <a href=\"http://en.wikipedia.org/wiki/Cloud_computing\" target=\"_blank\">cloud application</a>. \nIt runs completely within a browser. \nChrome, Firefox and Safari are the recommended browsers. Make sure your computer\nhas the latest version of your preferred browser.</p>\n\n<p>The Setup instructions describe three options for developing apps with App Inventor:\n</p><ul>\n<li>Wifi: Connecting a mobile device (tablet or smart phone) via a Wifi link.</li>\n<li>USB: Connecting a mobile device via a USB cable.</li>\n<li>Android emulator: Using emulator software running on your computer to test your apps.</li>\n</ul>\n<p>We recommend that you set yourself up for all three options.  This course is\nbest experienced with a mobile device, either an Android tablet or smartphone.  \nNot all lessons will work completely with the emulator.  But there are times when the\nemulator will come in real handy.</p>\n\n\n<p>To get started with setup just  \n<a href=\"http://appinventor.mit.edu/explore/ai2/setup\" target=\"_blank\">click here</a> \nor click on the \"Text Version\" button. Once you've finished the setup, you can use the Test App below to know if all the components are working correctly.</p>\n\n\n<h2>Testing Your Setup</h2>\n\nFollow these instructions to create a simple test app to make sure that your \ndevice is properly configured with <i>Wifi</i> or the <i>Emulator</i> and the <i>App Inventor Companion</i>.\nIf your device is properly configured, then using the App Inventor \nCompanion to scan the barcode should result in the app opening on your device. \n\n<ol>\n<li>Download \n<a href=\"http://appinventor.cs.trincoll.edu/csp/week1/templates/TestApp/TestApp.aia\">\nTestApp.aia</a>, the App Inventor Test App project  and remember where\nyour computer downloads the file (e.g., Desktop, Downloads folder). \n(NOTE: App Inventor project files are <i>zip archives</i> but they have the App Inventor suffix, <i>.aia</i>, short for App Inventor Archive.)\n\n<p></p></li><li>Open <a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu\">App Inventor 2</a>.  \n<p></p></li><li>Go to Project.\n<p></p></li><li>Select <i>Import Project (.aia) from my computer</i>. \n<p></p></li><li>Browse to and select the <i>TestApp.aia</i> project you just downloaded.\n</li></ol>\n\n<p>When the project opens, you will be viewing the <i>App Inventor Designer</i>. \n\n</p><p><img src=\"assets/img/testappdesigner.png\">\n\n</p><p>The Designer is where you will design your app's <i>User Interface</i>. This\napp has an image, a couple of labels that display text and a <i>Player</i> \ncomponent that will play a triumphant sound.\n\n</p><p>Now, switch to the Blocks \nEditor by clicking on Blocks in the top right-hand corner of your window.\n\n</p><p><img src=\"assets/img/testappblocks.png\">\n\n</p><p>The Blocks Editor is where all the coding happens.   Notice that App Inventor\nblocks connect together like puzzle pieces.  The blocks for this app\nwill cause it to display a congratulatory message on your screen and play a sound.  \n\n</p><p>You are on your way to becoming a programmer!\nIn the next lesson, you will learn how to navigate through the different views, \nwhat each view is specifically for, how to design an app, and how to program an app. \n\n</p>\n<h3>Running the App on your Device</h3>\n\n<p>For now, we just want to make sure everything is set up properly. Follow these\ninstructions to test your set up. \n\n</p>\n<ol>\n<li>Make sure that both your computer and your phone or tablet are connected to the same wifi, then s<span style=\"line-height: 1.22;\">tart the </span><a target=\"_blank\" href=\"https://play.google.com/store/apps/details?id=edu.mit.appinventor.aicompanion3\" style=\"line-height: 1.22;\">MIT AI2 Companion app</a><span style=\"line-height: 1.22;\">\n on your phone or tablet.</span></li> <p></p>\n\n<p></p><li>App Inventor, click Connect and then select \n<i>AI Companion</i>. This will \ndisplay a 6-letter code both as a barcode and as plain text. (Note: The 6-letter code will be a unique code and different from the one shown below)<p><img src=\"assets/img/testappselect.png\">\n</p>\n<p><img src=\"assets/img/testappcompanion.png\">\n</p>\n\n</li>\n<p></p>\n\n<p></p><li>On the companion app, either type in the 6-letter code and click the \n\u201cConnect to App Inventor\u201d button or scan the barcode.</li></ol>\n\n<h3>Running the App on the Emulator</h3>\n\n<p>If you are using the <i>Emulator</i>, the steps are as followed:\n\n</p><ol>\n<li>In App Inventor, click Connect and then select \n<i>Emulator</i>. \n\n<p></p></li><li>This will automatically connect to the app to the\nthe Emulator. There is no need to scan a barcode or type in a 6-digit code.\nThe connection will happen automatically.\n</li>\n\n</ol>\n\n<h3>Troubleshooting</h3>\n\n<p>If everything is configured properly, you should see the Test app on \nyour device or emulator. You should see a message and an image of an Android. \nYou should also hear a round of applause for your great work! \n\n</p><p>If the app is not running correctly, you may need to retrace your setup steps to\nmake sure you performed all of the necessary steps. After doing that, if you are still\nhaving problems, post a question in the forum. \n\n\n\n\n\n \n\n\n\n\n</p></span>", "unit_id": 19, "activity_title": "", "video": "", "lesson_id": 50, "duration": "", "notes": "http://appinventor.mit.edu/explore/ai2/setup", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Blown to Bits (BB)", "has_activity": false, "objectives": "<a href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=19\" target=\"_blank\">\n<img src=\"assets/img/blowntobits.jpg\" align=\"left\" hspace=\"10\"></a> \nComputing has transformed our lives in so many ways. And mobile computing, \nwhere we are constantly connected to others and to the world via our mobile\ndevices, is challenging us right now to come with \nnew norms about privacy, security, the ownership or openness of data and information,\nand other issues. \n&nbsp;\n\n<br><br>Like any technology, mobile computing has both positive and \nnegative impacts. We need to reflect on these impacts in general and we also \nthink about the impacts we will create as we build our own mobile apps. \n\n<br>\n<br>One way we will be addressing these issues in this course is by reading and discussing \n<i>Blown to Bits: Your Life, Liberty, and Happiness After the Digital Explosion. \n&nbsp;</i> The book is available entirely online with a separate PDF file for each chapter. \nYou can access the website for the book by clicking the book image to the left.", "unit_id": 19, "activity_title": "", "video": "", "lesson_id": 70, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Joining the Forum", "has_activity": false, "objectives": "Online discussion forums allow students to share ideas with each other and to help each other when encountering stumbling blocks. We encourage you to post questions or ideas in messages that follow the etiquette guidelines below.&nbsp;<br><br><div class=\"yui-wk-div\"><b style=\"font-size: 14px;\">Forum Etiquette:</b><br><ul><li>Stay on topic - use the miscellaneous category if you want to explore side topics</li><li>Avoid inflammatory language - we are all here to learn</li><li>Search the forum for answers to your question before posting in the help area</li><li>Try to write in complete sentences and avoid things like caps lock or typing like texting</li></ul><div class=\"yui-wk-div\"><b style=\"font-size: 14px;\">Using the Forum:<br></b>Click the Forum link in the course navigation bar. To add a new post, click the \"New Topic\" button. To view posts in each category, click the links (such as Unit 1 Discussion). Each time you post, make sure you select the category you are posting under to keep the forum organized.<br><h3>Managing Forum Emails:</h3>If you want to change how frequently you receive emails about postings to the Forum, click the Membership and email settings button on the Forum page (just below and to the right of New Topic).<br><br><br>\n<br>\n<img src=\"assets/img/forum_newposting_student.png\"><br><br><br>\n<img src=\"assets/img/forum_selectcategory_student.png\" width=\"746\" height=\"330\"><br><br><br>\n<img src=\"assets/img/forum_changesettings.png\">\n</div></div>\n", "unit_id": 19, "activity_title": "", "video": "", "lesson_id": 58, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Unit Overview", "has_activity": false, "objectives": "<p>This unit focuses on App Inventor's image and sound features and related topics\nfrom the Computer Science (CS) Principles curriculum.\n\n</p><h3>Unit Features</h3>\n<ul>\n<li><span style=\"font-weight: bold;\">Programming:</span> The course's first programming project is the <i>I Have a Dream</i>\napp.  The first <span style=\"font-style: italic;\">I Have a Dream</span> tutorial introduces the basics of developing an App Inventor app. More complex programming concepts are introduced in a second version of the app.&nbsp;This is followed by some&nbsp;<i>creative projects</i>&nbsp;that challenge students to enhance the app.</li><li><span style=\"font-weight: bold;\">CS Principles:</span> CS Principles lessons provide a basic overview of \ncomputer hardware and software, present a first look at <i>abstraction</i>, one\nof the seven Big Ideas, and a first look at <i>binary numbers</i>.\n</li></ul>", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 43, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "I Have a Dream Tutorial", "has_activity": false, "objectives": "<table><tbody><tr><td><iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/0vLz8TIwido?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358482\">\nTeacher Tube version</a>)</td>\n<td><b><i>I Have a Dream!</i></b> is an educational \"soundboard\" app that plays the famous speech of Martin Luther King.\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>follow an instructor-led walkthrough to create the <i>I Have a Dream</i> app on \na mobile device;\n</li><li>navigate the App Inventor programming platform;\n</li><li>develop your understanding of what an App Inventor program is;\n</li><li>develop your understanding of event handlers;\n</li><li>develop your understanding of how an app makes decisions with <i>if-else</i> control blocks.</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n <br>\n\n<h2>Tutorial</h2>\n\n<p>To get started, \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit2/templates/IHaveADreamStarter/IHaveADreamStarter.asc\">\nopen the I Have a Dream Starter project in App Inventor</a>\n and follow along with the following tutorial. NOTE: The video asks you to open a starter app, but if you\nuse the link above the IHaveADreamStarter app will already be loaded.\n<gcb-youtube videoid=\"4tB_BuV1tew\" instanceid=\"JLdkGAa9NGWK\">\n</gcb-youtube>\n<br></p>\n\n<h2>Exercises</h2>\n\n<p>Complete the following exercises.&nbsp;<br>\n<question quid=\"5733935958982656\" weight=\"1\" instanceid=\"yOkVTqWogdaF\">\n</question>\n\n<br>\n<question quid=\"5693417237512192\" weight=\"1\" instanceid=\"pERZIYiMxcKV\">\n</question>\n\n<br><question quid=\"5766466041282560\" weight=\"1\" instanceid=\"1ttlsfX8NBTz\">\n</question>\n\n<br><question quid=\"5634387206995968\" weight=\"1\" instanceid=\"qKJyEkTbBD6m\">\n</question>\n\n<br><quizly-quizlyexercise quizname=\"quiz_pause_the_player\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"775\" instanceid=\"LXgF4NO50hNM\">\n</quizly-quizlyexercise>\n\n<br><quizly-quizlyexercise quizname=\"quiz_button_click_stop_player\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"775\" instanceid=\"BtQ8hSoGkeml\">\n</quizly-quizlyexercise>\n\n<br></p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nIn your portfolio, create a new page named \n\n<i>I Have a Dream </i> and answer the following questions:\n<ol>\n<li>In your own words, describe what event driven programming is. What <b><i>event handler</i></b> was used in the \n<i>I Have a Dream</i> app?  How was it used?  \n</li>\n\n<li>Is it possible to create an app without event driven programming?   Explain.\n</li>\n\n<li>What elements and components make up the <b><i>User Interface (UI)</i></b> for the <i>I Have A Dream</i> app?\n</li>\n\n<li>What are some of the elements that make up the <i>UI</i> for a car?  A vending machine?\n</li>\n</ol>", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 45, "duration": "", "notes": "https://docs.google.com/document/d/1ONKQvL9QwczUtyHRzvO9BZrlh89PKgb4YANoOdzjV60", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "I Have a Dream, Part 2", "has_activity": false, "objectives": "<table><tbody><tr><td>\n<iframe width=\"400\" height=\"400\" src=\"//www.youtube-nocookie.com/embed/qvimSRfiOKk?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358484\">\nTeacher Tube version</a>)</td><td><b><i>Enhancing I Have a Dream.&nbsp;</i></b>The I Have a Dream app only had one picture and speech, and it didn't allow you to pause the speeches.  \nIn part 2, you'll add a speech of Malcolm X to show the contrast of these two great leaders, and you'll code it so each speech can be paused. \n<br><br>\nThis tutorial introduces the concept of an <i><b>if-else condition</b></i>, which enables an app\nto ask questions and make decisions-- its one of the fundamentals of \"artificial intelligence\".\n<br>\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n\n<li>follow an instructor-led walkthrough to create the <i>I Have a Dream </i>app on a mobile device.\n</li><li>utilize a conditional <i>if-else</i> block to improve the app's behavior.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<br>\n<br>\n<h2>Tutorial</h2>\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu\" target=\"_blank\">open App Inventor</a>\n in a separate tab and follow along with the following tutorial.   For this\nproject you can use your own app from the previous I Have a Dream lesson.\n</p>\n<br><gcb-youtube videoid=\"4tdy8lO81Rw\" instanceid=\"S3e5aIvB6WRq\"></gcb-youtube><br>\n<br>\n\n<h2>Exercises</h2>\n<p>Complete the following exercises.\n\n<br><question quid=\"5676455606353920\" weight=\"1\" instanceid=\"0RkIU8zt8iQk\">\n</question>\n<br>\n\n<question quid=\"4856128127107072\" weight=\"1\" instanceid=\"BO7hyuoDvfxw\">\n</question>\n<br>\n\n<question quid=\"5157289489072128\" weight=\"1\" instanceid=\"a8Iw6BoPoOAc\">\n</question>\n<br>\n\n<quizly-quizlyexercise quizname=\"quiz_stop_player_if_playing\" \npreamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" \nheight=\"495\" width=\"775\" instanceid=\"Dstsv7VuDQb5\">\n</quizly-quizlyexercise>\n<br>\n\n<quizly-quizlyexercise quizname=\"quiz_if_else_stop_start_player\" \npreamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" \nheight=\"495\" width=\"775\" instanceid=\"twxBgieSEwqs\">\n</quizly-quizlyexercise>\n<br>\n\n\n</p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nIn your portfolio, create a new page named \n\n<i>I Have a Dream Part 2</i> and answer the following questions:\n<ol>\n\n<li>What components make up the <b><i>User Interface (UI)</i></b> for \nthis enhanced version of the <i>I Have A Dream</i> app?\n</li>\n\n\n</ol>", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 56, "duration": "", "notes": "https://docs.google.com/document/d/1U2M72V0XGXl0j6F72UX_QB3uY939f2LhVnlTyixWH6k/edit?usp=sharing", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Mobile Apps and Mobile Devices", "has_activity": false, "objectives": "<p>Mobile devices -- smart phones and tablets -- are <b><i>general purpose \ncomputers</i></b>.  They have all the computing capabilities as desktop and laptop\ncomputers, plus they are mobile. \n\n</p><p>This lesson focuses on the basic <b>hardware</b> and <i><b>software</b></i> \nthat work together to enable our mobile devices to run the amazing apps that we'll be\nbuilding.\n\n</p><p>As fledgling programmers it's important that we understand how the programs we\nwrite are interpreted and processed by the computer. \n</p>\n\n<h2>Video Presentation</h2>\n\nIf you are unable to stream the YouTube video, click here for a <a target=\"_blank\" \nhref=http://www.teachertube.com/video/mobileappsanddevices-348078\">Teacher Tube\nversion</a>.\n<gcb-youtube videoid=\"s7pSJJ_tPE4\" instanceid=\"vwMIctATXqP7\">\n</gcb-youtube>\n\n<h2>Questions</h2>\n\n<question quid=\"5754903989321728\" weight=\"1\" instanceid=\"iu26NDHIHbhb\">\n</question>\n<br><question quid=\"5643440998055936\" weight=\"1\" instanceid=\"FdPBojxoxLkw\">\n</question>\n<br><question quid=\"5709068098338816\" weight=\"1\" instanceid=\"Hzi4D2v3JrUc\">\n</question>\n<br><question quid=\"5191954035900416\" weight=\"1\" instanceid=\"i6UUvX5q6QId\">\n</question>\n<br><question quid=\"5747976207073280\" weight=\"1\" instanceid=\"OIQzu6SMmDXo\">\n</question>\n<br><question quid=\"5080491044634624\" weight=\"1\" instanceid=\"3gb7AhI3JIob\">\n</question>\n\n\n\n<h2>Still Curious?</h2>\n\nHere are some additional resources you might want to look at to learn more about how\ncomputer's work:\n\n<li><a href=\"http://www.gcflearnfree.org/computerbasics\" target=\"_blank\">Computer basics</a>.  \nVideos and lessons from LearnFree.org on \n<ul>\n<li>What is a computer?\n<li>Understanding operating systems\n<li>What is the cloud?\n<li>and other topics...\n</ul>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nIn your portfolio, create a new page named <i>Hardware and Software</i> and \nanswer the following questions:\n\n<ol>\n\n<li>Give an example of a <i>special purpose computer</i> that you are familiar with\nand briefly describe its hardware and its software.\n</li>\n\n<li>Explain in your own words the difference between running your app by \"Connecting\nto the Companion\" and running your app by \"Packaging\" it.\n</li>\n\n<li>As we learned in this lesson, a <i>byte</i> is about the same amount of memory \nas a character, such as the letter 't'.  There are approximately 7 million characters in all of \nthe Harry Potter novels combined. How many \nbytes of memory would all of the Harry Potter novels take up?   How many copies of the \nHarry Potter novels would fit on a 7 Gigabyte flash drive. (Remember 1 Gigabyte is 1 billion\nbytes.)\n\n</li>\n\n</ol>", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 46, "duration": "", "notes": "https://docs.google.com/presentation/d/1C9WEECcSMWN1N28dM-7P4cE0jwEoUkSj1Dwhpkegpdw", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "I Have a Dream Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table>\n<tbody>\n<tr>\n   <td>\n   <iframe width=\"300\" height=\"225\" src=\"//www.youtube.com/embed/jGHZrR7X4Jw?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n   </iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358487\">\nTeacher Tube version</a>)\n   </td>\n   <td><b><i>Be Creative!</i></b> In this lesson you will complete several \n      small programming projects that add enhancements to the \n     I Have a Dream app.  Hints and suggestions are provided.  \n<br>\n<p>\n<b>Objectives:</b> In this lesson you will: \n</p>\n<ul>\n<li>continue learning to navigate the App Inventor programming platform;\n</li><li>deepen your understanding of event-driven programming.\n</li>\n</ul>\n<p>\n<b>Programming Projects</b>\n</p>\n <ol>\n<li>Give the app its own custom icon that will appear in the device's app launcher  \n(Hint: Look in the <i>Screen</i>'s properties);\n</li>\n\n<li>Use App Inventor's <a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/reference/components/media.html#TextToSpeech\">\nText-to-Speech</a> component (Media drawer) to get the app to speak some words\ninstead of playing a speech when the Malcolm X button is pressed \n</li>\n\n<li>Have the app vibrate the phone as well as play a speech when the MLK button is\npressed (Hint: the Sound component has a Vibrate block.  <font color=\"red\">NOTE:</font> \nNot all Android devices have\na vibrate mode, which is usually a Sound setting.  For example, Nexus 7 tablets can not\nvibrate.)\n</li>\n\n<li>Use App Inventor's <a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/reference/components/sensors.html#AccelerometerSensor\">\nAccelerometer Sensor</a> (Sensor drawer)\nto  trigger Malcolm X's Text-to-Speech when the device is shaken.\n</li>\n\n<li><b>Challenging: </b>Create your own <i>Soundboard</i> app with at least three pictures and \nthree sound files that are played when you click the pictures.  \n\n</li></ol></td>\n</tr>\n</tbody>\n</table>\n\n<h2>Enhancing the I Have a Dream App</h2>\n\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu/\" target=\"_blank\">open App Inventor</a>\n in a separate tab and open your I Have a Dream app from the previous lesson.\n</p>\n\n<p>Then complete the programming exercises described above and in the preview video.  \n</p>\n\n<h3>Resizing Images and Sound Files</h3>\n<p>App Inventor apps have a <b>5 Mb size limit</b>.  Therefore not all images and\nsounds you upload will work in your app.  Here are some tools that can\nbe used to resize images and sounds:\n\n</p><ul>\n<li>On MacOS, the <i>Preview</i> application can be used to resize images.  Just\nopen the image in Preview and use the <i>Tools</i> menu to resize it.\n</li>\n<li>On Windows machines, the <i>Paint</i> application can be used to resize\nimages.  Just open the image and use the <i>Resize</i> tool.\n</li>\n<li>For editing sound files,  <a target=\"_blank\" href=\"http://audacity.sourceforge.net/\">\nAudacity</a> is a free and open source sound file editor for all platforms.\n</li>\n<li>You can also downsize sound files using the free online web app <a target=\"_blank\" href=\"http://cutmp3.net/\">CutMp3.net</a>.\n</li>\n</ul>\n\n<h3>Copyright</h3>\n\n<p>Many sounds and images online are copyrighted and it is a <b><i>violation\nof copyright</i></b> to include such images in your app.  So, you should be\ncareful about the images and sounds you put into your apps.  If you want to use\na copyrighted image or sound in your app, you will have to get permission from \nthe holder of the copyright.  It might be easier just to search for free media.\n</p>\n\n<p>There are sites that offer free audio and image files, including the following: \n\n</p><ul>\n<li><a target=\"_blank\" href=\"http://commons.wikimedia.org/wiki/Main_Page\">\nWikimedia commons</a> is a great source of free and open source media.  Any files\nfound on its sites can be used in apps without violating copyright.\n</li>\n<li><a target=\"_blank\" href=\"http://free-sfx.com/\">Free Sfx Dot Com</a>.\n</li>\n</ul>\n\n\n<h2>Solutions</h2>\n\n<p>It is important to explore with App Inventor and become accustomed to \nprogramming without explicit instructions. So try out the challenges listed above \nand see how far you can get. \n\n</p><p>If you get stuck, -- or, after you've finished, to compare your solutions to ours -- \n check out this video which demonstrates how to make the  changes:\n<br>\n<br>\n\n<gcb-youtube videoid=\"rM-gWYFCrYc\" instanceid=\"wxF1LYsIEkqF\">\n</gcb-youtube><br></p>\n\n<h2>Questions and Exercises</h2>\n<p>\n<question quid=\"5557132019630080\" weight=\"1\" instanceid=\"RSLesAk3OH3v\">\n</question>\n\n<br><question quid=\"5231342912536576\" weight=\"1\" instanceid=\"SaOsOakEHmyK\">\n</question>\n\n<br><question quid=\"5745062340198400\" weight=\"1\" instanceid=\"fDYXdDroR23O\">\n</question>\n<br></p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nIn your portfolio, create a new page named <b><i>I Have a Dream 3</i></b> under\nthe <i>Creative Projects&nbsp;</i>category of your portfolio and  answer the following questions:\n\n<ol>\n\n<li>In this lesson, you created your own <i>sound board app</i>.  Give a brief\ndescription of it here.  Describe its theme, if it has one, and what particular sounds\n(music or speeches) it plays.\n</li>\n\n<li>Describe how you designed your app's UI. What components does it use?\n</li>\n\n<li>Now that you've had some experience building apps in App Inventor, what do\nyou think about <i><b>programming</b></i>.  Is it a creative activity?  In what ways does it allow\nyou to express yourself?\n</li>\n\n</ol>", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 47, "duration": "", "notes": "https://docs.google.com/document/d/1zbf8peBObd8GOewfa0oSjnQ6bAb1h1CjTg_tCrnA9qU/edit?usp=sharing", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "What is Abstraction", "has_activity": false, "objectives": "<br><b style=\"color: rgb(17, 17, 17);\"></b>\n\n<h2>Introduction</h2>\n\n<p>One of the Big Ideas of the Computer Science Principles course is <i>Abstraction</i>. &nbsp;\nAs we will see throughout the course, abstraction is an important concept and \npractice in computer science. &nbsp; But what exactly <i>is</i> abstraction?\n\n</p><p>This lesson is provides a quick introduction to this key concept.\n\n</p><h2>Lecture</h2>\n\nIf you are unable to stream the YouTube video, click here for a <a target=\"_blank\"\nhref=\"http://www.teachertube.com/video/abstraction-347740\">Teacher Tube version</a>.\n<gcb-youtube videoid=\"KjO5A3McPwY\" instanceid=\"jp2FrWytPmlm\">\n</gcb-youtube>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/abstraction-347740\">\nTeacher Tube version</a>\n\n\n<h2>Questions</h2>\n\n<p>For the following set of  questions, you can click the <i><b>Check Answer</b></i> \nbutton at any time to get feedback on one or more of the particular questions.  When all\nof the answers are correct, you will receive the \"Yes, the answer is correct\" feedback. If\nsome of your answers are correct, you will receive the \"The answer is partially correct\"\nfeedback.\n\n<br><br><question quid=\"5697982787747840\" weight=\"1\" instanceid=\"QjB98dAnjyPE\"></question><br><question quid=\"5165166324875264\" weight=\"1\" instanceid=\"PScwaqWWXXEs\"></question><br><question quid=\"5098508432441344\" weight=\"1\" instanceid=\"SHP7Lbhcd40K\"></question><br><question quid=\"5764640680181760\" weight=\"1\" instanceid=\"RNoJcSLDh6M7\"></question><br><question quid=\"6206390951477248\" weight=\"1\" instanceid=\"1HKke4LnnKph\"></question><b style=\"color: rgb(17, 17, 17);\"><br></b>\n\n</p><h2>Reflection: For Your Portfolio</h2>\n\nIn your portfolio, create a new page named \n<b><i>Abstraction 1</i></b> and provide thoughtful answers to  the following questions:\n\n<ol>\n   <li>Write an explanation of abstraction, including at least one example, in your own words.</li>\n\n   <li>Give 2-3 examples of abstractions in every day life not identified in the lecture.</li>\n\n   <li>Consider an example of software, a mobile application, or a web site and explain \n   how it is an abstraction.</li>\n\n</ol>\n\n\n", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 61, "duration": "", "notes": "https://docs.google.com/presentation/d/1nOMpxZpdkCcS6Wc-eU8eeBi-z55LyKSJRBCVolJDM78", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "BB: The Digital Explosion", "has_activity": false, "objectives": "<a href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=19\">\n\n<img src=\"assets/img/blowntobits.jpg\" width=\"150\" align=\"left\" hspace=\"10\"></a>\n \n<p>Computing has transformed our lives in so many ways. And mobile computing, \nwhere we are constantly connected to others and to the world via our mobile\ndevices, is challenging us right now to come with \nnew norms about privacy, security, the ownership or openness of data and information,\nand other issues. </p>\n\n\n<p>Like any technology, mobile computing has both positive and \nnegative impacts. We need to reflect on these impacts in general and we also \nthink about the impacts we will create as we build our own mobile apps.</p>\n\n\n\n<br>\n<br>\n<br>\n<br>\n<h2>Chapter One: The Digital Explosion<br>\nWhy Is It Happening and What Is At Stake?</h2>\n\n<a href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=19\" target=\"_blank\">\nChapter One of Blown to Bits</a> makes the point that today everything is \ndigital -- that is, everything is represented by binary digits or bits. And it \nprovides some provocative examples of the societal implications of this digital \nexplosion. \n\n<p>Read Chapter One to learn more about how digital our world has become.\n\n<h2>Homework: For Your Portfolio</h2>\n\n<p>Create a page called <b><i>Blown to Bits Chapter 1</i></b> under the \n<i>Homework</i> category of your Portfolio and post brief answers using \ncomplete sentences to  the following questions on that page.\n<br>\n<ol>\n<li>What is a <i>bit</i> and what does it mean to say that \"it's all just bits\"? (Koan 1) \nGive examples of the things today that are stored in bits?</li><li>Describe, in your own words, Moore's Law.\n\n</li><li>Someone offers you a summer job and offers you two pay rates: (1) $10 per hour \nfor 40 hours per week for 30 days or (2) One cent on day 1, two cents and day two, \nfour cents on day three and on (doubling each day) for 30 days. If you were trying to \nmake as much money as possible in 30 days, which pay rate would you choose? \nWhat does this illustrate?\n\n</li><li>Give an example of how the digital explosion is \"neither good nor bad\" but has \nboth positive and negative implications.\n\n</li></ol>\n", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 62, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Binary Numbers", "has_activity": false, "objectives": "\n<h2>Introduction</h2>\n\n\n<p><img width=\"32\" align=\"left\" src=\"https://ram8647.appspot.com/mobileCSP/assets/img/smiley.jpg\">\n</p><h3><font color=\"blue\">There are only 10 types of people in the world. \nThose who understand binary and \nthose who don't!</font></h3>\n<br>\n\nIf you are unable to stream the YouTube video, click here for the \n<a target=\"_blank\" href=\"http://www.teachertube.com/video/binaryintrol-348081\">\nTeacher Tube version</a>.\n<gcb-youtube videoid=\"942B8gHPwYI\" instanceid=\"d2mszPfK8KG6\">\n</gcb-youtube>\n \n\n<h2>Video: Counting in Binary</h2>\n\n\n<p>Do you get the joke at the beginning this lesson?  If not, you'll certainly get it\nafter watching this video from the <a target=\"_blank\" href=\"http://csunplugged.org/\">Computer Science \nUnplugged</a>, which illustrates how the binary number system works. </p>\n\n\n<gcb-youtube videoid=\"b6vHZ95XDwU\" instanceid=\"SxiFNBY2N4EW\">\n</gcb-youtube>\n\n<h2>Video: Converting Binary to Decimal</h2>\n\n<p>As you saw in the video, the binary number system is a\n<i><b>positional number system</b></i> \nThe value of a particular digit depends on its <i><b>place</b></i>.\nAfter you've watched the video, there's an activity to give you some \npractice at converting binary to decimal. \n</p>\n\n<p>In this next short video, you'll learn a simple algorithm for converting a binary number \ninto a decimal.</p>\n\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/binarytodecimal-348082\">\nTeacher Tube version</a>)\n<gcb-youtube videoid=\"2x-qSdc8WSE\" instanceid=\"HtIbjKJk2N0M\">\n</gcb-youtube>\n\n<h2>Activity: Now You Try It </h2>\n\n<p>Use the algorithm described in the video \nwith this interactive Khan Academy component to convert binary to decimal.<br></p>\n\n<khanex name=\"binary-to-decimal\" instanceid=\"c0WVFSTr1I27\"></khanex><br>\n\n<h2>Video: Converting Decimal to Binary</h2>\n\n<p>You can  a similar algorithm to convert decimal numbers into binary.  \nThis next short video shows you how.</p>\n\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/decimaltobinary-348085\">\nTeacher Tube version</a>)\n<gcb-youtube videoid=\"5x5lpN48npE\" instanceid=\"UsewWRQ5jEbX\">\n</gcb-youtube>\n\n\n<h2>Activity: Now You Try It</h2>\n\n<p>Use the algorithm described in the video with this interactive Khan Academy component to \nconvert decimal to binary.</p>\n\n<khanex name=\"decimal-to-binary\" instanceid=\"izfNpB9S1012\"></khanex><br>\n\n<h2>Video: Bases and Positional Number Systems</h2>\n\n<p>One problem with binary  numbers is that it takes lots of digits to represent relatively\nsmall numbers. For example,  a number like 1 million would require 20 binary digits:\n11110100001001000000.\n<br><br>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/hexoctal-348088\">\nTeacher Tube version</a>)\n<gcb-youtube videoid=\"lj1GyXPPYWk\" instanceid=\"YjCDRfhdZoZN\">\n</gcb-youtube>\n\n\n</p><h2>Activity: Now You Try It</h2>\n<p>Use this interactive Khan Academy component to convert binary to hex.<br><khanex name=\"binary-to-hex\" instanceid=\"ZCFDqyOyUO7C\"></khanex><br></p>\n\n<h2>Still Curious?</h2>\n\n<p>If you'd like to learn more about the relationship between binary and decimal numbers, \ntake a look at this&nbsp;<a href=\"https://www.khanacademy.org/\">Khan Academy</a> video:\n</p>\n\n<gcb-youtube videoid=\"ry1hpm1GXVI\" instanceid=\"IWV2e8KDQwTM\">\n</gcb-youtube>\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>In your portfolio, create a new page named <i><b>Binary Numbers</b></i> \n under the <i>Reflections</i> category of your portfolio and answer the following \nquestions:\n</p>\n\n<ol>\n<li>Figure out what decimal value is represented by the following binary number\n<tt> 0011 1010 0011</tt>\n</li>\n\n<li>Represent the decimal value 517 as a binary number.\n</li>\n\n<li>The binary number system is <i>base 2</i> and has 2 digits.  The \ndecimal number system is <i>base 10</i> and has 10 digits.  The <i>octal\nsystem</i> is <i>base 8</i>. How many digits does it have?  What are they, \nstarting at 0?\n</li>\n\n<li>Suppose the number 523 is a base-8 octal number. What would \nits value be in decimal?  In binary?\n</li><li><b>Challenging:</b> Convert the <b> base-5 </b> number 243 \ninto decimal.\n</li>\n\n</ol>", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 63, "duration": "", "notes": "https://docs.google.com/document/d/1d-p1_AxfEuufgvQTKXRPynsK1cJ2UrRxOhM1sKPoSOo", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Where is North: A Compass App", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/3Mvjt3ZgjKU?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\"\nhref=\"http://www.teachertube.com/video/whereisnorthpreview-348093\">\nTeacher Tube version</a>)\n\n</td><td>\n<b><i>Where is North:</i></b> This app uses the orientation and\nlocation sensors to create a simple compass app.\n\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>Create an app that\n<ul>\n<li>uses the Global Positioning System (GPS) to display your latitude and longitude,\n</li><li>uses the OrientationSensor to point to North,\n</li><li>uses the Canvas component for drawing,\n</li><li>uses an ImageSprite component to animate the arrow.\n</li></ul>\n</li><li>Think abstractly about the problem of placing labels on various sized screens.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<h2>Some Preliminaries</h2>\n\n<p>Before we start the tutorial, there are some important concepts to talk about. \n\n<h3>Orientation Sensor</h3>\n\n<p>App Inventor\u2019s <a target=\"_blank\" \nhref=\"http://ai2.appinventor.mit.edu/reference/components/sensors.html#OrientationSensor\">\nOrientation Sensor</a> \n\n<a target=\"_blank\"\n href=\"http://www.jdroid.ch/androidEnglish/index.php?inhalt_mitte=grundelemente/lagesensoren.inc.php\">\n<img src=\"http://www.jdroid.ch/grundelemente/bilder/sensorwerte.png\" \n align=\"right\">\n</a>\n\n(in the Sensor drawer) is a non-visible component that provides information about \nthe device\u2019s orientation in 3 dimensions:\n\n<ul>\n<li>Roll: 0 degrees when the device is level, increases to 90 degrees as the device is tilted \nup on its left side, and decreases to -90 degrees when the device is tilted up on its \nright side.\n</li>\n\n<li>Pitch: 0 degrees when the device is level, up to 90 degrees as the device is tilted \nso its top is pointing down, up to 180 degrees as it gets turned over. Similarly, \nas the device is tilted so its bottom points down, pitch decreases to -90 degrees, \nthen further decreases to -180 degrees as it gets turned all the way over.\n</li>\n\n<li>Azimuth: 0 degrees when the top of the device is pointing north, 90 degrees \nwhen it is pointing east, 180 degrees when it is pointing south, 270 degrees when \nit is pointing west, etc.\n</li>\n</ul>\n\n<p>For this compass app we will only be using the device\u2019s azimuth, which tells us \nthe device\u2019s position relative to due North.  Note that the azimuth is reported as 0 \ndegrees when the top of the devices is pointing North.  You can read more about \nthe orientation sensor in App Inventor\u2019s glossary.\n\n<h3>GPS and the Location Sensor</h3>\n\n<p>App Inventor\u2019s <a target=\"_blank\"\nhref=\"http://ai2.appinventor.mit.edu/reference/components/sensors.html#LocationSensor\">Location Sensor</a> (in the Sensor \ndrawer) is a non-visible component that provides location about the device\u2019s \nlongitude, latitude, altitude and street address. It can also perform geocoding.   \nYou can read more about the Location Sensor in App Inventor\u2019s glossary.\n\n<p>A mobile device can detect its location in one of three ways:\n<ul>\n<li>Using its built-in <a target=\"_blank\" \nhref=\"http://en.wikipedia.org/wiki/Global_Positioning_System\">GPS</a> \nsensor.  This is the most accurate but, ideally, \nrequires that the phone have a clear shot of the sky so that it can receive \nreadings from at least 3 GPS satellites. This is accurate within a few meters \nbut uses the most battery power.\n</li>\n\n<li>Using a Wifi signal from surrounding Wifi router.  The phone\u2019s location would be \nthe latitude and longitude of the router. This might work indoors and uses less \nbattery power.\n</li>\n\n<li>Using the Cell ID -- i.e., signals from surrounding cell towers. This is least \naccurate but uses the least power.\n</li>\n</ul>\n\n<p>For this app we will just display the phone\u2019s latitude and longitude in a label \nwhenever the phone\u2019s location changes.\n\n\n<h3>Canvas Component</h3>\n\n<p>This app uses App Inventor's <a target=\"_blank\"\nhref=\"http://ai2.appinventor.mit.edu/reference/components/animation.html#Canvas\">Canvas\n</a> \ncomponent (Graphics and Animation drawer).  \n\n<img src=\"assets/img/CanvasWithN.png\" width=\"250\" align=\"left\">\n\nThe Canvas is App Inventor\u2019s \n<i>graphics component</i>.  It is used for \ndrawing,  painting, and displaying \n<a target=\"_blank\"\nhref=\"http://ai2.appinventor.mit.edu/reference/components/animation.html#ImageSprite\">ImageSprites</a>.  \nThe Canvas component has a \ncoordinate system that is similar to the Cartesian coordinate system that you might \nhave learned about in geometry, but it has some important differences.  Its main \ncharacteristics are summarized in the  diagram shown here. \n\n\n</p>\n<p>The Canvas\u2019s origin, the point (0,0) is at its top-left. So its horizontal x-axis grows \npositively from left to right.  Its vertical y-axis grows positively from top to bottom. \nCoordinate values on the Canvas are represented as <i> pixels</i>, which is short for picture \nelements. So, for example, the Width of the Canvas might be 300 pixels and its height \nmight be 450 pixels. \n\n<p>The Canvas component has blocks that enable you to draw and paint on it.  For\nexample, the <i>Canvas.DrawText</i> block lets you draw text on the canvas at\ncoordinates (x,y).  Note that the letter's (x,y) coordinates are located at the\ntop-left point of its enclosing rectangle,  as in many other graphics systems.\n</p>\n\n<br>\n<br>\n<br>\n<br>\n\n<h2>Tutorial</h2>\n\n<p>To get started, <a \nhref=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit2/templates/WhereIsNorthTemplate/WhereIsNorthTemplate.asc\" \ntarget=\"_blank\">open App Inventor with the Where Is North Template</a>\n in a separate tab and follow along with the following video tutorial.\n\n\nIf you prefer, you can \n<a target=\"_blank\"\nhref=\"https://docs.google.com/document/d/1YQKOLLLrxUVFXm4yQrltVagSuGscAmKsCH_hXWEbRVY\">\nclick here for a text-based version</a> of the tutorial.\n</p>\n\n(<a target=\"_blank\"\nhref=\"http://www.teachertube.com/video/whereisnorthtutorial-348094\">\nTeacher Tube version</a>)\n<gcb-youtube videoid=\"bMRuVNmdvgg\" instanceid=\"u4RT1hOX9jM4\">\n</gcb-youtube>\n\n\n<h2>Questions</h2>\n\n<question quid=\"5690820929781760\" weight=\"1\" instanceid=\"uFrTgZhBxgcu\">\n</question>\n<br><br><question quid=\"5148883030114304\" weight=\"1\" instanceid=\"VfpI6193TKN2\">\n</question><br>\n\n\n<h2>Still Curious?</h2>\n\n<p>Want to learn more about the GPS system, how it came into being and more of the\ntechnical details about how it works?  Check out the <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Global_Positioning_System\">Wikipedia article on GPS</a>. \n</p>\n\n<h2>Reflection</h2>\n\n<p>In your portfolio, create a new page named <i>Where is North Tutorial</i> \nand answer the following questions:\n\n<ol>\n<li>What is the Orientation Sensor component? How is it used in the Where is \nNorth tutorial?\n</li>\n\n<li>What is the Location Sensor component? How is it used in the Where is North tutorial? \nBe sure to include how GPS works in your answer.\n</li>\n\n<li>In your opinion, is the Where is North app a good example of a location aware \napp or can the location sensor be used in a better, more efficient way? Explain.\n</li>\n\n</ol>\n\n\n", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 103, "duration": "", "notes": "https://docs.google.com/document/d/1YQKOLLLrxUVFXm4yQrltVagSuGscAmKsCH_hXWEbRVY", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Hardware and Software Abstractions", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\n<p>In this lesson we will provide some additional examples of how  the Big Idea of\n<i>abstraction</i> is used in computing. We will focus mostly on \nhardware and software abstractions in this lesson. \n\n</p><p>We will also provide a deeper look at some of the hardware concepts introduced in lesson 2.4. We will have a look \"under the hood\" of the computer,\nso to speak, to see how computers process binary information. \n\n</p><h2>Lecture</h2>\n\n(<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/hardwaresecondlook-348091\">\nTeacher Tube version</a>)\n<gcb-youtube videoid=\"b7-tq1Y3R00\" instanceid=\"cXPUf8siRkJr\">\n</gcb-youtube><br>\n\n\n\n<h2>Interactive Activities</h2>\n\n<p><a target=\"_blank\" href=\"http://logic.ly/lessons/\">Logicly</a> provides an \nengaging, hands-on learning environment for teaching logic gates and circuits.  They\nprovide some free online-demos of simple logic gates.\n</p>\n\n<p>To help solidify your understanding of the basic gates, click on the links below\nto review the truth table definitions and to try some interactive examples:\n\n</p><ul>\n<li>An <a target=\"_blank\" href=\"http://logic.ly/lessons/and-gate/\">AND gate</a>\n is TRUE (or ON) when both of its inputs are TRUE (or ON).\n</li>\n<li>An <a target=\"_blank\" href=\"http://logic.ly/lessons/or-gate/\">OR gate</a>\n is TRUE (or ON) when either or both of its inputs are TRUE (or ON).\n</li>\n<li>An <a target=\"_blank\" href=\"http://logic.ly/lessons/not-gate/\">NOT gate</a>\n is TRUE (or ON) when its single input is FALSE (or OFF).</li>\n</ul>\n\n\n\n<h2>Questions and Exercises</h2>\n\n\n<question quid=\"4516674581561344\" weight=\"1\" instanceid=\"w4IGay1zLH4I\">\n</question>\n<br>\n\n<question quid=\"5509995290427392\" weight=\"1\" instanceid=\"L7uU5x5KHmVc\">\n</question>\n<br>\n\n<question quid=\"4742707436060672\" weight=\"1\" instanceid=\"ojM713xJ7uJk\">\n</question>\n<br>\n\n<question quid=\"5039850990338048\" weight=\"1\" instanceid=\"OiR3zymnSvvG\">\n</question>\n<br>\n\n<question quid=\"5868607342903296\" weight=\"1\" instanceid=\"TznqLMaIHLRn\">\n</question>\n<br>\n\n<question quid=\"5806108052553728\" weight=\"1\" instanceid=\"hX5j0tFPV0VU\">\n</question>\n\n\n<h2>Still Curious</h2>\n\nStill curious about logic gates?  Use \n\n<a target=\"_blank\" href=\"http://logic.ly/lessons/\">Logicly</a>\nto play with the NAND gate and some of the other more advanced logic gates.\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\nIn your portfolio, create a new page named \n<b><i>Abstraction 2</i></b> and provide thoughtful answers to  the \nfollowing questions:\n\n<ol>\n   <li>Give an example of a <i>high-level hardware abstraction</i> and describe\nwhat it does.\n</li>\n\n <li>Give an example of a <i>low-level hardware abstraction</i> and describe\nwhat it does.\n</li>\n\n<li>Describe how an <i>AND gate</i>, the <i>Boolean AND function</i>, and \nthe <i>symbol for the AND gate</i> are related to each other. Which is more specific?\nWhich is more general or abstract?</li>\n\n</ol>\n", "unit_id": 1, "activity_title": "", "video": "", "lesson_id": 117, "duration": "", "notes": "https://docs.google.com/presentation/d/1fLrFxQHG0UbRPD2KMZVuTWIL5ETSuDoGphBY9MXofGY", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Unit Overview", "has_activity": false, "objectives": "<p>This unit focuses on App Inventor's drawing and painting features and related topics\nfrom the CS Principles curriculum.\n\n<h3>Unit Features</h3>\n<ul>\n<li><b>Programming:</b> The programming in this unit focuses mainly on App \nInventor's graphics features.  \n\n<p>The  <i>Paint Pot</i> app, the App Inventor version of the\nclassic finger painting program,  is presented in four parts.   A basic Paint Pot  tutorial introduces\nApp Inventor's <i>Canvas</i> component and some of its drawing and painting commands.  This\nis followed by a set of Creative Exercises, where you will be asked to solve simple \nproblems to enhance the app.  The second Paint Pot tutorial introduces the concept of \na <i>global variable</i> and the programming technique of <i>incrementing a variable</i>.\nThis tutorial is also followed by creative exercises.  \n\n<p>There are two other programming tutorials, the <i>Magic 8 Ball<i> app provides\na first introduction to <i>lists</i>, an important data structure found in most \nprogramming languages.  And, finally, the <i>Map Tour</i> app introduces a technique\nfor accessing other apps from within App Inventor.  In this example, we learn how to access\nand control Google Maps from within a mobile app.\n\n\n<p><li><b>CS Principles:</b> The several CS Principles lessons will extend our\nunderstanding of the <i>binary</i> system.  In one lesson we learn how <i>digital\nimages</i> are represented in binary.  In other, we learn how binary numbers can\nbe used to help with <i>error detection</i> during data transmission.  These lessons\nare complemented nicely by a <i>Blown to Bits</i> reading that focuses on digital \ndocuments, including how they can be used to hide secrets. \n\n</ul>\n", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 31, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Paint Pot Tutorial", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" \nsrc=\"//www.youtube-nocookie.com/embed/7aGbsg1D3no?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpotpreview-347835\">TeacherTube Version</a>\n</td>\n<td><b><i>Paint Pot</i></b> is a basic \u201cfinger painting\u201d app. It \nsimulates the process of dipping your finger in a pot of a paint and then \ndrawing on a canvas. The app uses buttons to simulate dipping your finger \nin the paint and uses App Inventor\u2019s touch event handlers to draw circles and lines.\n<br>\n<br>\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>follow an instructor-led walkthrough to create the <i>PaintPot</i> app on a mobile device;\n</li><li>continue navigating the App Inventor programming platform;\n</li><li>develop your understanding of what an App Inventor program is;\n</li><li>deepen your understanding of event-driven programming.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<br>\n<br>\n<h2>Tutorial</h2>\n\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit3/templates/PaintPotMediaOnly/PaintPotMediaOnly.asc\" target=\"_blank\">open App Inventor with the Paint Pot Template</a>\n in a separate tab and follow along with the following tutorial.\n\n<br><br>\nIf you prefer, you can \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/1HNhF66lor_13vZ9JoJ2Z2WeWO6qxi7Lrvk7Kl-AfTeg\">\nclick here for a text-based version</a> of the tutorial.  \n<br>If you are unable to stream\nthe YouTube video, click here for the <a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot2projssols-347880\">TeacherTube version</a>.\n</p>\n\n<gcb-youtube videoid=\"yvI5Za4DvqA\" instanceid=\"dJmAFz5FP3sY\">\n</gcb-youtube>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot1-347867\">TeacherTube Version</a>\n<br>\n\n<h2>Questions and Exercises</h2>\n<p>Complete the following exercises.\n<br>\n\n<question quid=\"5629499534213120\" weight=\"1\" instanceid=\"KzbFHNBYjeVc\"></question>\n<question quid=\"5668600916475904\" weight=\"1\" instanceid=\"rGeJf2V1nqp0\"></question>\n<question quid=\"5707702298738688\" weight=\"1\" instanceid=\"u3NeUFzUvKeV\"></question>\n<quizly-quizlyexercise quizname=\"quiz_background_color\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"785\" instanceid=\"a3uBZXYSOJee\">\n</quizly-quizlyexercise>&nbsp;<br>\n</p>\n<quizly-quizlyexercise quizname=\"quiz_text_color\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"795\" instanceid=\"pnhvzarYPPW1\">\n</quizly-quizlyexercise><br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named \n<i><b>Paint Pot 1</b></i> under the <i>Reflections</i> category of your \nportfolio and write\nbrief answers to the following questions.\n\n<ol>\n<li>How many different types of <i>events</i> does this app respond to?  Name each\ntype of event.\n</li>\n<li>Describe the difference between the two Canvas events, <i>Touched</i> \nand <i>Dragged</i>.\n</li>\n\n<li>What do the <i>X</i> and <i>Y</i> properties represent in the <i>Touched</i>\nevent handler?\n</li>\n\n<li>Describe the difference between the <i>Start</i> and <i>Previous</i> properties\nin the <i>Dragged</i> event handler.\n</li>\n\n</ol>\n", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 32, "duration": "", "notes": "https://docs.google.com/document/d/1HNhF66lor_13vZ9JoJ2Z2WeWO6qxi7Lrvk7Kl-AfTeg", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Paint Pot Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/BVCrfDvjuIY?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpotprojectspreview-347832\">\nTeacher Tube Version</a>.\n</td>\n<td>\n<b><i>Be creative!</i></b>.  In this lesson you will complete several \nsmall programming projects that add enhancements to the \nPaintPot app.  Hints and suggestions are provided. \n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>continue navigating the App Inventor online programming platform;\n</li><li>deepen your understanding of event-driven programming.\n</li></ul>\n<p></p>\n<p>\n<b>Programming Projects</b>\n</p>\n<ol>\n<li>Add a button to the app that lets the user draw in a 4th color.\n</li>\n<li>Change the size of the dot to a radius of 8 pixels.\n</li>\n<li>Replace the cat image with your own picture.  (Hint: You'll need to upload an image in the Designer.)\n</li>\n<li><b>Challenging:</b>  Instead of using an existing photo, take your own photo with the \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/reference/components/media.html#Camera\">\nCamera</a> Component (Media drawer). Then make that photo the Canvas background image.\n</li>\n</ol>\n</td>\n</tr>\n</tbody></table>\n<br>\n\n<h2>Enhancing the Paint Pot App</h2>\n\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit3/templates/PaintPotProjects/PaintPotProjects.asc\" target=\"_blank\">open App Inventor with the Paint Pot Projects template</a>\n in a separate tab. Or, if you prefer, you can use your own app from the previous lesson,\n instead of the template project.\n\n\nThen complete the programming exercises described above and in the preview video.  \nAdditional details are provided in the \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/18JZhxmH2h9XgP_cwP8ZXvDCk2_ZLvX1gNHaTxrGHAWk\">\ntext version</a>.\n</p>\n\n<h2>Solutions</h2>\n\n<p>\nIt is important to explore with App Inventor and become accustomed to programming \nwithout explicit instructions.  So try out the challenges listed above and see how far you \ncan get.  \n</p>\n\n<p>If you get stuck -- or, after you've finished, to compare your solutions with ours -- \ncheck out the solutions video.\n<br>If you are unable to stream the YouTube video, click here for the <a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot1solutions-347845\">TeacherTube version</a>.\n</p>\n<gcb-youtube videoid=\"bcsyXFCgeQA\" instanceid=\"HaM04dUJ53Ee\"></gcb-youtube>\n<br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page under the <i>Creative Projects</i>&nbsp;category of your portfolio \nnamed <i><b>Paint Pot Projects</b></i>\nand write brief answers to the following questions.\n\n<ol>\n<li>Describe each enhancement you made to the <i>Paint Pot</i> app and include\nin your description some of the key technical features of the enhancement.\n</li>\n\n<li>For the current version of the app, changing the size of the dot that's drawn\nrequires us to change the code.  Do you have any ideas about how changing the\ndot size could be something that the user controls rather than the programmer?\n</li>\n</ol>\n\n", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 33, "duration": "", "notes": "https://docs.google.com/document/d/18JZhxmH2h9XgP_cwP8ZXvDCk2_ZLvX1gNHaTxrGHAWk/edit#", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Representing Images", "has_activity": false, "objectives": "<h2>Preview</h2>\n\nIn this lesson we continue the exploration of <i><b>bits</b></i> and  \n<i><b>binary numbers</b></i> that we began\nin unit 2.  In this case we learn how to use bits, 1s and 0s,  to represent images. \nThe objectives of this lesson are:\n<p></p><ul>\n<li>to understand that all digital data, including electronic documents, are \ncomposed of bits,\n</li>\n<li>to understand that representing an image digitally is another example of \nabstraction at work.\n</li>\n</ul>\n<p></p>\n\n<gcb-youtube videoid=\"uaV2RuAJTjQ\" instanceid=\"Qo9uKI6sQyu3\">\n</gcb-youtube>\n\n\n<h2>Run-Length Encoding\n<BR>(<a target=\"_blank\" href=\"https://docs.google.com/presentation/d/1MmKmh7fJKCCfwGzA238VPXZYLkCZvIIUQZ9L-RIDEYQ\">Slide presentation</a>)\n</h2>\n\n<p>The image representation technique demonstrated in the video is known as <i><b>\nrun-length encoding (RLE)</b></i> and it is an <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Image_compression\">image compression</a>\ntechnique. \n</p>\n\n<p>The following video presentation explores some of the details of RLE and\nillustrates some of the ways that images are represented with binary numbers.\n\n\n<br><br><gcb-youtube videoid=\"0sZgmw9ECCo\" instanceid=\"DkBVmWCWWAGQ\">\n</gcb-youtube><br></p>\n\n<h2>Practice</h2>\n\n<p>Try your own hand at representing images using RLE:\n\n<a target=\"_blank\" href=\"http://csunplugged.org/sites/default/files/activity_pdfs_full/unplugged-02-image_representation.pdf\">\nCS Unplugged Activity</a>\n</p>\n\n<h2>Other Activities</h2>\n\n<ol>\n<li>\nWrite your own message in binary that someone else could decode. Trade messages in class and decode each others.\n</li>\n<li>Web pages use the HyperText Markup Language (HTML) to encode web pages. \n\nHere\u2019s <a target=\"_blank\" \nhref=\"http://www.w3schools.com/tags/ref_colormixer.asp\">a color mixer app</a> \nthat lets you explore the different colors that are used in Web pages.  How many bits are used to \nrepresent the colors?   Figure out  the Hex code for pure red?  pure green? pure blue?\n</li>\n\n<li>Research another image type (e.g. \n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Graphics_Interchange_Format\">GIF</a>, \n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Portable_Network_Graphics\">PNG</a>, \n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/BMP_file_format\">BMP</a>, \n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/TIFF\">TIFF</a>, etc.) \nand compare and contrast the data needed to \nstore information about the images. Include what type of compression is used. \n</li>\n\n<li>If you have a digital camera or a smartphone or tablet, find out what image representation scheme \nit uses?  How come all images are not the same size?\n</li>\n\n<li>ASCII is one type of character code, but 128 characters is not enough for today\u2019s computers, which \ncan represent Chinese, Hindi, and scripts from many other languages.  Today\u2019s computers use a \nsystem called Unicode, which has more than 100,000 different characters and covers more than \n100 different scripts (languages).  Use this \n<a target=\"_blank\" href=\"http://pages.ucsd.edu/~dkjordan/resources/unicodemaker.html\">Unicode converter</a>\n to convert these \nChinese characters to their hexadecimal Unicode values:  \u56fd\u8bdd.  Convert these \nGreek letters: \u03bf\u03b9.  Convert these Russian letters: \u042f \u044e.  \n</li>\n</ol>\n\n<h2>Questions</h2>\n<question quid=\"5649050225344512\" weight=\"1\" instanceid=\"3Fy6GvIhRkyI\"></question>\n<br>\n<question quid=\"6220057805848576\" weight=\"1\" instanceid=\"BwbLqNV5xsk9\"></question>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named <i>Representing Images</i> under the <i>Reflections</i>\n category of your portfolio and answer the following questions:\n\n<ol>\n<li>Decode this message by converting it from binary to ASCII:\n1000001  1110000  1110000  0100000  1001001  1101110  1110110  1100101  1101110\n1110100  1101111  1110010  0100000  1010010  1001111  1000011  1001011  1010011\n0100001\n<br>\nYou can use this chart to help you: <a href=\"https://docs.google.com/document/d/1Q4NinpY_-BLSjh9RVO1bD4apZYs4W93WbpX_nbas1Ec/edit#heading=h.6e2ngjbac86z\">ASCII Conversion Chart</a>\n</li>\n<li>\nDescribe what it means to say that <a \nhref=\"http://en.wikipedia.org/wiki/JPEG\">JPEG</a>\nis  a lossy \ncompression technique and  whether or not it affects the quality of camera pictures.\n</li>\n<li>Give a specific example of a binary sequence that can represent more \nthan one type of data -- \ne.g., a number, a color, a character -- and describe how to interpret its \ndifferent values. \n</li>\n\n</ol>\n\n", "unit_id": 22, "activity_title": "Representing a Letter", "video": "", "lesson_id": 34, "duration": "", "notes": "https://docs.google.com/document/d/1Q4NinpY_-BLSjh9RVO1bD4apZYs4W93WbpX_nbas1Ec", "properties": {}, "activity_listed": false}, {"scored": false, "now_available": true, "title": "BB: Electronic Documents", "has_activity": false, "objectives": "<a target=\"_blank\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=91\">\n\n<img src=\"assets/img/blowntobits.jpg\" width=\"150\" align=\"left\" hspace=\"10\"></a>\n\n<p>Computing has transformed our lives in so many ways. And mobile computing, \nwhere we are constantly connected to others and to the world via our mobile\ndevices, is challenging us right now to come with \nnew norms about privacy, security, the ownership or openness of data and information,\nand other issues. </p>\n\n<p>Like any technology, mobile computing has both positive and \nnegative impacts. We need to reflect on these impacts in general and we also \nthink about the impacts we will create as we build our own mobile apps. </p>\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n\n<h2>Chapter Three: Ghosts in the Machine<br>\nSecrets and Surprises of Electronic Documents</h2>\n\n<p><a href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/chapter3.pdf\">\nChapter Three of Blown to Bits</a> describes how digital documents, \nincluding images and sounds, are represented by sequences of bits.</p>\n\n<p>As you learned in the previous lesson and as shown in the this diagram, \nthe first step in representing an image is to convert it into a sequence of \nbits.  This is known as <i style=\"font-weight: bold;\">modeling</i>.\nThe model is an <i style=\"font-weight: bold;\">abstract representation</i> \nof the original image.</p>\n\n<div style=\"text-align: center\" class=\"yui-wk-div\">\n<img src=\"assets/img/FaceModel.PNG\" class=\"yui-img selected\">\n</div>\n\n<p>Read Chapter Three to discover what's hidden in electronic documents.</p>\n\n\n<h2>Homework: For Your Portfolio</h2>\n\n<p>Create a page called <b><i>Blown to Bits Chapter 3</i></b> under the \n<i>Homework</i>  category of your Portfolio and write answers using \ncomplete sentences to  the following questions on \nthat page.\n\n\n<ol>\n<b>Short answer:</b></br>\n<li>What is metadata? Give an example.\n</li><li>What is a model? \n</li><li>What's the difference between a raster image and an ASCII representation of a text document?\n</li><li>What are filename extensions? What are they used for?\n</li><li>What is lossless representation? What is lossy representation? What are the trade-offs in using each representation? \n</li><li>What is steganography and what is it used for?\n</li><li>What would you have to do to delete a document from your computer so that it could not possibly be read by anyone else?\n</br>\n<b>Free Response:</b></br>\n</li><li>How has retouching become a controversial issue? Give an example.\n</li><li>Would you rather own a camera (or camera phone) with a higher number of megapixels or lower? Explain.\n</li><li>Other than digital images, what might be an example of a computer model? Explain your answer based on the definition of a model.\n</li></ol>", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 41, "duration": "", "notes": "http://www.bitsbook.com/wp-content/uploads/2008/12/chapter3.pdf", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Paint Pot 2 Tutorial", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" \nsrc=\"//www.youtube-nocookie.com/embed/ieD3Ww_URuw?rel=0\" \nframeborder=\"0\" allowfullscreen=\"\">\n</iframe>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot2preview-347830\">TeacherTube Version</a>\n</td>\n\n<td><b><i>Enhancing Paint Pot.</i></b> One of the limitations of our current PaintPot app is that we can only draw one-size dots.  In the previous exercises you saw that you could change\nthe dot size by modifying the blocks.  But that is not a very general solution -- it only works for the programmer.  What we want to do now is modify the app so that the <i>user</i> can change the dot size.  \n<br><br>\nThis tutorial introduces the concept of a <i><b>global variable</b></i>, which will enable\nus to create a more general solution to this problem.\n<br>\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will:\n</p><ul>\n\n<li>follow an instructor-led walkthrough to create the Paint Pot 2 app on a mobile device;\n</li><li>learn how to use a variable to make the program more general.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<br>\n<br>\n<h2>Tutorial</h2>\n\n<p>To get started, <a \nhref=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit3/templates/PaintPot2Template/PaintPot2Template.asc\" \ntarget=\"_blank\">open App Inventor with the Paint Pot 2 Template</a>\n in a separate tab and follow along with the following tutorial.\n\n<br><br>\nIf you prefer, you can \n<a target=\"_blank\"\nhref=\"https://docs.google.com/document/d/1CxbAlLMdY4ylLg4BduosyANc4jgwJcUDtGDue8cTMK4\">\nclick here for a text-based version</a> of the tutorial.\n<br>If you are unable to stream the YouTube video, click here for a \n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot2-347872\">TeacherTube version</a>.\n</p>\n\n<br>\n<gcb-youtube videoid=\"7eY2aSeP9Oc\" instanceid=\"DjdwvSm8Hobs\">\n</gcb-youtube>\n<br>\n<br>\n\n<h2>Questions and Exercises</h2>\n<p>Complete the following exercises.\n<br>\n\n<question quid=\"5685265389584384\" weight=\"1\" instanceid=\"TIMiawJBmRHW\"></question><br>\n<question quid=\"5757334940811264\" weight=\"1\" instanceid=\"I9A6rU8e6XhF\"></question><br>\n<question quid=\"5639274879778816\" weight=\"1\" instanceid=\"RTbmuYeCfHg0\"></question><br>\n<question quid=\"5717271485874176\" weight=\"1\" instanceid=\"PL4Z71ya2hWI\"></question><br><question quid=\"5076324926357504\" weight=\"1\" instanceid=\"xUWlnpUU1zIe\"></question><br>\n<quizly-quizlyexercise quizname=\"quiz_incrementing\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"790\" instanceid=\"G3qzTftPYKTe\"></quizly-quizlyexercise><br></p>\n<p></p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Paint Pot 2</i></b> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n<li>One advantage of abstraction is that it allows us to make our apps \nmore general. Describe how the use of the variable <i>dotsize</i> in this app\nis an  example of abstraction in that sense. \n</li>\n<li>Abstraction is sometimes defined as \"reducing information and detail to focus\non what's relevant\".  In your opinion, does the use of the <i>dotsize</i> variable fit this \ndefinition?  Why or why not?\n</li>\n</ol>\n", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 35, "duration": "", "notes": "https://docs.google.com/document/d/1CxbAlLMdY4ylLg4BduosyANc4jgwJcUDtGDue8cTMK4", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Paint Pot 2 Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody>\n<tr>\n<td>\n<iframe width=\"315\" height=\"420\" \nsrc=\"//www.youtube-nocookie.com/embed/d1xUEIgax78?rel=0\" \nframeborder=\"0\" allowfullscreen=\"\">\n</iframe>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot2projectspreview-347831\">TeacherTube Version</a>\n\n</td>\n<td>\n<b><i>Be creative!</i></b>.  In this lesson you will complete \nseveral small programming projects that add enhancements to the \nPaintPot app.  Hints and suggestions are provided. \n<br>\n<p>\n<b>Objectives:</b> In this lesson you will:\n</p><ul>\n<li>program additional events into an existing mobile app;\n</li><li>learn to solve simple programming problems.\n</li></ul>\n<p></p>\n<p>\n<b>Programming Projects</b>\n</p><ol>\n<li>Following the example of the <i>plus button</i>, implement the \n<i>minus button</i>, which should subtract 1 from the dotsize each time it is clicked.\n\n</li><li>Add a <i>reset button</i> that, when clicked, sets the dotsize back to its \ninitial value (i.e., 5). (HINT: You'll need a second variable here to remember the initial\nvalue of the dotsize.)\n\n</li><li><b>Challenging:</b>  A <i><b>bug</b></i> is an error or defect, that \nprevents the app from working the way it is supposed to. In this app, if the \nuser continues to press <i>ButtonMinus</i>, the value of dotsize will eventually \nbecome negative. If dotsize is negative, what will be drawn when the user touches the screen? \nTry fixing this bug by using an <i><b>If/Else statement</b></i>. \n(Hint: The If/Else block is \nfound under Control in the  Blocks Editor Toolbox.)\n\n</li>\n<li>Create one or more of your own enhancements for your app.\n</li>\n</ol>\n</td>\n</tr>\n</tbody></table>\n<br>\n\n<h2>Enhancing Paint Pot</h2>\n<p>\n</p><p>To get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit3/templates/PaintPot2Projects/PaintPot2Projects.asc\" target=\"_blank\">open App Inventor with the Paint Pot 2 Projects</a>\n in a separate tab.  Then try to complete the programming projects outlined above.\nAdditional information is available in the <a target=\"_blank\" href=\"https://docs.google.com/document/d/1_LGMgUqzZ4H2-FCQ6G0QYYet0z91mCNVQifJkATlHuc\">text version of this lesson</a>.\n\n\n</p><h2>Solutions</h2> \n\n<p>It is important to explore with App Inventor and become accustomed to \nprogramming without explicit instructions. So try out the challenges listed above \nand see how far you can get. \n</p>\n\n<p>If you get stuck, -- or, after you've finished, if you'd like to compare your \nsolutions to ours --  check out the following video, which shows \nhow we solved the problems.  \n<br>If you are unable to stream the YouTube video, click here for a \n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/paintpot2projssols-347880\">TeacherTube version</a>.\n\n<gcb-youtube videoid=\"Pg5_khG7Zxk\" instanceid=\"D6Nq0YJjItKJ\">\n</gcb-youtube>\n\n</p>\n\n<h2>Questions and Exercises</h2>\n\n<quizly-quizlyexercise quizname=\"quiz_initialize_variable\" preamble=\"One Minute Lesson: <a target=&quot;_blank&quot; href=&quot;http://www.youtube.com/watch?v=TvTx-6C2Q6U&quot;>How to Initialize a Global Variable</a>\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"510\" width=\"775\" instanceid=\"4kITN7u5hdsO\">\n</quizly-quizlyexercise>\n\n<br><quizly-quizlyexercise quizname=\"quiz_incrementing\" preamble=\"One Minute Lesson:  <a target=&quot;_blank&quot; href=&quot;http://www.youtube.com/watch?v=Odw-potCwrM&quot;>How to Increment a Global Variable</a>\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"510\" width=\"775\" instanceid=\"pCZugPUxlHeb\">\n</quizly-quizlyexercise>\n<br><quizly-quizlyexercise quizname=\"quiz_simple_if_else\" preamble=\"One Minute Lesson: <a target=&quot;_blank&quot; href=&quot;http://www.youtube.com/watch?v=VrzzXpJW8co&amp;feature=youtube_gdata&quot;>How to conditionally set a variable</a>\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"510\" width=\"775\" instanceid=\"8T30OkUf5r1r\"></quizly-quizlyexercise><br>\n\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Paint Pot 2 Projects</b></i> under the <i>Creative Projects</i> \ncategory of your portfolio and give brief answers to the following questions\n<ol>\n<li>Describe and show how you solved the third programming exercise.  Provide a \nscreenshot of your <i>ButtonReset.Click</i> block.\n</li>\n<li>Give a  brief description of the enhancements you added \nto your app.  Provide screen shots of important blocks and describe how you used \nthem to solve certain programming problems. Include a description of any \nsignificant problems or bugs you encountered and how you solved them.\n</li>\n</ol>\n", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 36, "duration": "", "notes": "https://docs.google.com/document/d/1_LGMgUqzZ4H2-FCQ6G0QYYet0z91mCNVQifJkATlHuc", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Error Detection", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\nAs we saw in a previous lesson, images are represented by \n<a href=\"http://en.wikipedia.org/wiki/Bit\" target=\"_blank\">bits</a>, \nbinary digits.  In fact, as\nyou've read in <a href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=23\" target=\"_blank\">Blown to Bits</a>\n all digital data are represented by bits. <p></p>\n\n<p>What would happen if one or more of the bits in your image or your document\nflipped from a 0 to a 1 or vice versa?   This could happen because of an error during\ntransmission.  Or when the file is being saved on your computer.  Would it be possible \nto detect the error?  \n\n</p><p>In this video from the <a href=\"http://csunplugged.org/\">Computer Science Unplugged</a>\nproject,  you'll see a trick that shows that it <i><b>is possible</b></i> to detect when\na bit is flipped.  In the video, the yellow and white cards are analogous to 1s and 0s. \n\n</p><p>Can you figure out how the flipped card is detected?\n\n<br><gcb-youtube videoid=\"-35-sPTYPJg\" instanceid=\"3Pcpt27wN9A2\"></gcb-youtube>\n<br>\n</p><h3>Figure it out</h3>\n<p>Before reading about how this works, try to figure it out yourself or with a classmate. \nLook at these two tables. The 5 x 5 table on the left is similar to the cards before the \nextra column and row are added.  The 6 x 6 table on the right is similar to the cards after the\nextra column and row are added.  Can you see anything interesting about the 6 x 6 table?\n</p><table>\n<tbody><tr>\n<td>\nThe 5 by 5 table \n<table border=\"0\">\n<tbody><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n<tr><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n<tr><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td></tr>\n<tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n<tr><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr>\n</tbody></table>\n</td>\n<td>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</td>\n<td>\nThe 6 by 6 table \n<table border=\"0\">\n<tbody><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr>\n<tr><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td></tr>\n<tr><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n<tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr>\n<tr><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td></tr>\n<tr><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n</tbody></table>\n</td>\n</tr>\n</tbody></table>\n\n<h3>Some Hints</h3>\n<ul>\n<li>Count the number of 0s and 1s in each row and column of the 5 x 5 table.\n</li><li>Count the number of 0s and 1s in each row and column of the 6 x 6 table.\n</li><li>What difference do you notice and why is it significant?\n</li></ul>\n\n<p>Answers and explanation at the bottom of the page.\n\n\n\n</p><h3>Still Curious? (Optional)</h3>\n\nThis lesson has shown that it is possible to detect certain kinds of error in digital\ndocuments.  The technique used here, called <i><b>parity checking</b></i>, uses\n<i><b>redundancy</b></i>.  That is, extra bits are added to the data to enable us\nto detect the error. \n\n<p>What about detecting errors that involve more than 1 bit?  Is it possible to\nnot only <i>detect</i> an error but to automatically <i>correct</i> it?  The \nanswers to these questions is 'Yes' and 'Yes.'\n\n</p><p>If you want to learn more about this topic, here are a couple of \nreading suggestions:\n\n</p><ul>\n<li><a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Parity_bit\">Parity bit</a>.\n</li><li><a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Error_detection_and_correction\">Error detection and correction</a>.\n</li></ul>\n\n<h2>Questions and Exercises</h2>\n<question quid=\"5651442522128384\" weight=\"1\" instanceid=\"6SiLtHfAAKKW\">\n</question>\n<br>\n<question quid=\"5743114304094208\" weight=\"1\" instanceid=\"yw6Dgo9j2TQd\">\n</question>\n<br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Error Detection</b></i> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n<li>Explain in your own words how the person doing the card \"trick\" was able to determine which \ncard was flipped.\n</li>\n<li>The card \"trick\" shows that it is always possible to identify the card that\nwas flipped as long as only one card was flipped. Would it be possible always to \ndetermine if an error occurred if two cards  were flipped?  Explain, giving examples\nif possible.\n</li>\n</ol>\n\n<h4>Answers to Above Questions</h4>\n<p>For the 5 \u00d7 5 table,  if you count the number of 1s you get the following\nresults:\n</p><blockquote>\n<pre>Row   #of 1s         Column     #1s\n1       1                 1               2\n2       2                 2               2\n3       1                 3               1\n4       1                 4               0\n5       1                 5               1\n</pre>\n</blockquote>\n\n<p>For the 6 \u00d7 6 table, if you count the number of 1s you get the following results:\n</p><blockquote>\n<pre>Row   #of 1s         Column     #1s\n1       2                 1               2\n2       2                 2               2\n3       2                 3               2\n4       2                 4               0\n5       2                 5               2\n6       2                 6               4\n</pre>\n</blockquote>\n<p>The difference in the 6 \u00d7 6 case is that all of the\nrows and columns have an <i><b>even number of 1s</b></i>.\nIf you \"flip\" a 1 to a 0 or a 0 to a 1 in the 6 \u00d7 6 table, \nyou will destroy this pattern, making 1 row and 1 column have\nan odd number of 1s.  The intersection of that row and column\nwill indicate the bit that was flipped. For example, count the 0s\nand 1s in rows and columns of this 6 \u00d7 6 table and you'll\nsee that the rows and columns with an odd number of bits intersect\nat the flipped (<font color=\"red\">red</font>) bit. \n\n</p><p>The 6 by 6 table with a flipped bit. The <font color=\"blue\">blue numbers</font> give\nthe number of 1s in each row and column.\n</p><blockquote>\n<table border=\"0\">\n<tbody><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td><font color=\"blue\">2<font></font></font></td></tr>\n<tr><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td><font color=\"blue\">2<font></font></font></td></tr>\n<tr><td>0</td><td>0</td><td><font color=\"red\">0</font></td><td>0</td><td>0</td><td>1</td><td><font color=\"red\">1<font></font></font></td></tr>\n<tr><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td><font color=\"blue\">2<font></font></font></td></tr>\n<tr><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td><font color=\"blue\">2<font></font></font></td></tr>\n<tr><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td><font color=\"blue\">2<font></font></font></td></tr>\n<tr><td><font color=\"blue\">2<font></font></font></td><td><font color=\"blue\">2<font></font></font></td><td><font color=\"red\">1<font></font></font></td><td><font color=\"blue\">0<font></font></font></td><td><font color=\"blue\">2<font></font></font></td><td><font color=\"blue\">4<font></font></font></td><td><font color=\"blue\">&nbsp;<font></font></font></td></tr>\n\n</tbody></table>\n<blockquote>\n\n</blockquote></blockquote>", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 37, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Magic 8 Ball Tutorial and Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/G_mdFf7phJs?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/magic8ballpreview-347990\">TeacherTube Version</a>\n</td>\n<td>\n<b><i>Magic 8 Ball</i></b>  Magic 8-Ball is a mobile version of \nthe classic fortune-telling game. \n A user can ask a question, shake the phone, and hear the magic 8-ball\u2019s \nprediction. This app uses the Accelerometer to handle the shaking event \nand the TextToSpeech component to have the phone speak \nprediction, which is randomly selected from a list of predictions. \n\n\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>create an app that\n<ul>\n<li>uses the <i> Accelerometer sensor</i> to respond to shaking events,\n</li>\n<li>uses the <i>TextToSpeech</i> component to convert Text output to speech, and\n</li>\n<li>randomly selects the 8-Ball's responses from a list variable.\n</li>\n</ul>\n<p>\n</p></li><li>In the creative projects, you'll add enhancements to the app that:\n<ul>\n<li>use the <i>Clock</i> component,\n</li><li>use the <i>Speech Recognizer</i> component.\n</li>\n</ul>\n</li>\n</ul>\n\n<p></p>\n</td></tr></tbody></table>\n\n<h2>Tutorial</h2>\n\n<p>Follow the video tutorial to build an initial version of the Magic 8 Ball App.  \nIf you prefer, there is a printable \n<a target=\"_blank\" \nhref=\"https://docs.google.com/document/d/133cPONCoWoD389iaXbUFXwXRxk7hYZNE40ChXxykm-g\">Text Version</a>\nof the tutorial.\n</p>\n\n<p>To begin the lesson \n<a target=\"_blank\" \nhref=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit3/templates/Magic8BallTemplate/Magic8BallTemplate.asc\">\nopen App Inventor with the Magic 8 Ball template</a>. \nIt provides the \nmedia you need for this project and a partial version of the User Interface.  \nWhen the project opens -- be patient, it may take a moment -- use the Save As \noption to rename it Magic8Ball.\n<br>If you are unable to stream\nthe YouTube video, click here for the <a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/magic8ball-347995\">TeacherTube version</a>.\n</p>\n\n<gcb-youtube videoid=\"gtY1qGXBxjw\" instanceid=\"iDCYaArzMplo\">\n</gcb-youtube>\n\n\n\n\n<h2>Mini Projects</h2>\n\n<p>Click here for a printable <a target=\"_blank\" href=\"https://docs.google.com/document/d/10t9N46Qi-_5eOusx9kOAOplhwr4XBj81MrEb59aOXJo\">Text Version</a> \nof\nthe Mini Projects.\n</p>\n\n<p>Now that you've finished the tutorial, here are some creative projects.   If you \nhave questions, ask your instructor for help or, if working online, post a \nquestion in the forum.\n</p>\n\n<ol>\n<li>Change the predictions that were used in the tutorial to include your own\npredictions, perhaps ones that are more humorous.\n</li>\n\n<li><b>Challenging.</b>  If you recall from the Tutorial video, one problem \nwith the current version of the Shaking block is that it causes the \nSound and the Voice to occur at the same time, making it hard to \nhear the prediction:\n\n\n<blockquote>\n<img src=\"assets/img/ShakingBlock.png\">\n</blockquote>\n\n\n<p></p>\n<p>One way to fix this is to put a delay between the Play and the Speak actions.   \nThe Clock component (Sensor drawer) can be used for this purpose.  \nWhen the Clock is enabled, it generate a Timer event every so often \ndepending on the value of its TimerInterval milliseconds. The default \ninterval is 1000 milliseconds.  Timer events are handled by the \nClock.Timer event handler:\n\n<blockquote>\n<img src=\"assets/img/Timer.png\">\n</blockquote>\n\n</p>\n\n<p>Using the timer correctly can be tricky. Here are some suggestions:\n\n</p><ul>\n<li> Initially the Timer should be disabled (Clock.enabled property is false).  \nThis will prevent it from \u201cticking\u201d -- i.e., it will prevent its Clock.Timer \nblock from firing.\n</li>\n\n<li>When you want to delay an action, say Action A, enable the Timer. \nThis will start the Timer \u201cticking\u201d.  The Clock.Timer block will fire on \nevery TimerInterval -- i.e., by default, every second.\n</li>\n<li>When the Clock.Timer block fires, perform Action A and disable the Timer again. \n</li>\n</ul>\n\n<p>You might also want to take a look a this \n<a target=\"_blank\" \nhref=\"http://www.youtube.com/watch?v=sdDcZfeCBXc\">\nOne Minute Lesson on the Clock Timer</a>.\n\n<p>Try to use these ideas to put a delay between the playing of the Sound and speaking of the prediction.\n</li>\n\n<li><b>Advanced: </b> Another shortcoming of the current app is that the Magic 8 Ball \nprovides a prediction whenever it is shaken, even if the user hasn\u2019t asked a question.  \nTo fix this, require the user to \u201cspeak\u201d their question to the Magic 8-Ball before \nMagic 8-Ball says its prediction. For this, you\u2019ll need a SpeechRecognizer component (Media drawer).  \nHere\u2019s a <a target=\"_blank\" href=\"http://www.youtube.com/watch?v=hSLNx6-mYKY\">One Minute \nLesson on the SpeechRecognizer</a> that you\nmay find helpful.\n</li>\n\n<li>Be Creative.  Come up with your own ideas to enhance your app or to create a variation of this app.\n</li>\n</ol>\n\n\n<p>The Magic 8 Ball app is a mobile version of the classic fortune telling game.  It uses simple\nlists of text to generate random answers to questions posed by the users. \n\n</p><h2>Questions and Exercises</h2>\n<question quid=\"5740423507083264\" weight=\"1\" instanceid=\"EkW9eUZd0MB1\">\n</question>\n<question quid=\"5647308616105984\" weight=\"1\" instanceid=\"tfqOWeJEPKIA\">\n</question>\n<question quid=\"5686306919153664\" weight=\"1\" instanceid=\"CNcscJO0265c\">\n</question>\n<question quid=\"5758531089203200\" weight=\"1\" instanceid=\"LiXmP1gkuNGo\">\n</question>\n<question quid=\"5725202142986240\" weight=\"1\" instanceid=\"0uXu0cYflIC1\">\n</question><br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Magic 8 Ball</b></i> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n<li>This app is an <b><i>abstraction</i></b> of the real Magic 8 Ball game. \nYou\u2019ve created a <b><i>model</i></b> of the real Magic 8 Ball game.  In the \nreal game you shake a real ball that contains messages that somehow float into \nview when the shaking stops. Describe how the various features of your model \nrepresent features of the the real game.\n</li>\n\n<li>This app makes use of <i><b>randomness</b></i> -- it picks a random \nmessage from a list of options. Suppose you were going to create an app to \nmodel a coin flip.  How might you use randomness in that case?\n</li>\n</ol>", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 78, "duration": "", "notes": "https://docs.google.com/document/d/133cPONCoWoD389iaXbUFXwXRxk7hYZNE40ChXxykm-g", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Parity Error Checking", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\nAs you learned in the previous lesson, the card \"trick\" is really not a trick at all. It\nis a very precise method of error checking based on the concept of\n <i><b>parity</b></i>.\n\n<p>In mathematics, <i>parity</i> refers to the evenness or oddness of a number. In\nthe card trick, a <i>parity bit</i> was added to each row and column such that the \nadditional bit would make the row or column have an even number of bits.  This is \nknown as <i><b>even parity</b></i>.  The \"trick\" would also work if the parity bits\nwere set so as to make each row and column have an odd number of 1 bits.  That would\nbe known as <i><b>odd parity</b></i>.\n\n</p><p>It's important to realize that the parity bit is not part of the data.  It is <i><b>redundant</b></i>,\nan extra bit, added to the data to allow us to detect if one of the data bits has been flipped\nfrom its original value.\n\n</p>\n<h2>Parity Bit Error Detection</h2>\n\nSuppose you are sending a stream of data to a server. By adding\na <i>parity bit</i>, you enable to the server to detect some basic\ntransmission errors.  For example, if the server expects that every\nbyte will contain an <b>even number of 1s</b> and it detects a byte\nsuch\nas <font color=\"red\">000</font><font color=\"green\">1</font><font color=\"red\">\n0101</font> with an odd number of 1s, it can tell that an error\noccured.  Perhaps the user meant to\nsend <font color=\"red\">000</font><font color=\"green\">0</font><font color=\"red\">\n0101</font> but one of the bits was flipped from 0 to 1 during\ntransmission.\n\n<p>A <b>parity bit</b> is a bit that is added as the leftmost bit of\na bit string to ensure that the number of bits that are 1 in the bit string\nare <i>even</i> or <i>odd</i>.\n\n</p><p>To see how this works, suppose our data are stored in strings \ncontaining 7 bits.  (You might remember that the ASCII scheme, when it \nwas initially introduced, was a 7-bit code.  In practice, a parity bit would\nbe added to the ASCII code so that 1-bit errors could be detected in\nthe resulting 8-bit byte.) \n\n</p><p>In an <b>even parity scheme</b> the eighth bit, the <b>parity\nbit</b>, is set to 1 if the number of 1s in the 7 data bits is odd,\nthereby making the number of 1s in the 8-bit byte an even number.  It\nis set to 0 if the number of 1s in the data is even.\n\n</p><p>In an <b>odd parity scheme</b> the eighth bit, the <b>parity\nbit</b>, is set to 1 if the number of 1s in the 7 data bits is even,\nthereby making the number of 1s in the 8-bit byte an odd number.  It\nis set to 0 if the number of 1s in the data is odd.\n\n</p><p>The following table summarize this approach.\n\n</p><blockquote>\n<table border=\"1\">\n<tbody><tr><th rowspan=\"2\">Data Bits (7)</th><th colspan=\"2\">Add a parity bit to get 8 bits</th></tr>\n<tr><th>Even Parity<br>Total number 1s is even</th><th>Odd Parity<br>Total number of 1s is odd</th></tr>\n<tr><td align=\"center\">000 0000  (0 1s)</td><td align=\"center\"><font color=\"red\">0</font>000 0000</td><td align=\"center\"><font color=\"red\">1</font>000 0000</td></tr>\n<tr><td align=\"center\">011 0010  (3 1s)</td><td align=\"center\"><font color=\"red\">1</font>011 0010</td><td align=\"center\"><font color=\"red\">0</font>011 0010</td></tr>\n<tr><td align=\"center\">011 0011  (4 1s)</td><td align=\"center\"><font color=\"red\">0</font>011 0011</td><td align=\"center\"><font color=\"red\">1</font>011 0011</td></tr>\n<tr><td align=\"center\">011 0111  (5 1s)</td><td align=\"center\"><font color=\"red\">1</font>011 0111</td><td align=\"center\"><font color=\"red\">0</font>011 0111</td></tr>\n</tbody></table>\n</blockquote>\n\n<h2>Quiz Yourself</h2>\n\n<khanex name=\"parity-error-detection\" instanceid=\"DcEapTlEirq5\">\n</khanex>\n<br>\n\n<khanex name=\"parity-error-detection-2\" instanceid=\"m55UnDfVpqqL\">\n</khanex>\n<br>\n\n<h2>Still Curious?</h2>\nAs  you learned in this lesson, with 1 redundant parity bit you can detect 1-bit errors in\na stream of bits.  Actually, you could detect that an error occurred if 1, 3, 5, or any odd\nnumber of bits were flipped, but not 2, 4, 6. or any even number of bits.\n\n<p>Detecting an error in a bit stream means that the bit stream would have to be\nretransmitted.  Or, if writing the bit stream to the disk, it would have to be rewritten. \n\n</p><h4>Error Correction Codes</h4>\nWould it be possible to <i>correct</i> errors as well as detect them?  The\nanswer is 'yes' but it will require more, redundant bits.   If you want to see how, watch this\ninteresting video. \n\n<br><br><gcb-youtube videoid=\"cBBTWcHkVVY\" instanceid=\"jVFYY3shDZPm\">\n</gcb-youtube>\n<br><br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Parity Error Checking</b></i> under the \n<i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n<li>Explain how the error card trick from Lesson 3.8 uses a parity scheme. Was it an even or odd parity scheme?\n</li><li>What are some of the limitations of using parity bits for error detection?\n</li><li>Another type of error detection is a check sum. Research what a check sum is and then describe it in your own words. Can a check sum identify where an error occurs?\n</li><li>(Optional) Explain in your own words the difference between error detection and error correction. Describe how the error correction process used in the video above allows the computer to fix errors.\n</li>\n</ol>", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 30, "duration": "", "notes": "", "properties": {}, "activity_listed": false}, {"scored": false, "now_available": true, "title": "Map Tour Tutorial", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody>\n<tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/PuXQRNjQOK0?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n<a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/maptourpreview-348003\">TeacherTube Version</a>\n</td>\n<td>\n<b><i>Map Tour</i></b> is an app that allows the user to select a \nlocation from the list picker. When a destination is selected, the \n<b><i>activity starter component</i></b> is used to launch Google maps \nand shows the chosen location on the map. This tutorial introduces \nhow to use a list picker and introduces how to use an activity starter to \nlaunch another application outside of the Map Tour app.\n\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>Create an app that\n<ul>\n<li>displays locations on a Google map.\n</li><li>uses App Inventor's <i>List Picker</i> component to select from a menu of items.\n</li><li>uses App Inventor's <i>Activity Starter</i> component to start an Android activity.\n</li>\n</ul>\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<h2>Tutorial</h2>\n\n<p>To get started, <a \nhref=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit3/templates/MapTourMediaOnly/MapTourMediaOnly.asc\" \ntarget=\"_blank\">open App Inventor with the Map Tour Media Only Template</a>\n in a separate tab and follow along with the following tutorial.\n\nIf you prefer, you can \n<a target=\"_blank\"\nhref=\"https://docs.google.com/document/d/1YGAYmsj4V-3BarVY6gAksr7OSSrgM1JVJArD9MAJgBI\">\nclick here for a text-based version</a> of the tutorial.\n<br>If you are unable to stream\nthe YouTube video, click here for the <a target=\"_blank\" \nhref=\"http://www.teachertube.com/video/maptourtutorial-348006\">TeacherTube version</a>.\n</p>\n\n<gcb-youtube videoid=\"ks6klg9EZBo\" instanceid=\"FYQnW28JjUcs\"></gcb-youtube>\n\n\n<h2>Questions and Exercises</h2>\n<question quid=\"5718532058775552\" weight=\"1\" instanceid=\"F32XeNFWaYNT\"></question><br><br><question quid=\"5711832983535616\" weight=\"1\" instanceid=\"PT9wwDizOauu\"></question><br><br><question quid=\"5728415315394560\" weight=\"1\" instanceid=\"dFCgbh08jONl\"></question><br>\n\n<h2>Still Curious?</h2>\n\n<p>In this app, you made use of Google Maps, an existing Web application that \nwas created by Google.  It is typical of many web applications in that it \nprovides ways that programmers can <i><b>interface</b></i> with it.  </p>\n\n<p>An <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Application_programming_interface\">\nApplication Programming Interface</a> or API, is a specification that describes exactly\nhow programs can interact with each other.  For example, in this case, the API specified\nthat if you wanted to tell Google Maps how to go to a specific location on a map, you\nwould code it as \"geo:0,0?q=Eiffel Tower\".   In other words, it specified what information\nyou need to provide and in what specific format.</i>\n\n<p>In other words, if you want to interface with Google Maps, you would to follow the\nspecifications set forth in the Google Maps API. \n</p>\n\n<p>The <a target=\"_blank\"\nhref=\"https://developers.google.com/maps/\">Google Maps API</a>\nprovides documentation for programmers and app developers for how\nto interact with its application. The \"geo\" tag is an example of a <i><b>URL\nparameter</b></i> and the API contains lots of other parameters for \ncontrolling how the map would appear in your app.  For example, you can\ncontrol how far it zooms in and other features.  If you want to learn more\nabout the Google Maps <i><b>geo</b></i> API, visit the <a target=\"_blank\"\nhref=\"https://developers.google.com/maps/documentation/android/intents#display_a_map\">\nthis online documentation</a>.\n\n<p>So, one interesting implication of this is that because of APIs, \nprogrammers see the Web very differently than other users.  Rather than seeing\nit merely as something to view or to search, programmers see the Web as\nsomething they can control by using APIs provided by Google, Amazon, Twitter,\nand other Web companies.\n</p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Map Tour</i></b> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n<li>What is the list picker component? How was it used in this app?\n</li>\n<li>What is the activity starter component? How was it used in this app?\n</li>\n<li>If you were on a real tour, would the Map Tour app be a good app to have and \nuse? Why or why not?\n</li>\n</ol>\n\n", "unit_id": 22, "activity_title": "", "video": "", "lesson_id": 101, "duration": "", "notes": "https://docs.google.com/document/d/1YGAYmsj4V-3BarVY6gAksr7OSSrgM1JVJArD9MAJgBI", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Unit Overview", "has_activity": false, "objectives": "<p>The main theme of this unit is <i>simulation and modeling</i>, which falls under\nthe Big Idea of <i>abstraction</i>.\n\n</p><h3>Unit Features</h3>\n<ul>\n<li>Programming: The <i>Android Mash</i> app simulates the\ntraditional Whack-a-Mole game by introducing App Inventor's \n<i>Image Sprite</i> component and the concept of randomness.  The <i>Coin Flip</i>\ntutorial introduces the concept of <i>modeling</i>, using App Inventor's \nrandom number functions to create a simulation of a coin flip.  This is extended into an\nactivity that tests whether flipping a coin many times leads to a 50:50 distribution of heads\nand tails. \n\n</li><li>CS Principles: The CS Principles lessons in this unit focus on modeling, ending with\nsome readings and discussions of real-world models for weather, the solar system, and\ncasino slot machines.\n</li></ul>", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 54, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Android Mash", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/t6rpDBelpqU?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358489\">\nTeacher Tube version</a>)</td>\n<td><b><i>Android Mash</i></b> \nis an Android take on the classic Whack-a-Mole game. \nA little Android man jumps around to random locations\nand you touch it to win points.\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will :\n</p><ul>\n<li>follow an instructor-led walkthrough to create the <i>AndroidMash</i> app on a mobile device;\n</li><li>continue learning to navigate the App Inventor programming platform;\n</li><li>develop your understanding of what an App Inventor program is;\n</li><li>develop your understanding of how timing, animation, and randomness are programmed;\n</li><li>develop your understanding of procedures and procedural abstraction;\n</li><li>deepen your understanding of event-driven programming.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n <br>\n<h2>Tutorial</h2>\nTo get started, open App Inventor with the<a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit4/templates/AndroidMashStarter/AndroidMashStarter.asc\" target=\"_blank\"> Android Mash Template</a>&nbsp;in a separate tab and follow along with the following tutorial.<br><br>\n\n<gcb-youtube videoid=\"09Lkg0xADZU\" instanceid=\"Z5U6hbJ6vuJA\">\n</gcb-youtube><br><p></p>\n\n<h2>Exercises</h2>\n<p>Complete the following exercises.&nbsp;</p>\n\n\n<question quid=\"5676830073815040\" weight=\"1\" instanceid=\"zshNdSC7ViiV\">\n</question>\n<br>\n\n<question quid=\"5750085036015616\" weight=\"1\" instanceid=\"CQ3noxG8VAqC\">\n</question>\n<br>\n\n<question quid=\"5113880120393728\" weight=\"1\" instanceid=\"vwXt5J9VkmsP\">\n</question>\n<br>\n\n<question quid=\"5187135082594304\" weight=\"1\" instanceid=\"OmriWMRM1FeB\">\n</question>\n<br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Android Mash</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.</p>\n<ol>\n<li>AndroidMash presents a new type of event which you haven't encountered before. What is that new event? How often is it triggered?\n</li><li>Consider the apps you've developed so far. Can you list all the different events your apps have responded to? What other events do you think an app can respond to? Explore some of the components in App Inventor and see what event handlers they have.\n</li><li>What are the advantages of writing procedures in programming? Consider the procedures you wrote for your MoleMash app.\n</li>\n</ol>\n", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 53, "duration": "", "notes": "https://docs.google.com/document/d/10C5Guct73NARt3brifgJ1KV92064BXM3s_dbJ83xxVw", "properties": {}, "activity_listed": false}, {"scored": false, "now_available": true, "title": "Android Mash Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"420\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/_r5jHYU9jBA?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358488\">\nTeacher Tube version</a>)\n</td>\n<td><b><i>Be creative!</i></b> In this lesson you will complete \nseveral small programming projects that add enhancements to the \nAndroidMash app.  Hints and suggestions are provided. \n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>navigating the App Inventor online programming platform;\n</li><li>deepen your understanding of event-driven programming;\n</li><li>develop your understanding of how variables are incremented;\n</li><li>develop an understanding of conditional <i>if</i> blocks and apps that make decisions.\n</li></ul>\n<p></p>\n</td>\n</tr>\n</tbody></table>\n<br>\n\n<h2>Programming and Creative Projects</h2>\n\n<ol>\n<li>Personalize the game by adding your own image for both the background and the \"mole\".\n</li>\n<li>This app is a game and a score label was added to the UI. Use what you have learned in Paint Pot 2 about adding 1 (or some other amount) to a variable to implement a score feature.\n</li><li>You could also implement keeping track of the number of misses -- i.e., the number of times the player failed to touch the Mole -- and factor this into the score.\n</li><li>If you have implemented the score feature, then create code that will reset the score when the Reset button is clicked.\n</li><li><b>Challenging:</b>  Change the speed of the mole when the player reaches a certain score.  (Hint: Recall that in this app, the Mole does not control its speed. Suggestion: This feature will require you to use an if-block which can be found in the Toolbox\u2019s Control drawer.</li>\n<li><b>Advanced:</b> Try adding in a winning score feature that congratulates the user when they reach a certain score.  (Hint: Add a TextToSpeech component and have it say something when the player reaches a certain score.  This feature will require you to use an if-block which can be found in the Toolbox\u2019s Control drawer.)\n</li>\n<li>Create one or more of your own enhancements or variations for this app.\n</li>\n</ol>\n\n<h2>Starting App Inventor</h2>\n<p>For this lesson you can use the project you created in the previous lesson. \nStart up <a href=\"http://ai2.appinventor.mit.edu\" target=\"_blank\">App Inventor</a>\nand after opening your AndroidMash project, rename it <i>AndroidMashV2</i>, for\nAndroid Mash Version 2 -- or something similar to that.  Then complete the \nprogramming exercises described in the video (or text version). </p>\n\n\n<p></p>\n<p>If you get stuck, check out the solutions video.\n</p>\n\n<h2>Solutions</h2>\n<gcb-youtube videoid=\"hUM1bbb1ulo\" instanceid=\"HaM04dUJ53Ee\">\n</gcb-youtube>\n\n<h2>Exercises</h2><h2><quizly-quizlyexercise quizname=\"quiz_reset_score\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"995\" instanceid=\"rCgLbJRceEbn\"></quizly-quizlyexercise><br><quizly-quizlyexercise quizname=\"quiz_calculate_hit_rate\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"995\" instanceid=\"7uowepixSjT4\"></quizly-quizlyexercise><br><quizly-quizlyexercise quizname=\"quiz_procedure_bug\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"995\" instanceid=\"w18q4UWKxvlM\"></quizly-quizlyexercise><br>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Android Mash Projects</i></b> under the\n<i>Creative Projects&nbsp;</i>category of your portfolio and answer the following questions.\n</p> \n\n<ol>\n<li>Give brief descriptions of the enhancements you added to your app.  Provide screen shots of important blocks and describe how you used them to solve certain programming problems.\n</li><li>When the user touches an ImageSprite, both the Canvas.Touched and ImageSprite.Touched events are triggered. This is important for more complex games. For instance, suppose there are two \"Androids\" in your game. If you hit one, you earn a point. If you hit the other, you lose two points. If you hit the Canvas and don't hit any Android, you lose 1 point. How would you code this?\n</li><li>How do you speed up the movement of the mole? What is the fastest it could move?\n</li>\n</ol>", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 55, "duration": "", "notes": "https://docs.google.com/document/d/1-1LXmhPKwFNn-ZZHcbpPVh-pIjPudF7qfcO4G80N_1E", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Coin Flip Simulation", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody>\n<tr>\n<td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/DUv8U_ACXbk?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n</td>\n<td>\n<b><i>Coin Flip</i></b> is an app that simulates a coin flip. In\nfact, because it uses App Inventor's <i><b>random number generator</b></i>,\nit may actually be fairer than a real coin flip. That is, it may come closer than a real \ncoin flip to producing \"heads\" 50% of the time .\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>create an artifact that uses Randomness and simulates a model;\n</li><li>create a simple model of a coin flipping;\n</li><li>use random number blocks to generate a random value in a specific range;\n</li><li>define a global variable and assign it an initial value;\n</li><li>use a conditional statement, <i>IF/Else</i>, to evaluate a variable and follow an \nalgorithm based on the value of a variable.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n\n<h2>A Short Experiment</h2>\nBefore getting started on the Coin Flip app, try this simple experiment:\n\n<blockquote>\n<ul>\n<li>If you flip a <b><i>fair coin</i></b> 20 times -- any type of coin will do -- \nhow many heads would you expect to get?  Write down your answer.\n\n</li><li>Now flip the coin 20 times and count the number of heads. Write down the count.\n\n</li><li>Did the count match your explanation?  Based on this experiment, could you \nconclude that your coin is fair or <i>biased</i> (not fair).\n</li></ul>\n</blockquote>\n\n<p>If you perform this experiment, heads will often come up 10 times, but not always, \neven though, supposedly, the probability of getting a head on a fair coin toss is 50%.  \n\n</p><p>The problem with this experiment is you didn't perform enough trials to draw\nany conclusion about the <i><b>hypothesis</b></i> that this is a fair coin. \n</p>\n\n<h2>Tutorial: Building the Coin Flip Simulation</h2>\n\n<p>To get started, <a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit4/templates/CoinFlipMediaOnly/CoinFlipMediaOnly.asc\">\nopen App Inventor with the Coin Flip Media Only template</a>.\n \nThis will open a project that contains the images you will need in this lesson. \nThen use the <i>Save As</i>  option to rename your project to <i>CoinFlip</i>.  \n\n</p><p>(Be patient.  It sometimes takes a moment to retrieve and open the project.)</p>\n<p>If you prefer, you can work through the <a target=\"_blank\" href=\"https://docs.google.com/document/d/11urXHm0zZOiZmKs5fhW_fFkhO_QFs6aouO-ytHF0NYU\">\nText Version</a> of the tutorial.  Or you can follow along with this video tutorial.\n\n<gcb-youtube videoid=\"42N55k043cM\" instanceid=\"MBvOhMUXi7qM\">\n</gcb-youtube>\n<br>\n\n</p><h2>Questions</h2>\n\n<question quid=\"5684049913839616\" weight=\"1\" instanceid=\"anf7AOd3KW3B\">\n</question>\n<br>\n\n<question quid=\"5759778777202688\" weight=\"1\" instanceid=\"DQWXfIqsKZRH\">\n</question>\n<br>\n\n<question quid=\"5641332169113600\" weight=\"1\" instanceid=\"aAfA6Pf0Zz3r\">\n</question>\n<br>\n\n\n<quizly-quizlyexercise quizname=\"quiz_if_x_greater_than_y\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"775\" instanceid=\"rvjUJMaLZ56s\">\n</quizly-quizlyexercise>\n<br>\n\n\n<h2>Still Curious?</h2>\n\n<p>Are coin flips fair?  While it might be the case that the coin itself is fair -- i.e., it\nfavors neither heads nor tails -- perhaps the act of flipping a coin is not fair.  This \n<a href=\"http://www.npr.org/templates/story/story.php?storyId=1697475\" target=\"_blank\">NPR story</a> reports on experiments that suggest that coin flips\nare slightly biased towards heads.\n</p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Coin Flip Simulation</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.\n</p> \n\n<ol>\n<li>Write an <i>if/else statement</i> to express the following real life situation.  \nMary likes ice cream and always chooses chocolate unless there is no chocolate in \nwhich case she chooses strawberry.  But if there\u2019s no strawberry either then she \nsettles for vanilla, which, for some reason, is always available.  (HINT: You may \nneed to put together more than 1 if/else statement to do this.)\n</li>\n\n<li>Give another example from real life where you use if/else logic to make a decision.\n</li>\n\n<li>What enables us to simulate coin flipping in this app is App Inventor\u2019s \nrandom-integer block. This blocks constitute a <i><b>model of randomness\n</b></i> -- an abstraction of real randomness such as <i>really</i> flipping\na coin.  How might we use the CoinFlip app test whether  this is a good model \nof randomness?   \n</li>\n</ol>", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 64, "duration": "", "notes": "https://docs.google.com/document/d/11urXHm0zZOiZmKs5fhW_fFkhO_QFs6aouO-ytHF0NYU/edit", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Coin Flip Experiment", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/Y5v7KjflwmA?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358491\">\nTeacher Tube version</a>)\n</td><td>\n<b><i>Coin Flip Experiment</i></b>.  In this lesson you will use a pre-built \napp, CoinFlipExperiment, to conduct an experiment aimed at determining how \n\u2018good\u2019 App Inventor is at generating random numbers.  \n\n<p>The app will let you  \u2018flip a coin\u2019 N times and  display the results.  \nYou should record and tally the results and  calculate the average \npercentage of heads.  The expectation is that as N gets \nlarge, the average should approach 50%.\n\n<br>\n<br>\n<br>\n<br>\n</p><p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>use software to conduct an experiment;\n</li><li>make and test a hypothesis about App Inventor's ability to generate\nrandom numbers. \n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<h2>Background</h2>\nHere are some things you should know  about how computers and \ncomputer languages (App Inventor) implement randomness:\n\n<ul>\n<li>Randomness is used in lots of programs, especially games (Android Mash) and simulations\n(Coin Flip).\n</li>\n<li>Creating a truly random process is hard to do.  And creating a truly random\nprocess in a computer is no exception.\n</li>\n<li>Because creating true randomness is hard, computers use algorithms known\nas <i><b>pseudo random number generators (PRNGs)</b></i>\nto simulate randomness.  This is much easier to do than generating truly random numbers.\n</li>\n<li>PRNGs generate a sequence of \"randomly seeming\" numbers.\n</li>\n<li>PRNGs are <i><b>models</b></i> of true randomness.  As such, they can be \n'good' or 'bad' depending on how well they <i><b>approximate</b></i> true randomness. Much\nresearch by mathematicians and computer scientists goes into creating good PRNGs.\n</li>\n<li>App Inventor uses a standard and well established PRNG, which should do a good job of modeling \nrandomness.\n</li>\n</ul>\n\n<h3>The Experiment</h3>\n<p>Our CoinFlip app simulates flipping a coin.  If you had a <b><i>fair coin</i></b>\nand you flipped it many, many times -- maybe a million times -- then if it were truly\nfair, you would expect it to come up \"Heads\" half the time.  That's why we say for\nany coin flip, it has a 50:50 chance of coming up heads.\n\n</p><p>App Inventor's <i><b>random integer block</b></i> uses its PRNG to\ngenerate a random sequence of integers.  In our app, the sequence is between 1\nand 2 inclusive.  So, if the PRNG is good, it should generate a 1 half the time and\na 2 half the time.  And this, in turn, should let our Coin Flip app be a good model\nof flipping a coin.\n</p>\n\n<h3>Hypothesis</h3>\n\n<p>Our <b><i>hypothesis</i></b> is that App Inventor\u2019s random integer block is a \ngood approximation  of the process of randomly generating a 1 half the time and a \n2 half the time.\n</p> \n\n<p>If you were testing that a particular coin was \u201cfair\u201d, you would flip it lots of times \nand record the number of heads and tails.  Their ratio should come out 50:50.  \nBut you have to do a lot of flips.\n</p>\n\n<p>So, to test our hypothesis about App Inventor\u2019s random integer block, we \nhave to perform a simulated \u201ccoin flip\u201d lots of times.  To help with this, we will \nuse the <i>Coin Flip Experiment</i> app, which will let us repeatedly \u201cflip\u201d a coin. \nThe app uses an algorithm that uses the random integer block.  If the random \ninteger block is a good approximation of randomness, we would expect that \nwhen it is used to model the process of flipping a coin, it would make the odds \nof getting a \u201cHeads\u201d or \u201cTails\u201d 50:50. \n</p>\n\n\n<p>For our hypothesis to be true, the ratio between \u201cHeads\u201d and \u201cTails\u201d in the app \nshould approximate 50:50 as the number of trials gets large.  The more trials \nwe perform, the closer our ratio should be to 50:50.   \n</p>\n\n<p>If the ratio does approach 50:50, that would validate our hypothesis.  \nIf it does not, that would prove that our hypothesis is invalid.  \n</p>\n\n\n<h2>Download and Install the App</h2>\n\nUse the <i>Barcode Scanner</i> app on your device to scan this\nQR code to download and install the app directly to your mobile\nphone or tablet. \n\n<br>\n<img src=\"assets/img/CoinflipQRcodeApk.png\">\n\n<p>Although you don't need it for this lesson, \nhere is a \n<a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit4/templates/CoinFlipExperiment/CoinFlipExperiment.asc\">link to the source code</a>.\n\n</p><h3>Reading the Source Code</h3>\n\nEven though we haven\u2019t used loops yet in our own apps, you should be \nable to read this block and determine whether it is valid -- i.e., \ndoes it really flip the coin N times and correctly count the number of heads?\n\n<img src=\"assets/img/CoinFlipExperimentSrc.png\">\n\n<p>Here are some things to notice in the code:\n</p><ul>\n<li>It responds to the <i>ButtonGo.Click</i> event.\n</li><li>It inputs something from <i>TextBox1.Text</i> and stores it in <i>global N</i>.\n</li><li>Before doing any calculations, it makes sure that the input was a number between\n1 and 100.\n</li><li>It initializes the <i>global Heads</i> to 0.  This variable is used to count heads.\n</li><li>It uses a <i>for range</i> loop to flip the coin <i>N</i> times.  \n</li><li>For each flip it generates a <i>random integer</i> between 1 and 2 inclusive.\n</li><li>If the random integer is 1, it adds 1 to the <i>global Heads</i>\n</li><li>When the loop finishes, It displays the number of <i>Heads</i> and <i>Tails</i>.\n</li></ul>\n\n<h3>Experimental Procedure</h3>\n\nOur hypothesis for this experiment: <i><b>App Inventor's PRNG provides a good model\nof randomness</b></i>.\n\n<p>Perform the following steps.\n\n</p><ol>\n<li>Repeatedly run the app and record the number of heads and tails received in each trial.  \nDo at least 20 runs.  You should have at least 2000 or 3000 trials (coin flips).\n</li><li>Tally your results and calculate the percentage of heads for 100 trials, 500 trials, 1000 trials, 2000 trials.\n</li><li>Create a page named Coinflip Experiment in your portfolio and record your results. \nUse a table to keep your data well organized.\n</li></ol>\n\n<h2>Still Curious?</h2>\n\n<p>Hopefully this lesson has made you curious about how PRNGs work.  If so, you\nshould check out <a target=\"_blank\" href=\"https://ram8647.appspot.com/mobileCSP/unit?unit=23&amp;lesson=65\">\nthis lesson</a>, which shows how to use some simple mathematics to\ncreate a PRNG.\n</p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>App Inventor's PRNG</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.\n</p>\n\n<ol>\n<li>Do you notice any kind of trend as the number of trials (coin flips) increases?  \nDiscuss what you expected to happen and what you observed?\n</li>\n\n<li>What does this experiment tell you about App Inventor\u2019s PRNG?  Is it \u2018good\u2019?\n</li>\n\n<li>How many trials should be performed in order to draw a conclusion one way \nor the other about our hypothesis?\n</li>\n\n<li>Because we are using a coin flip app, this experiment really tests only that\nApp Inventor's <i>random integer</i> block generates a 1 around half the time.\nIs this a sufficient test for App Inventor's PRNG?  How might you improve this experiment\n to increase your confidence in App Inventor\u2019s PRNG?\n</li>\n\n</ol>\n\n\n\n\n\n\n\n\n", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 68, "duration": "", "notes": "https://docs.google.com/document/d/123rmkHfSoBGoPazKLNw9mBh69_WXJJKchNHbgsa0ID0", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Pseudo Random Numbers (Optional)", "has_activity": false, "objectives": "<h2>Preview</h2>\n\nAs we saw in the <i>Coin Flip App</i>, App Inventor contains blocks\nthat will generate random numbers and we can use those random numbers\nto simulate real-world events.\n\nBut how does App Inventor create those numbers? How does a computer do\nrandomness?\n\n<p>This <a target=\"_blank\" href=\"https://www.khanacademy.org/computing/computer-science/cryptography/crypt/v/random-vs--pseudorandom-number-generators\">\nKhan Academy video by Brit Cruise</a> provides a nice conceptual overview of\n<i>pseudo randomness</i> and how it differs from true randomness. The type \nof <i>pseudo random number generator</i> described in the video is different\nfrom the type described in the lessons below.  But the general principles are very much the\nsame.\n</p>\n\n<h2>Computer Randomness</h2>\n\n<p>It is difficult for a computer to create a truly random event.\nTherefore, computers use a form of randomness known as <i><b>pseudo                                                                          \nrandomness</b></i> -- that is, they <i><b>simulate</b></i> randomness.\n</p>\n\n<p>A pseudo random event looks random but is completely predictable -- \nwe say it is deterministic because its output can be known by someone \nwho knows how the event was programmed. What looks random to the \nuser is actually the result of a completely predictable mathematical algorithm.\n</p>\n\n<h2>How does a PRNG Work</h2>\n\n<gcb-youtube videoid=\"ufiFEubOSd0\" instanceid=\"lIO48NDFoYTs\">\n</gcb-youtube><br>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358492\">\nTeacher Tube version</a>)\n\n<h2>Questions</h2>\n\n<question quid=\"5674248798470144\" weight=\"1\" instanceid=\"V2zojp1ygeLk\">\n</question>\n<br><question quid=\"5752142325350400\" weight=\"1\" instanceid=\"k7wbjXT2rhhz\">\n</question>\n\n<h2>Clock Arithmetic</h2>\n\n<gcb-youtube videoid=\"6Rl2ARJjjP8\" instanceid=\"GcOVXEYFGNzC\">\n</gcb-youtube>\n<br><h2>Questions</h2>\n\n\n<question quid=\"5111298845048832\" weight=\"1\" instanceid=\"IaOuiqpE3Wgw\">\n</question>\n<br><question quid=\"5659645909663744\" weight=\"1\" instanceid=\"fy17Bjiw4X9T\">\n</question>\n\n<p></p><p>If you want to practice your modular arithmetic before moving on, \nhere are some \n<a href=\"http://www-math.ucdenver.edu/~wcherowi/clockar.html\" target=\"_blank\">nice exercises</a>, with links to the answers.</p>\n\n<h2>An Improved PRNG<br><br><gcb-youtube videoid=\"MGMVKsruN7M\" instanceid=\"lPqN9lhkQNaM\"></gcb-youtube><br></h2>\n\n\n<h3>How Does a Slot Machine Work</h3>\nSlot machines are <i>special purpose computers</i> that contain a \n<i>random number generator</i> chip.  This no-nonsense video explains\nhow they work and dispels some of the many myths that surround them. \nThe bottom line: what is the only way to win on a slot machine?.\n\n<gcb-youtube videoid=\"7Wkubf1PrWg\" \"=\"\"></gcb-youtube>\n\n<h2>Still Curious?</h2>\n\n<li>Read more about <a href=\"http://en.wikipedia.org/wiki/Linear_congruential_generator\" target=\"_blank\">linear congruential \ngenerators</a> on Wikipedia.\n\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>PRNGs</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.\n</p> \n\n<ol>\n<li>Consider the following Dilbert cartoon?  Would it be possible for a PRNG \nto spit out 6 <i>NINE</i>s in a row?  \n\n<br>\n<img src=\"assets/img/dilbert.jpg\">\n</li>\n<li>Are slot machines fair? Why or why not?\n</li><li>Is it possible to devise a method that would allow you to win consistently on a\nslot machine?\n</li></ol></li>", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 65, "duration": "", "notes": "https://docs.google.com/document/d/1lYZj_SvHICcmrhKsE6mM--k_lubcBOeHHy33XhJ62fA", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Coin Flip Simulation Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/4b4bE2y8NJ8?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/358491\">\nTeacher Tube version</a>)\n</td>\n<td>\n<b><i>Be creative!</i></b>.  In this lesson you will complete several \nsmall programming projects that add enhancements to the \nCoinFlip app. \n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>add additional features to an existing mobile app;\n</li>\n<li>modify some of the code of an existing app;\n</li>\n<li>improve coding skills by solving simple and challenging programming problems;\n</li>\n<li>use <i>Math</i> random number blocks to generate a random value.\n</li></ul>\n<p></p>\n<p>\n<b>Programming Projects</b>\n</p>\nHere are some creative projects to enhance the <i>CoinFlip</i> app\nand help build your programming skills.\n\n<ol>\n<li>Modify the app so that the user can shake the phone to flip the coin. \n(HINT: Use the <a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/reference/components/sensors.html#AccelerometerSensor\">\nAccelerometer Sensor</a>.)\n</li>\n<li> Modify your app so that \u201cheads\u201d or \u201ctails\u201d is spoken when the coin is flipped. (HINT: Use the\n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/reference/components/media.html#TextToSpeech\">\nTextToSpeech</a> component.)\n</li>\n<li>Modify the event handler in the Coin Flip app to use random fraction instead of \nrandom integer. (HINT: A <i>random fraction</i> is a decimal number between \n0 and 1, not including 1.  Some examples: 0, 0.25, 0.33, 0.5, 0.66, 0,75, 0.99.)\n</li>\n\n<li><b>Advanced: </b>According to \n<a href=\"http://mathtourist.blogspot.com/2011/02/penny-bias.html\" target=\"_blank\">this report</a>, if you stand a \nbunch of Lincoln pennies on their edge and then bang the table, \nthey have a strong bias toward coming up heads. Let\u2019s suppose \nthe coin has a 70% chance of coming up heads (30% tails) in this \nexperiment.  Create a model to simulate this biased coin.  (HINT: \nCreate a separate project for this problem.)\n\n</li><li> <b>Advanced: </b> You now have an app that can flip a two-sided coin. \nModify your app that so that it can flip a \n<a href=\"http://www.statisticool.com/3sided.htm\" target=\"_blank\">three-sided coin</a>. \n(Hint: You will need an if/else block with three conditions.   You\u2019ll need a third image \nfor this problem; here\u2019s one that is openly licensed: \n<a target=\"_blank\" href=\"https://ram8647.appspot.com/mobileCSP/assets/img/Coin-edge.gif\">coin on edge</a>.)\n</li>\n<li><b>Be Creative.</b> Come up with your own ideas to enhance your app.\n</li></ol></td>\n</tr>\n</tbody>\n</table>\n<br>\n\n<h2>Starting App Inventor</h2>\n<p>\nTo get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit4/templates/CoinFlipProjects/CoinFlipProjects.asc\" target=\"_blank\">\nopen App Inventor</a>\n in a separate tab.  Then complete the programming exercises described \nin the video (or text version).  \n\n</p><p> For this lesson, download the initial version of the app from the Mobile CSP \ntemplate library as described in the video or written instructions.  Or,\njust <a href=\"http://appinventor.cs.trincoll.edu/csp/week2/templates/CoinFlipProjects/CoinFlipProjects.aia\">\ndownload the starter app</a> to your computer and import it into App Inventor.\n\n</p>\n<p>If you get stuck, check out the solutions video.\n</p>\n\n<h2>Solutions</h2>\n\n<font color=\"red\">Needed: A solutions video that walks through the solutions\nto each of the creative exercises.</font>\n\n<h2>Questions and Exercises</h2>\n\n<question quid=\"5713144022302720\" weight=\"1\" instanceid=\"c19yT6S0YPLN\">\n</question>\n<br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <i><b>Coin Flip Projects</b></i> under the \n<i>Creative Projects</i> category of your portfolio and answer the following \nquestions:\n</p><p>\n\n</p><ol>\n<li>Give brief descriptions of the enhancements you added to your app.  \nProvide screen shots of important blocks and describe how you used them \nto solve certain programming problems. \n</li>\n\n<li>Describe how one or more of your enhancements used if/else and randomness.\n</li>\n</ol>", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 66, "duration": "", "notes": "https://docs.google.com/document/d/1AKHpiQ87bE4W1YzHlAFh2uNAHuEtdMOCQVV6HfxfDzc", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Real World Models", "has_activity": false, "objectives": "The models we have studied in this unit are designed to illustrate some of the principles\nof building and using models:\n<ul>\n<li>The use of <i>abstraction</i> to remove extraneous detail and focus the\nmodel on essential aspects of the problem.\n</li><li>The use of pseudo randomness to model events, such as coin flips.\n</li><li>The importance of representation in the model.\n</li><li>The use of the model for making and testing hypotheses.\n</li></ul>\n\nThe models presented in this lesson are much larger and more complex.  Watch the \nfollowing videos and then answer the reflection questions in your portfolio.  Pay \nparticular attention to the different ways in which the models <i>abstract away</i>\ncertain details from the real world situations that are being modeled.\n\n<h3>Bill Nye, the Science Guy's Solar System Model</h3>\nBill Nye illustrates the problem of trying to build a <i><b>scale model</b></i>\nof the solar system by using his bicycle to demonstrate the relative sizes and the \nrelative distances between the planets.  \n\n<gcb-youtube videoid=\"97Ob0xR0Ut8\"></gcb-youtube>\n\n\n<h3>A Second Life 3D Model of the Solar System</h3>\nThis solar system model is built in \n<a href=\"http://secondlife.com/?gclid=CI2QgPHxjLwCFU9yQgodI24Arg\">Second Life</a>,\non online virtual world.  Think about the differences between this model and Bill Nye's.  \nWhat features of the solar system does each model represent?\n\n<gcb-youtube videoid=\"8z5mwAlxBYc\" instanceid=\"3YZj2JgMcJQz\"></gcb-youtube>\n\n<h3>A Simulation Model of Global Climate</h3>\nThis \n<a href=\"http://www.gfdl.noaa.gov/cms-filesystem-action/user_files/kd/movies/gfdlglobe_tref_d4h2x1_1970_2100_30f_1280x720.mov\" \ntarget=\"_blank\">Climate Model</a>  was created by the National Oceanic and \nAtmospheric Administration \n(<a href=\"http://www.noaa.gov/climate.html\" target=\"_blank\">NOAA</a>).  \nIt shows the predicted global temperature differences up through the year 2100.\nThe animations show the time period 1970 to 2100. For each time level shown, the temperature differences (or anomalies) were \ncalculated by subtracting the model-simulated average for the years 1971 to 2000 from the time varying 21st century \nmodel-projected temperatures. The change is in response to increasing atmospheric concentrations of greenhouse \ngases and aerosols based on a \"middle of the road\" estimate of future emissions. \n\n<p>The animation starts off (1970s) showing most areas blue (-5 to -2 \u00b0F relative to the 1971-2000 average) \nor yellow (+2 to +3.6 \u00b0F). By 2000, yellow begins to dominate. By 2050, most land areas have turned orange \nor red (+5 to +11 \u00b0F), with most ocean areas yellow. By 2099, land areas are more reddish (+9 to +14 \u00b0F), with \nmost ocean areas yellow or orange.\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <i><b>Real World Models</b></i> under the <i>Reflections</i>\n category of your portfolio and answer the following questions:\n\n\n<ol>\n<li>What are the main differences between Bill Nye's solar system model and the \nSecond Life model?\n<li>Use the Climate model to determine what it predicts the expected temperature differential in \nyour location for 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100.  Do you notice any\ntrend in these predictions?  What is the trend?  Do you think this is a reliable model? \nWhy or why not?\n\n</ol>\n\n<h2>Still Curious</h2>\n\nHere are a couple of interesting simulation and modeling examples:\n<ul>\n<li><a target=\"_blank\" href=\"http://joshworth.com/dev/pixelspace/pixelspace_solarsystem.html\">What if the Moon was 1 pixel</a> is an\ninteractive scale model of the solar system based on the assumption that the moon is 1 pixel.  \nIt really captures the idea that space is mostly empty.  \n\n<p><li><a target=\"_blank\" target=\"\">Rapunzel's Hair</a> is a physics-based simulation model \nof Rapunzel's hair.  This work was done by Trinity CS alumna Kelly Ward (PhD, UNC), who\ncurrently is a senior software engineer at Disney.\n</ul> \n", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 67, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "BB: Privacy", "has_activity": false, "objectives": "<a target=\"_blank\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=91\">\n\n<img src=\"assets/img/blowntobits.jpg\" width=\"150\" align=\"left\" hspace=\"10\"></a>\n\n<p>Computing has transformed our lives in so many ways. And mobile computing, \nwhere we are constantly connected to others and to the world via our mobile\ndevices, is challenging us right now to come with \nnew norms about privacy, security, the ownership or openness of data and information,\nand other issues. </p>\n\n<p>Like any technology, mobile computing has both positive and \nnegative impacts. We need to reflect on these impacts in general and we also \nthink about the impacts we will create as we build our own mobile apps. </p>\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<h2>Chapter 2: Naked in the Sunlight<br>\n<i>Privacy Lost, Privacy Abandoned</i></h2>\n\n<p><a target=\"_blank\" \nhref=\"http://www.bitsbook.com/wp-content/uploads/2008/12/chapter2.pdf\">\nChapter 2 of Blown to Bits</a> focuses on the issue of how\nthe digital explosion affects our privacy. </p>\n\n<p>This is an especially important issue\nfor today's <i>mobile computing</i> generation.  Our smart phones and\ntablets can not only track our electronic correspondence, they can track our\nwhereabouts, opening whole new areas of potential privacy infringements.</p>\n\n<p>What's especially interesting about the privacy question is that, for the most\npart, Americans seem to be willing to trade privacy for convenience.  We don't mind\nletting the supermarket track our purchases if that brings us discounts.  And we\ndon't seem to mind letting mobile apps know and record our whereabouts in \nexchange for some service we like.</p>\n\n<p>Read Chapter 2 to learn about some of the ways our electronic devices\nimpinge on our privacy -- some of the stories will surely surprise you.</p>\n\n\n<h2>Homework: For Your Portfolio</h2>\n\n<p>Create a page called <b><i>Blown to Bits Chapter 2</i></b> under the \n<i>Homework</i>  category of your Portfolio and write answers using \ncomplete sentences to  the following questions on  that page.\n\n\nCreate a page called Blown to Bits Chapter 2 under the Homework category on \nyour Portfolio and post your answers to these questions on that page. \nYou can revise your answers after we discuss this reading in class or in the\nforum.\n\n<h3>Questions for pages 19-55</h3>\n\n<ol>\n<h4>Short answer</h4>\n\n<li>What is an RFID tag and what does it do?</li>\n<li>What is an EDR and what does it do?</li>\n<li>Is it possible to identify someone, perhaps a patient, knowing just his or \nher gender, birth date, and zip code? Explain.</li>\n<li>What is the difference between \"big brotherism\" and \"little brotherism\"?</li>\n\n\n<h4>Free Response</h4>\n\n<li>How do you feel about \u201cBig Brother\u201d watching you? \nDo you think having security cameras everywhere is good or bad? </li>\n\n<li>Is the Privacy Act effective? Explain.</li>\n\n<li>\u201cThe digital explosion has scattered the bits of our lives everywhere: \nrecords of the clothes we wear, the soaps we wash with, \nthe streets we walk, and the cars we drive and where we drive \nthem.\u201d (pg 20) In 1 or 2 paragraphs, address the question 'Am I worried about \nmy privacy? Why or Why not?\u2019 </li>\n\n\n<h4>Bonus Questions (may require additional reading)</h4>\n\n<li>How do \u201cwe leave digital footprints and fingerprints?\u201d \nDo you think this is important for everyone to know? Why or why not?</li>\n\n<li>How has the social evolution affected privacy? Consider social networking.</li>\n \n<li>What are our responsibilities as app developers with data that is gathered \nfrom the apps we create?</li>\n\n<li>Search the web for a recent news story that deals with privacy. Write a paragraph.\n</li>\n</ol>\n", "unit_id": 23, "activity_title": "", "video": "", "lesson_id": 109, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Unit Overview", "has_activity": false, "objectives": "<p>We've been using the term <i>algorithm</i> from the beginning without explaining\nit.  And you've seen several examples of algorithms. So you probably have some ideas\nabout algorithms.  But its time for a closer look.\n</p>\n\n<h3>Unit Features</h3>\n<ul>\n<li>Programming: The Logo apps introduce the idea of procedures - named blocks of code \nthat perform a specific task. They are based on one of the very first educational programming languages.</li>\n<li>CS Principles: Algorithms are examined within the context of procedures as well as looking at common algorithms for searching and sorting. How to analyze and compare an algorithm's efficiency is also introduced.</li>\n</ul>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 71, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "What is an algorithm?", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\n<p>In many ways algorithms are at the heart of computer science. After all, algorithms, \nexpressed in computer code and interpreted by the computer, are what make our \ncomputers such powerful and adaptable machines. \n\n</p><p>An <i>algorithm</i> is <u>step-by-step procedure</u> of <u>precise instructions</u>\n that performs some calculation or computation. \n\n</p><p>Algorithms are constructed out of basic building blocks called <i>control structures</i>.\nThere are three basic control structures:\n</p><ul>\n<li><b><i>Sequence</i></b>\u2013 a sequence of instructions or statements.\n</li><li><b><i>Selection</i></b>\u2013 a conditional instruction that lets the program branch between two\nor more alternatives.\n</li><li><b><i>Repetition</i></b>\u2013 a structure that repeats one or more instructions.\n</li></ul>\n\n<p>What's amazing is that any problem that can be solved by means of an algorithm\ncan be constructed by using just these three control structures.  So, after this unit you\nwill have learned all that you need to design and build any algorithm that you can think\nof. \n\n</p><h3>Blockly Maze Algorithms</h3>\n\n<p>The following activity asks you to use sequence, selection, and repetition to solve\na bunch of maze problems that get more and more challenging as you go along. \nYou can just jump in and give that a try.  Or, here are \n<a href=\"https://docs.google.com/document/d/1q8Tqyi9DTRIGsrqQEVMdLNEEKBX-LYVl6I9n5cgZe-8\">\nsome instructions</a> if you need help getting started.\n\n<br><br><gcb-iframe src=\"https://blockly-demo.appspot.com/static/apps/maze/index.html?lang=en\" title=\"Blockly Maze Puzzles\" height=\"550\" width=\"850\" instanceid=\"nyw3rLe4fmj8\">\n</gcb-iframe>\n\n</p><h3>What is an Algorithm?</h3>\n\n<p>Now that you've created algorithms to solve those puzzles, here are some \ngeneral points about  algorithms.\n\n\n<br><br><gcb-youtube videoid=\"1acP5qz9F-Y\" instanceid=\"8xeCKTz0HcTy\"></gcb-youtube><br>\n</p>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359066\">\nTeacher Tube version</a>)\n\n<h3>Questions</h3>\n<question quid=\"5732694713434112\" weight=\"1\" instanceid=\"s6fmtT5oYOwN\">\n</question>\n<br><question quid=\"5768755258851328\" weight=\"1\" instanceid=\"2OVcDnuNJing\">\n</question>\n\n<br><question quid=\"5692201761767424\" weight=\"1\" instanceid=\"K8DT5sCu5kTx\">\n</question><br>\n<question quid=\"5636470266134528\" weight=\"1\" instanceid=\"QjymbDTYwgyB\">\n</question>\n<br><br><h3>Still Curious</h3>\nIt may seem a bit amazing to you that the three simple control structures we used \nin the Maze problems are powerful enough, in combination, to build any algorithm \nthat can be thought of?  But this fact, known as the structured program theorem, was\nproved in a 1996 research paper by Corrado Boehm and Guiseppe Jacopini. \nYou can read more about it in this \n<a href=\"http://en.wikipedia.org/wiki/Structured_program_theorem\">\nWikipedia article</a>.\n\n\n<br><br><h2>Reflection: For Your Portfolio</h2><p>Create a page named&nbsp;<i><b>What is an Algorithm?</b></i>&nbsp;under the&nbsp;<i>Reflections</i>&nbsp;category of your portfolio and answer the following questions:</p><ol><li>What is an algorithm?&nbsp;</li><li>What are the three types of control structures found in algorithms? Provide an example of each type of control structure.</li><li>In this lesson you learned about pseudocode. Try writing some pseudocode for how to wash the dishes.</li></ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 72, "duration": "", "notes": "https://docs.google.com/presentation/d/1P0r0meLMNhFMB8oXMdCH_kepxuY714ypyOiwYXy9wl8", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Logo Part 1", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table>\n<tbody><tr>\n<td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/U0X5xan1XWM?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359061\">\nTeacher Tube version</a>)\n</td>\n<td>In this lesson you will design, implement, and \ntest algorithms to draw simple shapes using a Logo-like commands.\nFor example, you will write an algorithm to draw a face made up of\nsquares and lines like the one in the picture on the left.     \n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>use primitive <i>Logo</i> commands to draw simple shapes;\n</li><li>define simple procedures to simplify the drawing process.\n</li></ul>\n<p>In our implementation of Logo, we\u2019ve replaced the Turtle with an Android.\nHere are the drawing commands you can use:\n\n</p><ul>\n<li>The <b>forward</b> command moves the Android <b>forward by 10 pixels</b>.  \n</li><li>The <b>turn</b> command causes the Android to <b>turn right by 90 degrees</b>. \n</li><li>The <b>penUp</b> and <b>penDown</b> commands puts \nthe Android's pen on or off the canvas.\n</li></ul>\n</td>\n</tr>\n</tbody>\n</table>\n\n\n<h2>Introduction</h2>\n<img src=\"assets/img/spiral.png\" width=\"200\" vspace=\"10\" hspace=\"10\" align=\"left\"> \n<a href=\"http://en.wikipedia.org/wiki/Logo_(programming_language)\" target=\"_blank\">Logo</a>\n is a programming language that was invented in the 1960s by Seymour Papert primarily\nfor educational use.   Papert believed that we learn best when we are building \nour own knowledge and ideas \u2013  when we build tangible objects \nthat help us create own mental models to understand the world around us. \n\n<p>In this lesson the tangible objects you will build are algorithms for drawing \nsimple shapes.\n\n</p><p>Logo\u2019s best known feature is its turtle -- an actual picture of a turtle -- \nthat the user can control by telling it how to move.  As the turtle moves \nit leaves behind a trail -- in other words it draws.  Imagine the trail left behind \nby an animal as it moves around in the sand on a beach.  \nLogo can be used to create very sophisticated algorithms and hence \nvery sophisticated drawings, such as the one at the top of this lesson.\n\n</p><h2>Logo Commands</h2>\n\nThe Logo programming language consists of a set of primitive commands that \ncontrolled the turtle.  You saw something like these commands in \nthe Blockly Maze exercises that you did. Taken together these commands constitute\nan <i>abstraction</i> \u2013 a language \u2013 for drawing shapes. \n\n<p>In this lesson we have\ndeliberately created a fairly <i>weak abstraction</i> \u2013 one that lets you\ndraw shapes, but only with some difficulty.  As you're working on the shapes, \nthink about how you would improve the drawing language;  that is, help us \nthink about a <i>better abstraction</i> for drawing shapes.\n\n</p>\n\n<br>\n<br>\n<h2>Tutorial</h2>\n\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit5/templates/LogoNoParamsTemplate/LogoNoParamsTemplate.asc\" target=\"_blank\">open App Inventor with the Logo 1 Template</a>\n in a separate tab and follow along with these tutorials. When the template opens, you will see a lot of collapsed blocks.&nbsp;<span id=\"docs-internal-guid-39ef5219-64db-37ef-3dde-eeaa1ea5a99e\"><span class=\"yui-tag-span yui-tag\" tag=\"span\" style=\"font-size: 13px;\"><b><u>DO NOT OPEN OR EDIT THESE BLOCKS!</u></b></span></span><br>\n<br>You can either click on the thumbnails to view the video or \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/13_Y6ynzk_NESv4BgO4TkAByUr4Ttb20ZOOBp3hmygfk\">\nclick here</a> to read the tutorial.\n\n\n</p><table>\n<tbody><tr>\n<td>\n\n<table><tbody><tr><td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=VLk7B-rslLI\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/71PN6EYx-Yc?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n\n</iframe><iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/m63RTTbupLg?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n</tr>\n</tbody></table>\n\n</td>\n</tr>\n<tr>\n<td>\nAlgorithms, procedures, abstraction (6:36)\n</td>\n</tr>\n</tbody></table>\n\n\n\n<h2>Exercises</h2><ol><li>Download and print&nbsp;<a href=\"https://drive.google.com/file/d/0B5ZVxaK8f0u9NjNuaTZ5S0Z4OUE/edit?usp=sharing\">this graph paper</a>&nbsp;to use when designing your algorithms in the following exercises.</li><li>Design an algorithm to draw a 20-by-20  (pixels) square.  \nNote: <b>Designing</b> an algorithm is not the same as <b>programming</b> it.  \nYou may first want to write it out by hand or write it on the board \nwhile working with a partner.  Part of designing it is also figuring out \nwhat your design would do -- that is, mentally thinking of yourself as \nthe Android and going through the steps of the algorithm and seeing \nwhat the result is.   This is also an exercise you could do with your partner, \ntaking turns being the turtle.\n\nAfter you have designed a good algorithm, implement it in App Inventor \nby modifying the draw() procedure to draw a 20-by-20 square.\n\n<p></p></li><li>Let\u2019s use a little <b>abstraction</b> here.  Instead of just putting\nthe steps of your algorithm into the <i>draw()</i> procedure, define\na procedure named <i><b>square20</b></i> that draws a 20-by-20 square and \nthen modify the draw() procedure so that it calls the <i>square20</i> procedure.\n\n\n\n<p><b>Procedural Abstraction</b>:  Defining procedures is a \nform of <b>procedural abstraction</b>.  The procedure you define\nhides the details of the algorithm, replacing the details with a name (<i>draw20</i>)\nthat you can simply call when you want to do that procedure. \n\n</p><p>One good reason for doing so is that you\u2019ll be able to use your procedures \nto solve other problems -- e.g., in this lesson, when you want to draw a face.  \nIn Logo, as in other languages, defining a procedure is a way of <b>extending the \nlanguage</b>.  \n\nFor example, now that you have a draw20 procedure, you can use it just like any \nof the primitive commands -- forward, turn -- you started with.\n\n\n</p><p></p></li><li>Design an algorithm for drawing a 40-by-40 square.  Then \nimplement your algorithm by defining a procedure named <i>square40</i> that \ndraws a 40-by-40 square. Then modify the <i>draw()</i> procedure so that it calls \nthe <i>square40</i> procedure.\n\n\n\n<p></p></li><li>Design an algorithm for drawing a face with a large square for the head, \n2 small squares for eyes, and a line for the mouth (nose optional).  Design and \ndefine any other procedures you need  to help simplify this problem.\n\n<table>\n<tbody><tr>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=Le8TyZ1PgJE\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/Le8TyZ1PgJE?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n</tr>\n<tr>\n<td>\nSome Solutions and Hints (8:52)\n</td>\n</tr>\n</tbody></table>\n\n<p><b>Design first, then code:</b>  This algorithm will be quite a bit more complex than \nany of the others you\u2019ve done.  You\u2019ll have to use the <i>penUp</i> procedure to \nlift the Android off of the drawing canvas.  And you\u2019ll have to plan how far \nto move forward to get the eyes and mouth placed properly.  You will definitely \nwant to plan and test this algorithm on paper or on the board before trying to \nprogram it. <b><i>Use your graph paper</i></b> to help figure the distances.\n\n</p><p>Once you\u2019ve designed a correct algorithm, implement it by defining a \nprocedure named drawFace that draws the face.  Then test your code to \nmake sure your got it right. Post a screenshot of your face drawing on your portfolio. \n</p></li></ol>\n\n<h2>Questions</h2>\n\n\n<question quid=\"5703128158568448\" weight=\"1\" instanceid=\"AcBiYHgWKEqf\">\n</question>\n<br>\n\n<question quid=\"5669283816275968\" weight=\"1\" instanceid=\"g2LYgVZzjMR5\">\n</question>\n<br>\n\n<question quid=\"5735735550279680\" weight=\"1\" instanceid=\"nzg03bEgJeRW\">\n</question>\n<br>\n\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named \n<i><b>Logo 1</b></i> under the <i>Reflections</i> category of your \nportfolio and write\nbrief answers to the following questions.\n\n<ol>\n<li>Can you draw a triangle with this set of Logo commands?  Discuss how or \nwhy not.  \n</li>\n\n<p></p><li>Discuss:  If you were designing the Logo language, how would you \nchange some of our basic commands so that it would be easy to draw a \ntriangle and easier to draw other shapes -- i.e., what should the basic commands\ndo that would make drawing easier.</li>\n\n<p></p><li>What weaknesses do you find in using the procedures (the abstractions) we gave you -- forward, turn -- for drawing simple shapes?   How would you change the definitions of these procedures to make it easier to draw shapes?  Give a specific example that illustrates how a more powerful set of procedures would improve things.</li>\n</ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 73, "duration": "", "notes": "https://docs.google.com/document/d/13_Y6ynzk_NESv4BgO4TkAByUr4Ttb20ZOOBp3hmygfk", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Logo Part 2", "has_activity": false, "objectives": "<h2>Introduction</h2>\n<img src=\"assets/img/circleflower.png\" width=\"200\" vspace=\"10\" hspace=\"10\" align=\"left\"> \n\nIn the previous Logo lesson you developed algorithms for drawing simple shapes. \nDrawing the shapes, especially the face shape, was difficult because the <i>abstraction</i>\nwe were using \u2013 the set of Logo commands \u2013 was very weak and\ninflexible.  Hopefully you noticed this.\n\n<p>For example, the forward command could only be used to move the Android \nforward by 10 pixels. The turn command could only turn the Android by 90 degrees.  \nWith those commands drawing a square with sides of 100 pixels was very tedious. Also, \nas you no doubt noticed, it was impossible to draw a simple triangle with that set of \ncommands.\n\n</p><p>In this lesson we\u2019ve improved our <i>abstraction</i>, our set of commands by \nmaking them more general. The primary improvements are in the <i><b>forward(N)</b></i>\n and <b><i>turn(D)</i></b> commands:\n</p><ul>\n<li>The <b>forward(N)</b> command moves the Android <b>forward by N pixels</b>.  \n</li><li>The <b>turn(D)</b> command causes the Android to <b>turn right by D degrees</b>. \n</li></ul>\n\nThe N and D here are <i><b>parameters</b></i>  or <b><i>arguments</i></b>. \nAnd a simple example should suffice to show how they are more general and, hence, \nmore powerful.  In the previous version to move forward by 40 pixels would require \n4 statements, each of which moved the Android forward by 10 pixels:  \n\n<table>\n<tbody><tr>\n<td> \n<pre>forward\nforward\nforward\nforward \n</pre>\n</td>\n<td>\n<img src=\"assets/img/forward40noparams.png\">\n</td>\n</tr>\n</tbody></table>\n\n<p>With this new set of commands to move forward by 40 pixels (or any number \nof pixels) requires only one command:\n\n</p><table>\n<tbody><tr>\n<td>\n<pre>forward(40)\n</pre>\n</td>\n<td>\n<img src=\"assets/img/forward40.png\">\n</td>\n</tr>\n</tbody></table>\n\n<p>The earlier version of <i>forward()</i> was very specific whereas the new \n<i>parameterized</i> version is more general, and it is the inclusion of the parameter \nthat gives it its generality.  Instead of always going forward by 10 pixels, we can \nnow go forward by any number of pixels with one procedure call.  \nThe same observations would apply to the <i>turn()</i> procedure.  \nThe earlier abstraction was too specific, allowing us only to turn by 90 degrees.  \nThe new one, because it involves a parameter, lets us turn by any number of degrees.\n\n</p><p>The old version and the new version of Logo procedures are both abstractions. \nBut clearly, the new set of abstractions are much more powerful.  \n\n</p><p>As a rule of thumb, \n<b><font color=\"magenta\">the more general a procedure (or abstraction) the better\n</font></b>.  \n\n</p>\n\n<p></p><h2>Preview</h2>\n<table>\n<tbody><tr>\n<td>\n<img src=\"assets/img/logoflower.png\" width=\"315\" height=\"420\">\n\n</td>\n<td>In this lesson you will design, implement, and \ntest algorithms to draw complex shapes using Logo-like commands.\nFor example, you will write an algorithm to draw shapes like the\nflower shown in the screen shot on the left.     \n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>use Logo commands to draw shapes;</li>\n<li>understand how procedures,parameters, and loop work; </li>\n<li>define your own procedures, your own abstractions, to draw more complex shapes.</li>\n</ul>\n<p></p>\n\n<p>For this set of exercises we will be using a more powerful set of abstractions:\n\n</p><ul>\n<li>The <b>forward(N)</b> command moves the Android <b>forward by N pixels</b>.  \n</li><li>The <b>turn(D)</b> command causes the Android to <b>turn right by D degrees</b>. \n</li><li>The <b>penDown</b>&nbsp;and <b>penUp&nbsp;</b>commands puts the Turtle's pen on or off the\ncanvas.\n</li>\n</ul>\n</td></tr>\n</tbody>\n</table>\n\n<h2><span style=\"font-size: 13px; font-weight: normal; line-height: 1.22;\">To get started, </span><a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit5/templates/LogoWParamsTemplate/LogoWParamsTemplate.asc\" target=\"_blank\" style=\"font-size: 13px; font-weight: normal; line-height: 1.22;\">open App Inventor with the Logo 2 Template</a><span style=\"font-size: 13px; font-weight: normal; line-height: 1.22;\">\n in a separate tab and follow along with these tutorials.&nbsp;</span><br></h2><p>\n<br>The following video previews the coding exercises you'll be doing. You can also &nbsp;<a target=\"_blank\" href=\"https://docs.google.com/document/d/19VVBEEdu3wU2aOan845xIuooIMo9DDKtmdNBJe7ty9M\">\nclick here</a> to read the tutorial.&nbsp;</p><table>\n<tbody><tr>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=QeyPaHiM4RY\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/QeyPaHiM4RY?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359064\">\nTeacher Tube version</a>)\n</a>\n</td>\n</tr>\n<tr>\n<td>\nProcedures, parameters, loops (6:52)\n</td>\n</tr>\n</tbody></table>\n\n\n<h2>Exercises</h2>\n\n<b>0.</b> Download and print <a href=\"https://drive.google.com/file/d/0B5ZVxaK8f0u9NjNuaTZ5S0Z4OUE/edit?usp=sharing\">this graph paper</a><span style=\"font-size: 15px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent; font-weight: normal;\"> </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent; font-weight: normal;\">to use when designing your algorithms for the following exercises.\n</span><span style=\"font-weight: bold; font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n1.</span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> Using the </span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">for-range</span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> algorithm given above for drawing a square, define a procedure called </span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">drawSquare(L)</span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> that will draw a L x L square where </span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">L</span><span style=\"font-weight: normal; font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> is the length of the side. </span><p></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\nNOTE and HINT: &nbsp;</span><span style=\"font-size: 15px; font-family: Arial; color: rgb(255, 0, 255); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">In App Inventor and other programming languages the name of the parameter doesn\u2019t matter so you can use names that are descriptive of the parameter\u2019s purpose.</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> &nbsp;For example, either of these procedure definition blocks could be used as the basis of your </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">drawSquare</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> procedure. &nbsp;The key is to use parameter names that are meaningful to you and other programmers.</span></p><br><div dir=\"ltr\" style=\"font-weight: normal; margin-left: 0pt;\" class=\"yui-wk-div\"><table style=\"border:none;border-collapse:collapse;width:624px\"><colgroup><col width=\"*\"><col width=\"*\"></colgroup><tbody><tr style=\"height:0px\"><td style=\"border-left:solid #000000 1px;border-right:solid #000000 1px;border-bottom:solid #000000 1px;border-top:solid #000000 1px;vertical-align:top;padding:7px 7px 7px 7px\"><p dir=\"ltr\" style=\"line-height:1;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><img src=\"https://lh4.googleusercontent.com/m5z4cwiIVPJt9NtpEGVBEG_IsMh470vU3v8Y-JSzRL2H1xJJayE5yBXq8121HLq4q9Y21By9Po3AEFKcQCSTYEQT8wUHQZXuv3uA5RBxxUNK3GnMpkm3PFJFFFP_efsL\" width=\"162px;\" height=\"74px;\" style=\"-webkit-transform: rotate(0rad);\"></span></p></td><td style=\"border-left:solid #000000 1px;border-right:solid #000000 1px;border-bottom:solid #000000 1px;border-top:solid #000000 1px;vertical-align:top;padding:7px 7px 7px 7px\"><p dir=\"ltr\" style=\"line-height:1;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><img src=\"https://lh6.googleusercontent.com/fRkB092k4R1ZCWHR_NW6D82z3QGyk0ouqGIE0MYBo54u_Bc7ljlmKP1MQs1dypghrq8f6WR2NtLncgcUcK2yDFu2bUmysVqeDGGCTXeyo-lLsBVDfUj35EuFc-KoMXRK\" width=\"233px;\" height=\"76px;\" style=\"-webkit-transform: rotate(0rad);\"></span></p></td></tr></tbody></table></div><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">To test your algorithm, you have to call it from the </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">draw()</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> procedure because that\u2019s the procedure that will be run when you click on the Draw button.</span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n2. </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Design an algorithm for drawing an equilateral triangle -- i.e., a triangle with equal sides and equal angles. &nbsp;First design it by hand -- how much does the Android have to turn? &nbsp;Because this is another example of a </span><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">repetition</span><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">, </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">you can use the </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">for-range</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> statement in your algorithm. How many repetitions are necessary? &nbsp;&nbsp;\n</span><img src=\"https://lh3.googleusercontent.com/hVpshsRiP1a83pWXlLq3MoavAJpymk9C75qFhNahw7CunOuMFLejVjpM5tC-xGmUx-N0SLb4Ql53SAry5IqKLIDaD_7iHqNJHHDHbZ64oXv8vG99mmdGOvdI-aq-U54a\" width=\"80px;\" height=\"64px;\" style=\"-webkit-transform: rotate(0rad);\" class=\"selected\"></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Once you\u2019ve got the algorithm figured out, implement it in App Inventor and test it. &nbsp;Because you might want to use your triangle algorithm again, define it into a procedure with a parameter. &nbsp;What should the parameter represent?</span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n3. </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Draw a pentagon -- i.e., a 5-sided figure with equal sides and angles. &nbsp;Again, first design it by hand -- how much does the Android have to turn to draw a pentagon? &nbsp;Since this is another example of a </span><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">repetition</span><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">, </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">use the </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">for-range</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> statement in your algorithm. How many repetitions are necessary? \n</span><img src=\"https://lh4.googleusercontent.com/xubraCZRe7nNft51qhaXAqjXVqA7sUzl4F7i9uyY3QrF4kjouyPrm40KjZG5PtVnher5c46WWCO-upis6s9r0rDGCiSvWq2GtXHeVtf-azZofjLwClrERoPvu0URGkhi\" width=\"107px;\" height=\"95px;\" style=\"-webkit-transform: rotate(0rad);\"></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">HINT: To draw a square the Android had to turn 4 times each by 90 degrees meaning it turned a total of 360 degrees. </span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Once you\u2019ve got the algorithm figured out, implement it in App Inventor and test it. &nbsp;&nbsp;Because you might want to use your pentagon algorithm again, define it into a procedure with a parameter. &nbsp;What should the parameter represent?</span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n4. (Advanced) </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Squares and pentagons are both examples of a more general shape, a polygon. A</span><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> polygon</span><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">is an multi-sided figure. So a square is a polygon with 4 sides and a pentagon is a polygon with 5 sides. &nbsp;If you could design a </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">polygon(N)</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> procedure, then you could use it to draw a square or a pentagon or hexagon (6 sides) or octagon (8 sides) or even approximate a circle (36 sides?). &nbsp;&nbsp;So give it a try. There\u2019s quite a payoff if you can do it.\n</span><img src=\"https://lh6.googleusercontent.com/xW5bIbilcJ5mOkJ5gfRpqmJuvT8p3YsCZn3QgCdIyjpLdX6Jm0htP5oycf_lHwh3-HT-hhpbe2eVyQ6R0fdPy3BhqePGe6Ct2iPnip_Nrzup_RReB1g6qwpV49JVNfr4\" width=\"94px;\" height=\"109px;\" style=\"-webkit-transform: rotate(0rad);\"><img src=\"https://lh4.googleusercontent.com/ictiCrvg5xFmQyFWcjcLRcM8lRrXyeHr1O7mh5zake-JwcA0UHvkCSu4GWBAwXHI-7hyY9znNiYFDxEE0OOCEG8RRT-3PSIAel73o48yW6499_s1yq9fJGx-d6TNRqHB\" width=\"103px;\" height=\"82px;\" style=\"-webkit-transform: rotate(0rad);\"></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">HINT: &nbsp;Your procedure will need 2 parameters, N, and L, where </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">N </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">is the number of sides (e.g., 4, 5, 6, etc.) and </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">L</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> is the length of each side. </span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">HINT: A 4-sided figure has 4 sides and turns by 360/4 degrees. &nbsp;A 5-sided figure has 5 sides and turns by 360/5 degrees.</span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Test your polygon() procedure by using it to draw a hexagon (6 sides) &nbsp;and a octagon (8 sides). Again, you will have to call your procedures from the </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">draw()</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> procedure. &nbsp;</span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n5. </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Use your </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">drawPolygon() </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">procedure to draw a circle. &nbsp;This exercise might require some trial and error to get the the number of sides and the length of the sides right. &nbsp;Does a 36-sided polygon look like a circle?\n</span><img src=\"https://lh4.googleusercontent.com/olJKqg7rZV40zl4nsi_ds3XxqP8G4geLn05Y8jrZ4PmFubatXxaRsTPDiXlqIPODuWgGP9MrVqzAtJBMVMc2rISGbyXMBE98GnC7QdA4ZldaLLjQyRWasVQEgbCAZUO5\" width=\"35px;\" height=\"37px;\" style=\"-webkit-transform: rotate(0rad);\"></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n6. </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Draw a flower by repeatedly drawing a square and turning right by some number of degrees.  </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">(</span><span style=\"font-size: 15px; font-family: Arial; color: rgb(255, 0, 0); font-weight: bold; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">NOTE</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">: To change the color of the drawing pen you need to set the </span><span style=\"font-size: 15px; font-family: Arial; color: rgb(255, 0, 0); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Canvas.PaintColor</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> property. If you want a random color you can use the </span><span style=\"font-size: 15px; font-family: Arial; color: rgb(255, 0, 0); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">getRandomColor()</span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">block that is provided. Setting the global </span><span style=\"font-size: 15px; font-family: Arial; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">penColor</span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"> variable won\u2019t have any effect on the Canvas.)</span></p><div class=\"yui-wk-div\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><br></span></div><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt; text-align: center;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><img src=\"https://lh4.googleusercontent.com/ICSmYap2ByT8xB5qrj6XhIX4xv5vknIHmO_Pk9nRdC_HqsTU41if2gPx3562AsdinzV0XTvefiyZGgAL1yZf9mxlWyuCWPygjdwV4QOQ_AKSaQ5dUGXennKDX3AEIXY6\" width=\"127px;\" height=\"129px;\" style=\"-webkit-transform: rotate(0rad);\"></span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n7. </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Draw a flower with some missing petals -- i.e., use if/else and randomness.</span></p><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt; text-align: center;\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><img src=\"https://lh4.googleusercontent.com/xjR2loakPVyF5P8ggnB3zh5Apdd4Xpm6Dt8LitnEJtHqOItw-u4xHfkkbGQwxZiORJBCKMH2l9XL3N-B7LxBK5Xkixa6JHn5fxwJGQi1BbD04ffai-MmZSD6Ypf3MO-p\" width=\"136px;\" height=\"138px;\" style=\"-webkit-transform: rotate(0rad);\"></span></p><br><br><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 15px; font-family: Arial; font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n\n8. </span><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">Design and draw your own shapes, including flowers, spirals, stars. &nbsp;For example, here\u2019s an interesting flower-like shape that was made by rotating a circle:</span></p><p dir=\"ltr\" style=\"font-weight: normal; line-height: 1.15; margin-top: 0pt; margin-bottom: 0pt; text-align: center;\"><span style=\"font-size: 13px; font-family: 'Courier New'; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><img src=\"https://lh4.googleusercontent.com/saSpYGzk7-vWcbHdk4IJpznO4lEFM3aRmsFc48_d2QHeiPT49oFqP4pnWz9FJ1oYcWq_dAzPNx6cMU4VL5aM9SPG0kwZzVl1JEQLEMmzwK4uCeZUT0JphYmnNP2mjez9\" width=\"152px;\" height=\"153px;\" style=\"-webkit-transform: rotate(0rad);\"></span></p><div class=\"yui-wk-div\" style=\"font-weight: normal;\"><span style=\"font-size: 13px; font-family: 'Courier New'; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\"><br></span></div>\n\n<h2>Solutions</h2>\n\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=hZDdxvJhEPk\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/hZDdxvJhEPk?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n\n<h2>Questions</h2>\n\n\n<question quid=\"5655608640405504\" weight=\"1\" instanceid=\"3Ewg4FdCy3qn\">\n</question><br><question quid=\"6327864102223872\" weight=\"1\" instanceid=\"CfkKSWiFf3aM\"></question><br>\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named \n<i><b>Logo 2</b></i> under the <i>Reflections</i> category of your \nportfolio and write\nbrief answers to the following questions.\n\n<ol>\n<li>The lesson here is that our choice of abstractions, in this case the use \nof parameters in our Logo commands, affects the kinds of problems \nwe can solve and how we solve them. That  is, our choice of abstractions \nhave an enormous impact on our algorithms. In addition, procedural \nabstraction (both with and without parameters) makes algorithms easier \nby raising the level of abstraction.\n\n<p>Describe in your own words, with a specific example from Logo,\n how our choice of abstractions (commands) in this lesson provides\nus with the ability to solve problems that couldn't be solved with the\nabstractions (commands) used in Logo Part 1.</p></li></ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 74, "duration": "", "notes": "https://docs.google.com/document/d/19VVBEEdu3wU2aOan845xIuooIMo9DDKtmdNBJe7ty9M", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Search Algorithms", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\n<p>Search is a very important area of study in computer science. Just think of how \noften you search for information on the Internet using Google or some other search \nengine.  It's remarkable how much information Google's algorithms search through and\nhow fast they deliver the results.  \n\n<gcb-youtube videoid=\"BNHR6IQJGZs\" instanceid=\"z5nIeP7Pll3O\">\n</gcb-youtube>\n\n</p>\n<p>So, as the video described, when you do a Google search, you aren't actually\nsearching the Web, you're searching Google's index of the Web.  Google's\n<i>spider programs</i> are constantly traversing the web, collecting millions of \nweb pages and organizing them into an <i>index</i>.  When you do a Web search\nGoogle's algorithms are searching that index.\n\n</p>\n<p>What's the best algorithm for searching an index?  An index is an <i>ordered</i> \ncollection.  Think of the index that comes  at the back of a textbook.  It is organized \nin alphabetical order. Each entry in the index refers to some page in the book. \n\n</p>\n<p>Because indexes are ordered, searching them can be done very efficiently.  \nTo illustrate this, let's look at an analogous problem \u2013 that of guessing a secret number.\n</p>\n\n<h2>Guessing Game:  I'll Guess Your Secret Number</h2>\n\n<center>\n<gcb-iframe src=\"https://appinventor.trincoll.edu/binaryguess/\" \ntitle=\"Binary Search\" \nheight=\"350\" width=\"450\" \nalign=\"center\" instanceid=\"qbErdUbAgDxC\">\n</gcb-iframe>\n</center>\n\nOne way to look at this game is that we are searching for a number in a \nlist of numbers.  Our search made use of the fact that numbers are ordered. The \nfeedback we received \u2013 \"too high\" or \"too low\" \u2013  was based on that\norder.\n</p>\n\n<p>The algorithm used in this game is known as <i><b>binary search</b></i> \u2013\n so called because it repeatedly divides the search space into two parts.   It keeps the\nhalf that possibly contains the secret number and throws away or ignores the other half.\nBinary search is an example of a <b>divide and conquer</b> approach to solving the problem,\nso-called, because it breaks the big problem into smaller problems and works on the\nsmaller problems.  \n\n<p>Here's a summary of the algorithm in pseudocode:\n\n<h3>Pseudocode for Binary Search for a Target Number in  a List of Numbers</h3>\n\n<blockquote>\n<pre>\nRepeat until your guess is correct or until you run out of numbers in the list.\n    Guess that the target number is the middle number in the list.\n    If the guess is too high,\n       Cut off the top half of the list.\n    If the guess is too low,\n       Cut off the bottom half of the list.\n    If the guess is correct,\n       Stop.\n</blockquote>\n\n<p>Note that this algorithm accounts for the possibility that the Target\nnumber may not be in the list, which wasn't the case in our Guessing Game.\n\n\n<h2>Now You Guess My Secret Number</h2>\n\n<p>Can you apply the <i><b>binary search</b></i> algorithm?\nIn this version of the game the computer will pick a secret number\nand you will try to guess it.  \n\n<p>If you understand the binary search algorithm, you should be able\nto guess a secret number between 1 and 100 in at most 7 guesses.  And\nyou should be able to guess a number between 1 and 1000 in at most\n10 guesses.   Give it a try!\n</p>\n\n<center>\n<gcb-iframe src=\"https://appinventor.trincoll.edu/binaryguess/game.html\" \ntitle=\"Binary search 2\" height=\"350\" width=\"450\" align=\"center\" \ninstanceid=\"huHMgRJGuaCr\">\n</gcb-iframe>\n</center>\n\n<h2>Sequential Search</h2>\n\n<p>What if you had to search a set of data that was <b>not sorted</b>?  Binary\nsearch won't work in that case.  To illustrate this problem, let's try a variation of our\nguessing game.  This time the app will only tell you if your guess is right or wrong, not\nwhether it is too high or too low.  Try it.\n\n<center>\n<gcb-iframe src=\"https://appinventor.trincoll.edu/binaryguess/sequential.html\" \ntitle=\"Sequential guessing\" height=\"350\" \nwidth=\"450\" align=\"center\" \ninstanceid=\"tMyBr7m7BCqa\">\n</gcb-iframe>\n<br>\n</center>\n\n<p>As you can see from this game, if you don't know the order of the items you are\ngoing to search, you have no choice but to search them <i><b>sequentially</b></i>\nif you definitely want to find the secret number. \n\n</p><p>Here's a summary of the sequential search algorithm.  Let's suppose we have 16 boxes\nnumbers 1 to 16, each containing a letter, but that the words are not in any particular\norder:</p>\n\n<table>\n<tbody><tr>\n<td>\n<b>Problem: Find the letter 'F'</b>  \n<table>\n<tbody><tr><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>6</td><td>7</td><td>8</td></tr>\n<tr><td>U</td><td>E</td><td>Z</td><td>A</td><td>M</td><td>L</td><td>S</td><td>T</td><td>B</td></tr>\n</tbody>\n</table>\n</td>\n<td>\n<b>Pseudocode of Sequential Search Algorithm</b>\n<pre>Let <b>b</b> represent the box number to search, initially 1\nRepeat until you find 'F' or run out of boxes to search\n    Look in box <i>b</i>.\n    If 'F' is in box <i>b</i>, stop and report <i>b</i>'s value.\n    Otherwise, add 1 to <i>b</i>\nIf you don't find 'F' in any box, report it not found.\n</pre>\n</td>\n</tr>\n</tbody></table>\n\n<p>So in this algorithm we are letting <i>b</i> keep track of what box we are searching. It\nstarts at 1 and increases by 1 so that we will look at every box until we find\n'F' or run out of boxes.  If we find 'F' we report what box it was in by reporting <i>b</i>'s\nvalue.  If we don't find it, we report  that it wasn't found.\n\n</p><p>Searching for 'F' in this set of boxes represents our \n<b><i>worst case scenario</i></b>\nbecause our algorithm would have to look in every box to conclude that 'F' was not in the\nboxes. \n\n</p>\n<h2>Questions</h2>\n<question quid=\"5743868070854656\" weight=\"1\" instanceid=\"IYkJZHyerpHQ\">\n</question>\n<br>\n\n<question quid=\"5663741160980480\" weight=\"1\" instanceid=\"HPw4oFOZo97d\">\n</question>\n<br>\n\n<question quid=\"5721036024709120\" weight=\"1\" instanceid=\"BiXBGxXnEGap\">\n</question>\n<br>\n\n<question quid=\"5753952654065664\" weight=\"1\" instanceid=\"xVPFmwQHEPEM\">\n</question>\n<br>\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Search Algorithms</i></b> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n   <li>Suppose you have a deck of cards and you want to find the Ace of Spades. If the deck is shuffled, which is the best search algorithm to use and why?</li>\n   <li>What other examples of searching have you seen in the real world? Do they use sequential, binary, or some other search? </li>\n</ol>\n\n", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 75, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Sorting Algorithms", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\n<p>This lesson will focus on different sorting algorithms and we will use a deck of \ncards in some of the examples.   If you have a deck of cards handy, it may \nhelp you understand the algorithms better. \n\n</p><p>Sorting is a very important area of study in computer science. As we saw in the previous\nlesson on <i>Search</i>, it is much more efficient to search a collection if its elements\nare in order.  <i>Sorting</i> is the process of putting objects in order. Sorting\nalgorithms have been studied extensively by computer scientists.\n\n</p><p>One of simplest sorting algorithms is the <i>bubble sort</i>.  Here's a video\nthat demonstrates a version of the bubble sort on a collection of 13 playing cards.  \nAs you watch it, see if you can discover the algorithm.\n\n<gcb-youtube videoid=\"f6bGSRYYVwo\">\n</gcb-youtube>\n\n</p>\n<p>Bubble sort is an example of a <i><b>comparison sort</b></i>.  It repeatedly\ncompares two cards, placing the smaller one on the left pile.   As you can see, bubble sort \nmakes several <i>passes</i> through the cards?  \n\n<question quid=\"5730192894984192\" weight=\"1\" instanceid=\"5hCFxYf1Jdcs\">\n</question>\n\n</p><p>The bubble sort is so-called because on each <i>pass</i> through the data, \nthe highest value \"bubbles\" to the top.  For example, in the video, after the first pass,\nthe <i>Ace</i> is placed on the sorted pile. On the second pass, a <i>Queen</i> is\nplaced on the sorted pile.  And so on.\n\n</p><h2>Pseudocode for Bubble Sort</h2>\n\n<p>Here is a <i>pseudocode</i> description of the bubble sort as seen in the video:\n\n</p><pre><font color=\"blue\"><b>To Bubble Sort a deck of N cards:</b></font>\nPlace the unsorted deck, face down, in the right hand pile.\n<b>Repeat</b> N times\n    Put the top card of the right pile in your hand.\n    <b>Repeat</b> until there are no more cards in the right pile.\n        <b>If</b> the card in your hand &gt; the top card on the right pile\n            Place top card on the left pile.\n        <b>Else</b>\n            Place the hand card on the left pile.\n    When the pass if finished, put the card left in your hand on the sorted pile.\n    Move the left pile to the right pile.\n</pre>\n\n<h3>Activity</h3>\n\nIf you have a deck of cards handy, try to use the bubble sort algorithm to sort a\nsmall part of the deck \u2013 six or seven cards.\n\n<h2>Merge Sort</h2>\n\n<p><i><b>Merge sort</b></i> is another comparison sorting algorithm,\nso called because it merges the cards into ever larger piles of cards.  \nSee if you can follow the algorithm.\n\n<gcb-youtube videoid=\"OW3Be5CvYgA\">\n</gcb-youtube>\n\n</p><p>As you can see, merge sort starts with the cards in piles of 1 card each.\nThen on each pass, it merges them into piles of 2 cards, then 4 cards, then 8 cards,\nand so on,  until all the cards are merged into one sorted pile.   You probably also \nnoticed that it was quite a bit faster than bubble sort.\n\n</p><h2>Pseudocode of Mergesort</h2>\n\nHere is a pseudocode description of merge sort as seen in the video:\n\n<p></p><pre><font color=\"blue\">\n<b>To Merge Sort a deck of N cards:</b></font>\nDivide the cards into N piles containing one card each.\n<b>Repeat</b> until there is 1 pile containing all <i>N</i> cards:\n    Merge adjacent piles into new piles that are twice as big.\n</pre>\n\n<p>As you can see, <i>Merge sort</i>, like binary search, is another example of \n a <b>divide and conquer</b> approach to solving the problem,\nso-called, because it breaks the big problem into smaller problems and works on the\nsmaller problems.  In this case, the deck is divided into piles of 1 card each before\nmerging the piles.\n\n<h3>Activity</h3>\n\nIf you have a deck of cards, try sorting it using merge sort.  If you try the\nalgorithm on 16 cards, you will always have the same number of cards in each pile. \n\n<h2>Bucket Sort: A Non Comparison Sort</h2>\n\n<p>Not all sorts are <i>comparison</i> sorts.   One example of a non-comparison sort, \nis the <i><b>bucket sort</b></i>, which uses some feature of the values being sorted\nto place them into distinct buckets.  The buckets are then combined together.   \n\n</p><p>In this video, the buckets are the values of the cards -- i.e., 2, 3, Jack, Ace, and so on.\n\n<gcb-youtube videoid=\"LroZPmBGwDY\" instanceid=\"8fpri6tNiwTc\">\n</gcb-youtube>\n<br>\n<br>\n\n</p><p>As you see, bucket sort does not compare one card with another.  Rather,\nit looks at the card's value and places it into the appropriate bucket.  Once all the cards\nare in their buckets, they are collected together in order.  This\nsort is the fastest of the three examples we've considered. \n\n</p><h3>Pseudocode for Bucket Sort</h3>\n\n<p>In order for bucket sort to work, you would have to be able to perform some  calculation \nthat would convert the item being sorted into a number that can be used to identify \nits bucket. For example,  we could use\nthe following scheme to give numbers to our playing cards:\n\n</p><table>\n<tbody><tr><th>Card</th><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td>\n<td>9</td><td>10</td><td>Jack</td><td>Queen</td><td>King</td><td>Ace</td></tr>\n<tr><th>Bucket</th><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td>\n<td>9</td><td>10</td><td>11</td><td>12</td><td>13</td><td>14</td></tr>\n</tbody></table>\n\n<p>We have simply given numerical values (called <i>ranks</i>) to each of the face cards. \n Now if we have 13 buckets, numbered 2 through 14, then we could use the following \nalgorithm to bucket sort them:\n\n</p><p></p><pre><font color=\"blue\">\n<b>To Bucket Sort a deck of N cards:</b></font>\n1. For each card in the deck, put it into the bucket indicated by its rank.\n2. Starting with the lowest numbered bucket, collect all the cards together.\n</pre>\n\n<h3>Activity</h3>\n\n<p>That's it.  Pretty simple, eh?  If you have a deck of cards, try it with the full 52-card\ndeck.  After step 1, bucket number 2 should contain all the 2s in the deck.  Bucket \nnumber 14 should contain all the Aces. If you collect all the cards together in buckets 2, then\n3, then 4, and so on, the deck will be completely sorted.\n\n</p>\n\n<h2>Radix Sort</h2>\n\n<p>Bucket sort is actually an example of a more general \nnon-comparison sort called <i><b>radix</b></i>.  The word <i>radix</i> is another \nword for <i>base</i> and the original idea behind \nradix sorting is to sort numbers by their digits.  \n\n</p><p>For example, suppose we want to sort\nthe following list of base 10 2-digit numbers.  For convenience we will use leading 0s for \nnumbers between 1 and 9:\n\n</p><pre>25 26 01 31 24 22 17 16 07 09\n</pre>\n\n<p>We begin by putting them in buckets based on their <i>least significant digit</i> \u2013\ntheir rightmost digit.\n\n</p><table>\n<tbody><tr><td>Buckets</td><td>0s</td><td>1s</td><td>2s</td><td>3s</td><td>4s</td><td>5s</td><td>6s</td><td>7s</td>\n<td>8s</td><td>9s</td></tr>\n<tr><td>Values</td><td>&nbsp;</td><td>01</td><td>22</td><td>&nbsp;</td><td>24</td><td>25</td><td>26</td>\n<td>17</td><td>&nbsp;</td><td>09</td></tr>\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>31</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>16</td>\n<td>07</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n</tbody></table>\n\n<p>Now if we take the numbers out of the buckets from left to right and from top to bottom in each bucket we get\nthe following list:\n\n</p><pre>01 31 22 24 25 26 16 17 07 09\n</pre>\n\n<p>Now let's put them into buckets by their left-most digit: \n\n</p><table>\n<tbody><tr><td>Buckets</td><td>0s</td><td>1s</td><td>2s</td><td>3s</td><td>4s</td><td>5s</td><td>6s</td><td>7s</td>\n<td>8s</td><td>9s</td></tr>\n<tr><td>Values</td><td>01</td><td>16</td><td>22</td><td>31</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>\n<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n<tr><td>&nbsp;</td><td>07</td><td>17</td><td>24</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>\n<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n<tr><td>&nbsp;</td><td>09</td><td>&nbsp;</td><td>25</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>\n<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>26</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>\n<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n</tbody></table>\n\nIf we now take the numbers out of the buckets from left to right and from top to bottom we get the following sorted list:\n<pre>01  07 09 16 17 22 24 25 26 31\n</pre>\n\n<p>As you can probably see, we can sort numbers of any size by re-using the buckets as \nwe sort them through successive passes starting with their rightmost digit and working to \ntheir leftmost digit.\n\n</p><p>\n\nHere's a really cool example of radix sort on the playground.  In this example, the kids are sorting \n3 digit numbers using 9 buckets.  First the sort by the ones digit. Then regroup in order.  \nThen by the tens digit.  Then regroup in order. And then by the hundreds digit. \nThen regroup, at which point the numbers are sorted.   \n(Notice there's on bucket for '0' in this example.  So none of their numbers contain a 0. \n<br>\n\n<gcb-youtube videoid=\"ibtN8rY7V5k\">\n</gcb-youtube>\n\n\n\n</p>\n\n<h2>Questions</h2>\n<question quid=\"5676325415157760\" weight=\"1\" instanceid=\"XHJqIsMHbwwT\"></question>\n<question quid=\"5162252189564928\" weight=\"1\" instanceid=\"j3yhzrzPNj8c\"></question>\n<question quid=\"5152476843999232\" weight=\"1\" instanceid=\"mTYokUhYUNqy\"></question>\n<question quid=\"5748755743637504\" weight=\"1\" instanceid=\"gSiMLlcCz0eL\"></question>\n<br>\n\n<h2>Still Curious?</h2>\n\n\n\n<ul>\n<li>This discussion of <a href=\"http://en.wikipedia.org/wiki/Merge_sort\">Merge Sort</a>\nincludes a nice animation.\n</li><li>An accessible analysis of <a href=\"http://en.wikipedia.org/wiki/Radix_sort\">Radix Sort</a>.\n</li><li>Even President Obama knows about bubble sort:\n<br><gcb-youtube videoid=\"k4RRi_ntQc8\"></gcb-youtube>\n</li>\n\n</ul>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Sort Algorithms</b></i> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n   <li>Bubble and Merge Sort are referred to as comparison sorts because the values of the two pieces of data are compared during each step. Why are the radix and bucket sort not comparison sorts?</li>\n   <li>Which sort do you think would be the fastest if you had to sort more than one deck of cards? Why?</li>\n</ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 76, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Analyzing Algorithms", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/tgh2jkNZSQA?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359065\">\nTeacher Tube version</a>)\n</td>\n<td><b><i>Searching and Sorting Experiments.</i></b>\nIn this lesson we are going to use an App Inventor app to experiment with and\nanalyze the algorithms we have been studying.  You will be running two different\napps, one to test the search algorithms and one to test the sorting algorithms.\n\n<p>This activity will resemble that of a scientific investigation.  You'll run the \napps repeatedly on different lists of data, record the running times of the algorithms,\ntabulate and graph your data, and then analyze the results.  Can you figure out from\nthe results, which algorithm is which?\n\n</p><p>Another way to look at this activity is as <i>quality assurance (QA)</i>.  Many\ncareers in the computing field start with assignments in QA.  This is where you help\nsoftware developers test and debug their apps. \n\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>conduct an empirical (experimental) investigation of basic search and sort \nalgorithms;\n</li><li>think analytically about basic search and sort algorithms;\n</li><li>deepen your understanding of basic search and sort algorithms.\n</li></ul>\n<p></p>\n</td></tr>\n</tbody></table>\n\n<h2>Introduction</h2>\n\n<p>In this lesson we want to continue our study of algorithms, including the following\nquestions. \n\n</p><ul>\n<li>What is algorithm analysis?\n</li><li>What are the main categories for analyzing the running time of algorithms?\n</li></ul>\n\n<h2>Analyzing Search Algorithms</h2>\n\n<gcb-youtube videoid=\"ysH2rtU1Q9A\" instanceid=\"zAWN0FH9JQwu\">\n</gcb-youtube>\n\n<h2>Search Experiment</h2>\n\n<table><tbody>\n<tr>\n<td>\n<img src=\"assets/img/searchappscreen.png\" width=\"200\">\n</td>\n<td>\n<b><i>Empirical Search Analysis.</i></b>\n\nIn this activity you are going to use an App Inventor app to experiment with and\nanalyze the binary and sequential search algorithms.  \n\n<ol>\n<li>Create a portfolio page named <i>Search Experiment</i>.\n</li>\n<li>Use the Barcode Scanner app -- you can download it from the Play Store\nif you don't have it \u2014 to download the <a target=\"_blank\" href=\"http://appinventor.cs.trincoll.edu/csp/gcb/SearchExperiment.apk\">Search Experiment app (APK)</a>\nfrom the QR code:\n<br>\n<img align=\"right\" src=\"assets/img/SearchAppQR.png\">\nIf you are using the emulator, you can download the <a href=\"assets/img/SearchExperiment.aia\" target=\"_blank\">aia file</a> and import it into App Inventor.\n</li>\n<li>You will be performing a <b>worst case</b> analysis of the algorithms.  Whenever\nyou press the search button, the app will search for a number that is <i>not</i> in the\nlist.\n</li>\n<li>Test each search algorithm on lists of size 1000, 2000, ..., 10,000 numbers. \n<b>NOTE: </b> Because these algorithms involve loops, you may see an ANR\n(App Not Responding) popup informing you that the app is not responding and\ngiving you the option to \"wait\" or stop the app.  Choose \"wait\".\n</li>\n<li>Create a table on your portfolio and write the search time in milliseconds (ms) \nfor each test case. You should have a total of 20 test cases, 10 for each algorithm.\n</li>\n<li>Use <a href=\"https://drive.google.com/file/d/0B5ZVxaK8f0u9NjNuaTZ5S0Z4OUE/edit?usp=sharing\">this graph paper</a> (or a spreadsheet) to record and graph your results.  Take a picture of your\ngraph and upload it to your portfolio.</li>\n<li>Analyze your results to determine which algorithm is which. Which is the\n<i>binary</i> and which is the <i>sequential</i> search.  Provide a clear\ndescription, referring to your graph and your tabulated data, to explain how \nyou arrived at your conclusion.\n</li>\n</ol>\n\n<p></p>\n\n\n</td>\n</tr>\n</tbody></table>\n\n<h2>Analyzing Sort Algorithms</h2>\n\n<gcb-youtube videoid=\"_Pi0EGdUxEw\" instanceid=\"3XWKVZx9nZyD\">\n</gcb-youtube>\n\n\n<h2>Sort Experiment</h2>\n\n<table><tbody>\n<tr>\n<td>\n\n<img src=\"assets/img/sortappscreen.png\" width=\"200\">\n</td>\n<td>\n<b><i>Empirical Sort Analysis.</i></b>\n\nIn this activity you are going to use an App Inventor app to experiment with and\nanalyze the bubble, merge, and bucket sort algorithms.  \n\n<ol>\n<li>Create a portfolio page named <i>Sort Experiment</i>.\n</li>\n<li>Use the Barcode Scanner app -- you can download it from the Play Store\nif you don't have it -- to download the \n<a target=\"_blank\" href=\"http://appinventor.cs.trincoll.edu/csp/gcb/SortExperiment.apk\">\nSortExperiment app (APK)</a>\nfrom the QR code:\n<br>\n<img align=\"right\" src=\"assets/img/SortAppQR.png\">\nIf you are using the emulator, you can download the <a href=\"assets/img/SortExperiment.aia\" target=\"_blank\">aia file</a> and import it into App Inventor.\n\n</li>\n<li>Test each sort algorithm on lists of size 10, 20, ..., 100 numbers. \n<b>NOTE: </b> Because these algorithms involve loops, you may see an ANR\n(App Not Responding) popup informing you that the app is not responding and\ngiving you the option to \"wait\" or stop the app.  Choose \"wait\".\n</li>\n<li>Create a table on your portfolio and write the search time in milliseconds (ms) \nfor each test case. You should have a total of 30 test cases, 10 for each algorithm.\n</li>\n<li> Use <a href=\"https://drive.google.com/file/d/0B5ZVxaK8f0u9NjNuaTZ5S0Z4OUE/edit?usp=sharing\">this graph paper</a> to graph your results.  Take a picture of your graph and upload it to your portfolio.\n</li>\n<li>Analyze your results to determine which algorithm is which. Which is the\n<i>bubble</i>, and which is the <i>merge</i>, and which is the\n<i>bucket</i> sort.  Provide a clear\ndescription, referring to your graph and your tabulated data, to explain how \nyou arrived at your conclusion.\n</li>\n</ol>\n\n<p></p>\n\n\n</td>\n</tr>\n</tbody></table>\n\n\n<h2>Questions</h2>\n\n<question quid=\"5688737870643200\" weight=\"1\" instanceid=\"G0mGaGCWfCoi\">\n</question>\n<br>\n\n<question quid=\"5645478960037888\" weight=\"1\" instanceid=\"MaGyDJVrmdWU\">\n</question>\n<br>\n\n<question quid=\"5711312218750976\" weight=\"1\" instanceid=\"W9Q5woPMF8iw\">\n</question>\n<br>\n\n<question quid=\"5678807906254848\" weight=\"1\" instanceid=\"55XFtrWYPSEF\">\n</question>\n<br><question quid=\"6321481042624512\" weight=\"1\" instanceid=\"xW2pbsjBWtZg\"></question><br><question quid=\"5656774724026368\" weight=\"1\" instanceid=\"XH8ib7XpewaX\"></question><br><question quid=\"5734977488551936\" weight=\"1\" instanceid=\"7iEOTBvq96AU\"></question><br><question quid=\"5093824770605056\" weight=\"1\" instanceid=\"6R6Hh1WoVm1z\"></question><br><br>\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Analyzing Algorithms</b></i> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n   <li>Consider the following App Inventor block, which implements an algorithm to\nfind the first number in the range 1 to N that is evenly divisible by <i>M</i>. Analyze\nthis algorithm's run time efficiency.  Is it <i>logarithmic</i>, <i>linear</i>, \n<i>N log N</i>, or <i>quadratic</i>?\n<br>\n<img src=\"assets/img/FirstNDivisibleByM.png\" width=\"400\">\n</li>\n   <li>Examine the \n<a href=\"http://www.sorting-algorithms.com/quick-sort\" target=\"_blank\">\nQuick Sort visualization</a>. Do you think quick sort has a similar efficiency to \nbubble, merge, or bucket sort? Why? Which of the scenarios presented \n(random, nearly sorted, reversed, few unique) is closest to a worst \ncase scenario for heap sort?\n</li>\n</ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 95, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "The Pong Game", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/robyGXwQ92U?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359085\">\nTeacher Tube version</a>)\n\n</td>\n<td>\n\n<a href=\"http://en.wikipedia.org/wiki/Pong\">Pong</a> was one of the first computer games. It consists of a paddle controlled \nby the user and a ball. In its simplest form the ball bounces off the four walls \nand the user tries to keep the ball from hitting the bottom wall.  When the ball \n<img src=\"assets/img/Atari_Pong_240.jpg\" width=\"180\" align=\"right\">\nhits the bottom wall, the game is over. Variations of the game include keeping \nscore, multiple lives, increasing the ball\u2019s speed, sound effects, and so on.\n\n<br>\n<br>\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n\n<li>make incremental additions to an existing program;\n</li><li>understand that if/else is a selection control structures in algorithms;\n</li><li>define and use a procedure with a parameter;\n</li><li>define an if/else statement to evaluate more than one condition.\n</li></ul>\n\n</td></tr></tbody></table>\n\n<h2>Tutorial or Basic Pong App</h2>\n\n<p>For this lesson <font color=\"red\"><b><i>you have a choice</i></b></font>.  No matter\nwhich option you choose, by the end of this lesson you will have built a pretty\ncool mobile Pong game that keeps score and plays sound effects.\n</p>\n\n<h3>Option 1 : Video Tutorials From Scratch</h3>\n\nYou can follow some video tutorials\nthat guide you through building the Pong game from scratch.  Or you can \nstart with a basic version of the game and add some enhancements.  \n\n\n<p>To follow the video tutorials, open <a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit5/templates/PongStarter/PongStarter.asc\">\nApp Inventor</a> in a separate tab and then \nclick on the top of the thumbnails to open  each tutorial as full-screen videos.\n\n</p><table>\n<tbody><tr><td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=2eLNwD4HivU&amp;list=PLsxoqvm6HPQV5XMPwN4N0tYIe7asB81PS\">\n<iframe width=\"125\" height=\"100\" src=\"//www.youtube-nocookie.com/embed/2eLNwD4HivU?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=2eLNwD4HivU&amp;list=PLsxoqvm6HPQV5XMPwN4N0tYIe7asB81PS\">\n<iframe width=\"125\" height=\"100\" src=\"///www.youtube-nocookie.com/embed/yI-yvAGG19o?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a></td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=2eLNwD4HivU&amp;list=PLsxoqvm6HPQV5XMPwN4N0tYIe7asB81PS\">\n<iframe width=\"125\" height=\"100\" src=\"//www.youtube-nocookie.com/embed/pgREXeNHfRs?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a></td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=2eLNwD4HivU&amp;list=PLsxoqvm6HPQV5XMPwN4N0tYIe7asB81PS\">\n<iframe width=\"125\" height=\"100\" src=\"//www.youtube-nocookie.com/embed/6juWVUy974Y?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a></td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=2eLNwD4HivU&amp;list=PLsxoqvm6HPQV5XMPwN4N0tYIe7asB81PS\">\n<iframe width=\"125\" height=\"100\" src=\"//www.youtube-nocookie.com/embed/4IU9qdtwMpQ?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a></td>\n</tr>\n<tr>\n<td align=\"center\">\n1. Moving the ball\n<br>5:29\n</td>\n<td align=\"center\">\n2. Random movement\n<br>2:21\n</td>\n<td align=\"center\">\n3. Bounce off edges\n<br>4:23\n</td>\n<td align=\"center\">\n4. Moving the paddle\n<br>2:46\n</td>\n<td align=\"center\">\n5. Keeping score\n<br>5:47\n</td>\n</tr>\n</tbody></table>\n<br>\n<br>\n\n<h3>Option 2: Enhance a Basic Pong App</h3>\n\n<p>If you take this route, we will start with a basic Pong app, in which a ball will\nmove around the canvas, bouncing off the edges and the paddle.  You will add\nseveral enhancements to the game, such as keeping score and sound effects. \n</p>\n\n\n<p>To begin, open the <a target=\"_blank\" href=\"https://docs.google.com/document/d/1_ay9VcKsaX7gYL-5XaVcSgPtMd_dch-PJOKD3tAnkRg\">\nnotes for this lesson</a> in a separate tab.  Then open  \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit5/templates/PongBasic/PongBasic.asc\">\nApp Inventor with the Pong Basic template</a>. The notes provide an overview of \nthe code for the Basic Pong app.\n</p>\n\n<h3>Challenges and Enhancements</h3>\n\n<p>Implement the following enhancements.  The notes contain suggestions.\n\n</p><ol>\n<li><b>Keeping Score.</b> Add a procedure with a parameter and other \nstatements to the code to perform score keeping tasks.\n\n</li><li><b>Ending the Game</b> Modify the when Ball1. EdgeReached block to \nend the game when the ball reaches the bottom edge.\n\n</li><li><b>Add Sound Effects</b>.\n\n</li><li><b>(Advanced: Allow the user turn the sound on/off. </b>\n</li></ol>\n\n\n<h2>Questions and Exercises</h2>\n<question quid=\"5084358662684672\" weight=\"1\" instanceid=\"6w4jpomlxYaN\">\n</question>\n\n<question quid=\"5191002700644352\" weight=\"1\" instanceid=\"rUxnUyA2fwee\">\n</question>\n<question quid=\"6203420981592064\" weight=\"1\" instanceid=\"ApztzKfHm5ca\">\n</question>\n<question quid=\"6316902607486976\" weight=\"1\" instanceid=\"Qvts512Wt0m1\">\n</question>\n<question quid=\"5123356965732352\" weight=\"1\" instanceid=\"YuQDw0axlU4a\">\n</question>\n\n<quizly-quizlyexercise quizname=\"quiz_simple_if_else\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"790\" instanceid=\"scgF2VSCjUv8\">\n</quizly-quizlyexercise>\n\n<quizly-quizlyexercise quizname=\"quiz_if_x_greater_than_y\" preamble=\"\" hasanswerbox=\"false\" isrepeatable=\"false\" hints=\"true\" height=\"495\" width=\"790\" instanceid=\"JatcV7u6GOer\">\n</quizly-quizlyexercise>\n<br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>In your portfolio, create a new page named <b><i>Pong</i></b> \nunder the <i>Reflections</i> category and answer the following questions:\n\n</p><ol>\n<li>Describe and provide pseudocode for the procedure you defined to keep score \n(Enhancement #1).\n</li>\n<p></p><li>Describe and provide pseudocode for the algorithm you defined to handle \nthe sound on/off checkbox.\n</li>\n</ol>\n\nBe sure to provide screenshots along with your explanations for each of the \nenhancements that you made.\n", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 96, "duration": "", "notes": "https://docs.google.com/document/d/1_ay9VcKsaX7gYL-5XaVcSgPtMd_dch-PJOKD3tAnkRg", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Limits of Algorithms", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/Y8QB5SLXDpg?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359063\">\nTeacher Tube version</a>)\n</td>\n<td><b><i>Classifying Algorithms</i></b>\nIn computer science algorithms, and the problems they solve, are classified into several\ncategories based on their efficiency -- that is, based on how their run time or \nuse of memory grows as the number of inputs grows.  \n\n<p>You've already done this classification for searching\nand sorting algorithms.  In this lesson we are going to take  a more general \nlook, both theoretically and experimentally, at this classification process.  \n\n</p><p>For our experimental work in this lesson, we have an app that has two mystery\nalgorithms that you will run to determine experimentally which efficiency category \nthey belong to. \n\n</p><p>Another focus of this lesson is to introduce you to some of the limits of\nalgorithms.  As we are going to see, there are so-called <i><b>intractable\nproblems</b></i> -- i.e., problems for which we don't have efficient enough \nalgorithms to solve them for large values of N.   \n\n</p><p>There are also so-called <i><b>undecidable problems</b></i>.  These\nare problems that are impossible to solve -- i.e, there cannot be an algorithm to solve\nthese types of problems. </p>\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>think theoretically and abstractly about the efficiency of algorithms;\n</li>\n<li>conduct an empirical (experimental) investigation of an algorithm;\n</li><li>learn about certain important limits of algorithms.\n</li></ul><p></p>\n<p></p>\n</td></tr>\n</tbody></table>\n\n<h2>Classifying Algorithms</h2>\n\n<gcb-youtube videoid=\"_0bYHRRTYK0\" instanceid=\"3fgN7xPRLLkR\">\n</gcb-youtube>\n<br>\n\n<h2>Classification Experiment</h2>\n\n<table><tbody>\n<tr>\n<td>\n\n<img src=\"assets/img/ClassifyExperimentScreen.png\" width=\"200\">\n</td>\n<td>\n<b><i>Empirical Classification Activity</i></b>\n\nIn this activity you are going to use an App Inventor app to experiment with and\nanalyze the an algorithm.  \n\n<ol>\n<li>Create a portfolio page named <i>Classification Experiment</i>.\n</li>\n<li>Use the Barcode Scanner app -- you can download it from the Play Store\nif you don't have it \u2014 to download the \n<a target=\"_blank\" href=\"http://appinventor.cs.trincoll.edu/csp/gcb/ClassifyExperiment.apk\">\nClassifyExperiment app (APK)</a>\nfrom the QR code:\n<br>\n<img align=\"right\" src=\"assets/img/ClassifyExperimentQR.png\">\nIf you are using the emulator, you can download the <a href=\"assets/img/ClassifyExperiment.aia\" target=\"_blank\">aia file</a> and import it into App Inventor.\n</li>\n<li>You will be performing a <b>worst case</b> analysis of the algorithms for\nvalues of N = 100, 200, ..., 1000.  When\nyou press the <i>Algorithm 1</i> or <i>Algorithm 2</i> buttons \nthe app will run a mystery algorithm and report the results.  \n</li>\n<li>Test the algorithms for values of Size = 100, 200, ..., 1,000. \n<b>NOTE: </b> Because these algorithms involve loops, you may see an ANR\n(App Not Responding) popup informing you that the app is not responding and\ngiving you the option to \"wait\" or stop the app.  Choose \"wait\".\n</li>\n<li>Create a table on your portfolio and write the run time in milliseconds (ms) \nfor each test case. You should have a total of at least 20 test cases.\n</li>\n<li>If you want to graph your results by hand, you can use <a href=\"https://drive.google.com/file/d/0B5ZVxaK8f0u9NjNuaTZ5S0Z4OUE/edit?usp=sharing\">\nthis graph paper</a> to plot your results.  Let the X-axis represent the size, which should\nrange from 100, 200, up to 1000. And let the Y-axis represent the time in millseconds\nthat the algorithms took.  Number the Y-axis from 2000, 4000, ..., 20,000.  \nThen plot the results you obtained for both Algorithm1 and Algorithm2.  For example,\nif Algorithm1 took 510 ms when the size was 100, you would plot the point (100,510). \nAfter you've plotted all the points for a given algorithm, draw a line (or curve) through \nthe points.   When you are done, take a picture of your graph and upload it to your \nportfolio.</li>\n\n<li>If you prefer, you can use a free online tool, such as \n<a target=\"_blank\" href=\"http://www.shodor.org/interactivate/activities/SimplePlot/\">\nShodor's Interactivate site</a> to  graph your results. \nTake a screenshot of your graphs and upload them to your portfolio.\n</li>\n\n<li>Analyze your results to determine which <i>efficiency category</i> the\nalgorithms belong to -- <i>logarithmic</i>, <i>linear</i>, <i>n log n</i>\n<i>quadratic</i>?   Provide a clear\ndescription, referring to your graph and your tabulated data, to explain how \nyou arrived at your conclusion.\n</li>\n</ol>\n\n<p></p>\n\n\n</td>\n</tr>\n</tbody></table>\n\n<h2>Classification Questions</h2>\n\n<question quid=\"5401035224907776\" weight=\"1\" instanceid=\"RtejjHlu13ct\">\n</question>\n<br>\n\n<question quid=\"5776602466091008\" weight=\"1\" instanceid=\"cLvbiRrX0Q9R\">\n</question>\n<br>\n\n<question quid=\"5488406570205184\" weight=\"1\" instanceid=\"ef0u1Zb1w0FX\">\n</question>\n<br>\n\n\n<h2>Limits of Algorithms</h2>\n\n<gcb-youtube videoid=\"C6_I6EwW-Gw\" instanceid=\"7jvu7p0KcSVi\">\n</gcb-youtube>\n<br>\n\n\n<h2>Questions</h2>\n\n<question quid=\"5716755318046720\" weight=\"1\" instanceid=\"PbLw0O6gAmAh\">\n</question>\n<br>\n\n<question quid=\"6283545911754752\" weight=\"1\" instanceid=\"wQodb4WXX4pR\">\n</question>\n<br>\n\n<question quid=\"5196564985282560\" weight=\"1\" instanceid=\"i8ybO7ntO5dP\">\n</question>\n<br>\n\n<question quid=\"5139076982243328\" weight=\"1\" instanceid=\"VxS8JizddTc0\">\n</question>\n<br>\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Classifying Algorithms</b></i>\n under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n<li>Classify this algorithm:  To <b>calculate the factorial of <i>N</i></b>:\n<blockquote>\n<pre>Set the factorial to 1\nFor each number K between 2 and N\n    Set the factorial to factorial * K\nOutput the factorial\n</pre>\n</blockquote>\n\nThat is, classify the run time efficiency of this algorithm in term\nof one of the efficiency categories -- logarithmic, linear, n log n, or quadratic -- \nas N gets larger.  And justify your answer.\n</li>\n\n<p></p><li>Your friend tells you that he's very fond of binary digits and uses\nthem in his password, but that it's only 4 bits long. Describe for your friend\nwhy that is a bad idea and tell him how much more secure his password would\nbe if he used more bits. (HINT: How many guesses would it take you to guess your\nfriend's password?)\n</li>\n\n</ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 120, "duration": "", "notes": "https://docs.google.com/presentation/d/1H8BtVE_4OcosJrEiSvakVU4A6ZHh3Q0MJUB3T4uIyho", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Debugging Pong", "has_activity": false, "objectives": "<h2>Introduction</h2>\n<p>In this lesson, we will learn more about the types of errors you might get in a program, including tips for identifying, fixing, and preventing them. In computer programming, a bug is an error or defect, that prevents the app from working the way it is supposed to. After watching the video on debugging, try to find the errors in the Pong game and then answer the questions about debugging.</p>\n<gcb-youtube videoid=\"IlFAwSj-YsQ\" instanceid=\"UXqqsq7InyUb\"></gcb-youtube><br>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359067\">\nTeacher Tube version</a>)\n\n<h2>Activity</h2>\n\n<p>The activity for this lesson is to debug a version of \nthe Pong program. There are at least <b>three errors</b> in \nthis version of the Pong game. See if you can find them all!\n</p>\n\n<p>To get started, \n<a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit5/templates/PongBasicWBugs/PongBasicWBugs.asc\" target=\"_blank\">open App Inventor with the Pong With Bugs template</a>. \n</p>\n\n<h2>Questions</h2>\n<question quid=\"5694639155707904\" weight=\"1\" instanceid=\"ldvzwyzsmirB\">\n</question>\n\n<question quid=\"5767494685949952\" weight=\"1\" instanceid=\"sFQCLK8WcXaj\">\n</question>\n\n<question quid=\"5635415851663360\" weight=\"1\" instanceid=\"doelePe6GmLG\">\n</question>\n\n<question quid=\"5701867585667072\" weight=\"1\" instanceid=\"uQSArnhzR0dD\">\n</question>\n\n<question quid=\"5072465898242048\" weight=\"1\" instanceid=\"cQTsDo0zs59F\">\n</question>\n\n<question quid=\"5671321778257920\" weight=\"1\" instanceid=\"ycN13cHGNFc0\">\n</question>\n\n<question quid=\"5737979670691840\" weight=\"1\" instanceid=\"ikdaUdYXwwiO\">\n</question><br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a page named <i><b>Debugging</b></i> under the <i>Reflections</i> \ncategory of your portfolio and answer the following questions:\n\n<ol>\n   <li>For each of the 3 bugs in the Pong game, explain what the bug was, how to fix it, and the type of error (semantic or syntax).</li>\n</ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 97, "duration": "", "notes": "https://docs.google.com/presentation/d/1VJzIXEueLY5EmGm5VPpKEJg07P3xxYJfa5rTwGTnVGA/edit?usp=sharing", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "BB: Web Searches", "has_activity": false, "objectives": "<a target=\"_blank\" width=\"200\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/chapter4.pdf\">\n<img src=\"assets/img/blowntobits.jpg\" align=\"left\" hspace=\"10\" class=\"yui-img\"></a>\n\n<p>This chapter describes web searches and how searching is done. It focuses on Google and how the Google phenomenon has evolved and changed our lives. Here are some of the topics\ncovered in the reading:</p>\n\n<blockquote>\n<br>\u2022 Google searches\n<br>\u2022 Caching\n<br>\u2022 The PageRank Algorithm\n<br>\u2022 Captchas\n</blockquote>\n\n<h3><br><br><br><br><br><br><br>Activity</h3>\n<br>Read Chapter 4: Needles in the Haystack of \n<a target=\"_blank\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/chapter4.pdf\">Blown to Bits</a>. \n&nbsp;\n<br><br><br><br>\n<div style=\"text-align: center\" class=\"yui-wk-div\">\n<img src=\"https://ram8647.appspot.com/mobileCSP/assets/img/RankingImage.png\" align=\"center\" class=\"yui-img selected\"><br>\n</div>\n<br>\n\n<h3>Reading Questions</h3>\nKeep these questions in mind as you read chapter 4. \nFor each question, write a short answer and post your answers on a paged\ncalled <i>Blown to Bits, Chapter 4</i> on your portfolio.  Don't worry if you \nthink you don't know \nthe right answer.  Just give it your best shot.\n&nbsp;\n<ol>\n<li>Is Wikipedia considered Web 1.0 or Web 2.0? Explain. \n</li><li>Should a researcher place absolute trust in a search engine? Why or why not?\n</li><li>\"The architecture of human knowledge has changed as a result of search.\" What does this claim mean?\n</li><li>When you type a word or phrase into the Google search engine, what is the search algorithm that is being used? Does Google\u2019s search engine search the web? Explain.\n</li><li>What does it mean to \u201cempty the cache\u201d?\n</li><li>Think of a number between 1 and 100. If you tell me \"too high\" or \"too low\", I can guess the number in 7 guesses. How come? What algorithm makes this possible?\n</li><li>What is the PageRank algorithm? How does it work?\n</li><li>What is a captcha and why are captchas important? \n<br><br><b>Free Response:</b>\n</li><li>\"The architecture of human knowledge has changed as a result of search.\" Do you agree?\n</li><li>\"Google emerged -- from this dilemma at least -- with its pocketbooks overflowing and its principles intact.\" Do you agree?\n</li><li>What do you think about the differences between Figure 4.10 and Figure 4.11?\n</li><li>Would you retain your search history or delete it? Why? \n</li><li><b>Bonus:</b> Different algorithms can be developed to solve the same problem. For web searches, Google has its patented PageRank algorithm as part of its search algorithm. What does Yahoo! use? What does Bing use?  \n\n</li></ol>", "unit_id": 24, "activity_title": "", "video": "", "lesson_id": 98, "duration": "", "notes": "http://www.bitsbook.com/wp-content/uploads/2008/12/chapter4.pdf", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Unit Overview", "has_activity": false, "objectives": "<p>This unit focuses on various aspects of using and manipulating <i><b>Data</b></i>,\nboth within mobile apps and on the Web or Internet.  </p>\n\n<h3>Unit Features</h3>\n<ul>\n<li>Programming: The App Inventor lessons in this unit focus on different types of programming data,\nincluding variables and  <i><b>structured data</b></i>, such as Lists, <i><b>persistent data</b></i>, \nsuch as TinyDB, a simple\non-device database, and <i><b>shareable data</b></i>, such as TinyWebDb, a simple web-based \ndatabase. \n</li><li>CS Principles: These lessons focus on data that is being collected in ever increasing numbers and how to analyze that data using computational methods. The concept of Big Data and the use of Fusiontables are introduced.\n</li>\n</ul>\n\n\n", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 77, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Presidents Quiz", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/-2QQ1pJH-XM\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359079\">\nTeacher Tube version</a>)</td>\n<td>The <span style=\"font-weight: bold; font-style: italic;\">Presidents Quiz&nbsp;</span><span id=\"docs-internal-guid-91e7bfaf-7e39-34c9-01f1-54943b189ea0\"><span style=\"font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">is indicative of apps in which the user navigates through a list of information. You\u2019ll use an index variable to keep track of the current position in the list, and you\u2019ll use parallel lists to keep track of the quiz questions, the corresponding answers, and a list of pictures that go with each question. </span></span><br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>navigate through a list using an index variable;</li>\n<li>select items from a list&nbsp;</li>\n<li>check for the end of the list&nbsp;</li>\n<li>work with parallel lists.</li></ul>\n<p></p>\n</td></tr></tbody></table><h2>Tutorial<br><span style=\"font-size: 13px; font-weight: normal; color: rgb(68, 68, 68); font-family: arial, sans-serif; line-height: 20.020000457763672px; background-color: rgb(249, 249, 249);\">To get started, open App Inventor with the&nbsp;</span><a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit6/templates/PresidentsQuizStarter/PresidentsQuizStarter.asc\" target=\"_blank\" style=\"font-size: 13px; font-weight: normal; line-height: 15.859999656677246px; font-family: yui-tmp;\">President's Quiz template</a><span style=\"font-size: 13px; font-weight: normal; color: rgb(68, 68, 68); font-family: arial, sans-serif; line-height: 20.020000457763672px; background-color: rgb(249, 249, 249);\">&nbsp;in a separate tab and follow along with the following tutorial.</span><br></h2>\n\n<table>\n<tbody><tr>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=VLk7B-rslLI\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/p9dOoio0Wbg?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=VLk7B-rslLI\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/BQ8_euptMFI?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n</tr>\n<tr>\n<td>1  Design the UI</td>\n<td>2. Program the Next Button</td></tr>\n<tr>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=sWK8O8j2zTU\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/sWK8O8j2zTU?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=IWe_UBMA-gc\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/IWe_UBMA-gc?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n</tr>\n<tr>\n<td>3. At end of the Quiz?</td>\n<td>4. Check Answers</td></tr>\n</tbody></table>\n\n<h2>Exercises</h2><question quid=\"5640471028170752\" weight=\"1\" instanceid=\"OfZRggIcOjFw\"></question><question quid=\"5077521074749440\" weight=\"1\" instanceid=\"jfHsCsDPC987\"></question><question quid=\"5195581135781888\" weight=\"1\" instanceid=\"MDLXnJMNKSg2\"></question><question quid=\"5177473553661952\" weight=\"1\" instanceid=\"sHPvry5KuUeD\"></question><question quid=\"5715426797420544\" weight=\"1\" instanceid=\"P2ofdYiOPKhZ\"></question><question quid=\"6373441858961408\" weight=\"1\" instanceid=\"N56HvnJRAeNR\"></question><br>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Presidents Quiz</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.</p>\n<ol>\n<li>Describe the significance of the global variable index. How was it used in this app? Based on your answer, why might indexing be important in programming?\n</li><li>Using what you have learned about lists and indexing, how might you enhance this app so that it is a multiple choice quiz?\n</li>\n</ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 80, "duration": "", "notes": "https://docs.google.com/document/d/1ytxemwblCNwyKP1b5Tvmi5bIAluY_Hs09IV2aBqC_q4", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Presidents Quiz Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/GSQyLm3wG_0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359078\">\nTeacher Tube version</a>)</td>\n<td><b><i>Be creative!</i></b> In this lesson you will complete \nseveral small programming projects that add enhancements to the \nPresidents Quiz app.  You are encouraged to discuss your ideas for how to solve these problems \nwith the instructor and with your partner and other students. Hints and suggestions are provided. \n<p>\n<b>Objectives:</b> In the lesson you will learn to :\n</p>\n<ul>\n<li>solidify your understanding of the quiz app through personalizing it and customizing it;</li>\n<li>\bgain experience using the <i>TextToSpeech</i> component;</li>\n<li>learn to count actions (right/wrong answers) in a complex fashion.</li>\n</ul></td></tr></tbody></table>\n\n<h2>Programming and Creative Projects</h2>\n<ol>\n<li> Modify your app so that \u201ccorrect\u201d and \u201cincorrect\u201d are spoken when the \nuser answers a question.</li><li> Modify your app to keep score of how many questions are answered correctly and incorrectly. Be sure and restrict it so that the quiz taker can only receive credit for answering each question once (i.e., if there are three questions, the quiz taker can only be credited with three correct answers). Hint: use a list of true/false (booleans) values to record whether or not each question has already been answered correctly.</li><li>Use the President's Quiz as a template to create a quiz on a topic of your own choosing. Besides changing the questions, answers, and pictures, add at least one enhancement to the app.</li></ol>\n\n<h2>Starting App Inventor</h2>\n<p>For this lesson you can start up \n<a href=\"http://ai2.appinventor.mit.edu\" target=\"_blank\">App Inventor</a>\nand open the project you created in the previous lesson.  Or, if you prefer,\nyou can open <a target=\"_blank\" \nhref=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit6/templates/PresidentsQuizProjects/PresidentsQuizProject.asc\">\nApp Inventor with this template</a>.\n\n<p>After opening your Presidents Quiz project or the template, rename it \n<i>PresidentQuizV2</i>, for Presidents Quiz Version 2 -- or something similar to \nthat.  Then complete the \nprogramming exercises described in the video (or text version). </p>\n\n<p></p>\n<p>If you get stuck, check out the solutions video.\n</p>\n\n<h2>Solutions<br><gcb-youtube videoid=\"hnNiQCmhkIQ\" instanceid=\"DwCoioqRa4Oe\"></gcb-youtube><br></h2>\n\n<h2>Exercises</h2>\n<br><question quid=\"6153130504880128\" weight=\"1\" instanceid=\"eRboleqC24Vz\"></question><br>\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Presidents Quiz Projects</i></b> under the\n<i>Creative Projects&nbsp;</i>category of your portfolio and answer the following questions.\n</p> \n\n<ol>\n<li>Give brief descriptions of the enhancements you added to your app.  Provide screen shots of important blocks and describe how you used them to solve certain programming problems.\n</li><li> Describe how one or more of your enhancements used a <i>list.</i></li>\n</ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 82, "duration": "", "notes": "https://docs.google.com/document/d/1heL17L3axFd1U0EPrNkL-0NaCC03dGz_QxsZzYMueb0", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "BB: Who Owns the Bits?", "has_activity": false, "objectives": "<table style=\"border: 0\">\n<tr><td><a target=\"_blank\" width=\"200\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=91\">\n<img src=\"assets/img/blowntobits.jpg\" align=\"left\" style=\"float:left; padding-right: 10px\"></a>\n</td>\n<td>\n<p>This lesson focuses on the question of use and ownership of digital media, including\ncopyrighted media.  It describes how file sharing algorithms works and discusses some \nof the sensational cases in the battle between large media companies and users who\nuse file sharing sites to share music and other media.  Here are some of the topics\ncovered in the reading:</p>\n\n<ul>\n<li>Copyright</li>\n<li>Peer-to-peer architecture/network</li>\n<li>Digital Millennium Copyright Act (DMCA)</li>\n<li>Open access and creative commons</li>\n</ul>\n</td>\n</tr>\n</table>\n\n\n<h3>Activity</h3>\nRead Chapter 6 (starting on page 213) of \n<a target=\"_blank\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=213\">Blown to Bits</a>. \n&nbsp;\n<br>\n<br>\n<br>\n\n<div style=\"text-align: center\" class=\"yui-wk-div\">\n<a href=\"assets/img/BtoB_napster_cartoon.png\" target=\"_blank\"><img src=\"assets/img/BtoB_napster_cartoon.png\" class=\"yui-img selected\" width=\"350\"></a>\n</div><br>\n\n\n<h3>Reading Questions</h3>\nKeep these questions in mind as you read chapter 6. \nFor each question, write a short answer and post your answers on a page\ncalled <i>Blown to Bits, Chapter 6</i> on your portfolio.  Don't worry if you \nthink you don't know \nthe right answer.  Just give it your best shot. \n\n<ol>\n<li>Why should all Internet users be aware of copyrighted material?\n</li><li>What is a GB? How many bytes are in GB? \n</li><li>What is the NET Act and what is its significance in the history of copyright?\n</li><li>What is a peer-to-peer architecture? Provide an example of at least one well-known peer-to-peer network.\n</li><li>What is the DMCA and why is it significant to copyright?\n</li><li>What are Open Access and Creative Commons? How have they impacted the sharing of digital information?\n<br><b>Free Response Questions</b> \n</li><li>Before reading this chapter, were you aware of copyright infringement? \nWhen you put digital content (e.g. images, videos) in your apps, where did \nyou get it from? Is it possible that you violated any copyright terms? \n</li><li>In your opinion, are YouTube users violating copyright terms when they \nmake lyric videos? Why or why not?\n</li><li>In your opinion, are computers that use DRAM violating copyright terms? \nWhy or why not?\n</li><li>Select one of the technical innovations described in the chapter and write an explanation of the technical details of this innovation. Try to use terms that someone unfamiliar with the innovation would understand. \n</li><li><b>Bonus:</b> Visit <a target=\"_blank\" href=\"http://www.chillingeffects.org\">chillingeffects.org</a> and read about \ndigital copyright issues. Write a paragraph describing your findings.\n</li></ol>\n\n\n\n", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 81, "duration": "", "notes": "http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=213", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "List of Lists", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/zBJIRkWpU3o?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359080\">\nTeacher Tube version</a>)\n\n</td>\n<td>\nThis version of the  Presidents Quiz app introduces a couple of new features.  One is the\n<i>List Picker</i> component, which you can see at work in the preview video.  It\nprovides the user with a list of options, letting us create <i>multiple-choice quizzes</i>, \nrather than just <i>short-answer quizzes</i> as in the previous version of the app.\n\n<p>The other feature is a complex programming construct known as a <i><b>\nlist of lists</b></i> -- i.e., a list that contain <i><b>sublists</b></i> as its elements.\nThe <i>list of lists abstraction</i> is a <i><b>data structure</b></i> that you will \nfind useful not only in this app but it lots of upcoming apps.  \n\n<br>\n<br>\n</p><p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>use the <i>ListPicker</i> component to provide choices to the user;</li>\n<li>define and use a new programming abstraction, a  <i><b>list of lists</b></i>.</li>\n</ul>\n<p></p>\n</td></tr></tbody></table>\n\n<h2>Tutorial</h2><br>\nTo get started, open \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit6/templates/PresidentsQuizListsOfLists/PresidentsQuizListsOfLists.asc\">\nApp Inventor with the List of Lists template</a> in a \nseparate tab and follow along with the following tutorial.<br>\n<table>\n<tbody><tr>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=_84z_NA5W08\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/_84z_NA5W08?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=Jf7kZodBVjs\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/Jf7kZodBVjs?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</a>\n</td>\n</tr>\n<tr>\n<td>1 Use a ListPicker</td>\n<td>2 Define a list of lists for answer choices</td>\n</tr>\n\n</tbody></table>\n<br>\n\n<h2>Exercises</h2>\n<question quid=\"6368606396874752\" weight=\"1\" instanceid=\"S2OamYyHgun6\"></question><question quid=\"5108371824836608\" weight=\"1\" instanceid=\"XQQDWPCi7OwN\"></question><question quid=\"5175029717270528\" weight=\"1\" instanceid=\"LJocZLsn7S0y\"></question><question quid=\"5651874166341632\" weight=\"1\" instanceid=\"MxZCaEGJPBdu\"></question><br> \n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>List of Lists</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.</p>\n<ol>\n<li>Describe how using a list of lists allowed the Presidents Quiz app to have more variety.\n</li></ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 83, "duration": "", "notes": "https://docs.google.com/document/d/1CPM5XFJfsuuAO3yGSximoM26ZeI54igAIVmZFd7pGk0", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Persistent Data", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/SzFudtCPB0U?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359077\">\nTeacher Tube version</a>)\n</td>\n<td>This lessons focuses on <i><b>data persistence</b></i>.  It enhances the \nAndroid Mash game by adding a TinyDb component, which enables the app  \nto remember a person's best score. \n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to\n</p><ul>\n\n<li> create an app that saves the player\u2019s high score between sessions;\n</li><li>learn about the concept of <b><i>persistent data</i></b>;\n</li><li>learn how to access App Inventor\u2019s TinyDB component.\n</li></ul>\n</td></tr></tbody></table>\n\n<h2>Tutorial</h2>\n\nOpen App Inventor with the \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit6/templates/TinyDBTemplate/TinyDBTemplate.asc\">\nTinyDb Template</a>  \n in a separate tab and follow along with the following\n tutorial. Once the project opens use <i> Save As</i> to rename your \nproject <b>AndroidMashTinyDb</b>. Note: If the blocks don\u2019t appear well \nin the Blocks Editor, right-click on the background and use the\n Arrange Vertically option.\n\n<br>\n<gcb-youtube videoid=\"svQV5WPNS5o\" instanceid=\"MURkbQ7t2d3X\">\n</gcb-youtube>\n<br>\n\n<h2>Activity: Try Storing a Value in a TinyDb</h2>\n<p>Whenever the player achieves a top score, store the current date in the \nTinyDb.  \n<br>\n<br>\n<i>Hints:</i>  You don\u2019t need a second TinyDB for this task.  You just need a \nsecond tag, e.g., \u201cdate\u201d.  To get the current date and time, you can use the \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/reference/components/sensors.html#Clock\">\nClock component</a>, which is named <i>AndroidTimer</i>.  The following blocks \nwill  return a text formatted something like this:  MM/DD/YY  HH/MM/SS AM.\n<br>\n<img src=\"assets/img/DateNow.png\" width=\"400\">\n\n</p>\n\n<h2>Solution</h2>\n<p>Click for <a target=\"_blank\" href=\"https://docs.google.com/document/d/1pI4S6RopmaNuUKQs9-sS-xo56-iVTDPfVIaUnaCBbJo\">Text Version</a> of solution.\n</p>\n\n<h2><br>Exercises</h2> \n\n<question quid=\"4919153316069376\" weight=\"1\" instanceid=\"vjSaPuUiLVsN\">\n</question>\n\n<question quid=\"5187793219223552\" weight=\"1\" instanceid=\"o3SX2UMr2ZEJ\">\n</question>\n\n<question quid=\"6268469368586240\" weight=\"1\" instanceid=\"qB3SgPjhp1hh\">\n</question>\n\n<question quid=\"6277220263788544\" weight=\"1\" instanceid=\"j7wmJhW0AsmS\">\n</question>\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Android Mash with TinyDB</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.</p>\n<ol>\n<li>What does it mean to say that data is <i><b>persistent</b></i>?\n</li>\n<p></p><li>Describe the differences between data stored in a <b><i>global variable</i></b>\nand in a <b><i>TinyDb</i></b>.\n</li></ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 84, "duration": "", "notes": "https://docs.google.com/document/d/10Viw0wyGqBjSjZYA7irsOOPGnN-2BVfhk6svXovl7UU", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Sharing Data on the Web", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/Hq_gz3WKubk?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359075\">\nTeacher Tube version</a>)\n\n</td>\n<td>This lesson focuses on <i><b>shareable data</b></i>.  It further enables the Android Mash game by using a <i>TinyWebDb</i> component to  record and share a \n<i><b>universal top score</b></i> among the game's users.\n<br>\n<br>\n<p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>create an app that shares the highest score among several players;\n</li><li>understand the concept of <b><i>sharing</i></b> Web data;\n</li><li>grasp the difference between <b><i>synchronous</i></b> and \n<b><i>asynchronous operations</i></b>;\n</li><li>access App Inventor\u2019s simple TinyWebDB component.\n</li>\n</ul>\n</td></tr></tbody></table>\n\n<h2>Tutorial</h2>\n\nOpen App Inventor with the \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit6/templates/TinyWebDbTemplate/TinyWebDbTemplate.asc\">\nTinyWebDb Template</a>  \n in a separate tab and follow along with the following\n tutorial. Once the project opens use <i> Save As</i> to rename your \nproject <b>AndroidMashTinyWebDb</b>. Note: If the blocks don\u2019t appear well \nin the Blocks Editor, right-click on the background and use the\n Arrange Vertically option.\n\n<br>\n<gcb-youtube videoid=\"0vgk1lBA6w4\" instanceid=\"7S3dYdHzkya3\">\n</gcb-youtube>\n<br>\n\n\n<h2>Activity: Try Storing a Value in the TinyWebDB</h2>\n\n<p>Use TinyWebDB to store and retrieve the name of the player with the top \nuniversal score.  \n<br>\n<br>\n<i>Hint:</i> You don\u2019t need a second TinyWebDB for this project. You \njust need a second tag, e.g., \u201cAndroidMashTopName\u201d. Don\u2019t forget to display the \ntop player\u2019s name and score in the app.\n</p>\n\n<h2>Solution</h2>\n<p>\nClick here for the <a target=\"_blank\" href=\"https://docs.google.com/document/d/1KLLNkQ3n0AKIXfY2i_cYAs8a-VepLQOr_skmZJOytWI\">Text Version</a> of solution. \n</p>\n\n<h2>Exercises</h2>\n\n<question quid=\"5482103269490688\" weight=\"1\" instanceid=\"vST2sl2oyCOX\">\n</question>\n<br>\n<question quid=\"5393900109824000\" weight=\"1\" instanceid=\"A0YxWyFtz8yS\">\n</question>\n<br>\n<question quid=\"4885824369852416\" weight=\"1\" instanceid=\"ce8yU3KM0AYY\">\n</question>\n<br>\n<question quid=\"4758170828275712\" weight=\"1\" instanceid=\"aJa1GC9mJf3W\">\n</question>\n<br>\n\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Android Mash with TinyWebDB</i></b> under the\n<i>Reflections</i> category of your portfolio and answer the following questions.</p>\n<ol>\n<li>Describe the difference between <i>synchronous</i> and <i>asynchronous</i> data storage and retrieval.</li><li>Describe the process of storing and retrieving a value from a TinyWebDB. Consider what information and blocks are needed.</li></ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 85, "duration": "", "notes": "https://docs.google.com/document/d/1XZg8ZhZ89-1epK6Xonfrgo0POKnT2NEPiG6fTVcn2Bs", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Data Persistence Projects", "has_activity": false, "objectives": "<h2>Preview</h2>\n\n<table><tbody><tr><td>\n\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/4lAHa5vfKOQ?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n</iframe>(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359076\">\nTeacher Tube version</a>)\n</td>\n<td><b><i>Be creative!</i></b> In this lesson you will complete \nseveral small programming projects that add enhancements to the\nAndroid Mash app.  You will also learn how to apply some of the \nconcepts you learned in the previous lessons as you work on challenging\nprogramming problems.\n\n<p>  You are encouraged to discuss your ideas for how to solve these \nproblems \nwith the instructor and with your partner and other students. \nHints and suggestions \nare provided. \n\n</p><p>\n<b>Objectives:</b> In this lesson you will learn to:\n</p><ul>\n<li>create enhancements to the Android Mash game; \n</li><li>apply the concepts of <b><i>data persistence</i></b> and <b><i>\ndata sharing</i></b>;\n</li><li>apply the concept of <b><i>asynchronous</i></b> data storage and retrieval;\n</li><li>use <b><i>lists</i></b> to store structured data;\n</li><li>extend your understanding of App Inventor\u2019s TinyDB and TInyWebDB components.\n</li></ul>\n<p></p>\n</td>\n</tr>\n</tbody></table>\n<br>\n\n\n<h2>Programming and Creative Projects</h2>\n<ol>\n<p>The two enhancements proposed here won\u2019t change the app\u2019s behavior, but they will \nproduce a better designed app.  Instead of using individual tags for each piece of \ndata stored in the TinyDB or TinyWebDB, use a <i><b>list</b></i> to store all of the data associated \nwith the game.  This type of revision -- revising the program\u2019s code without changing \nits functionality -- is known as <b><i>refactoring</i></b>.  It is done to improve the \napp\u2019s code, making it more efficient or easier to understand.\n\n</p><p>In this case, the proposed changes will do both.  They will make your app more efficient \nby reducing the number of DB operations, especially TinyWebDB operations, which, as we \nknow, take time because they have to access the Web.  So instead of taking 2 or 3 operations \nto store and retrieve the player\u2019s name, score, and date, we will use just one operation.  \nUsing a list will also simplify the code, making it easier to read. \n\n</p><p></p>\n<li><b>Enhancement 1:</b> Use a list instead of multiple tags \nto store both the player\u2019s score and \ndate in the TinyDb. By using a list, all of the data can be associated with one tag and\nwith one player.\nYour list could take the form <b>[score, date]</b>.  Then the tag, say, \u201cralph\u201d would be \nassociated with a specific list such as [7, \u201c07/29/14 11:21:01 AM\u201d].   You \nwould then use the various list functions (blocks) that you learned about in previous \nlessons to create and retrieve items from the list. \n\n<br><img src=\"assets/img/PlayerList.png\" width=\"400\">\n\n</li>\n<li><b>Enhancement 2:</b> Use a list instead of multiple tags \nto store the player\u2019s name, score, \nand date in the TinyWebDB. In this case your list could take the form <b>[name, score, date]</b>. \nFor example, a specific list could be  [\u201cralph\u201d, 7, \u201c07/29/14 11:21:01 AM\u201d]. It would be \nassociated with a single tag, such as \u201cAndroidMashTopPlayerInfo\u201d.    You would then use \nthe same list functions (blocks) as in the previous example to create the list and \nretrieve its individual items. \n\n<p>One tricky part of this problem is making sure that app works even when \nthere is no data associated with the tag.  If you don\u2019t do this correctly, you \nwill get semantic errors.  \n\n</p><p>Here\u2019s an example of how to correctly get the data of the form \n[name, score, date] from the TinyWebDB.  You (1) need to check whether \nthe data being received from TinyWebDB is for the right tag.  Then (2) you \nneed to make sure the data wasn\u2019t empty -- i.e., there was actually some \ndata associated with that tag.  If all is good, then (3) assign the list\n [name, score, date] to the global variable and (4) initialize the <i>topUniversalScore</i> \nvariable.\n\n<img src=\"assets/img/WebDbGotValueAnnotated.png\">\n\n\n</p></li>\n<p></p><li> Create one or more of your own enhancements for your app.\n</li></ol>\n\n\n<h2>Starting App Inventor</h2>\n\n<p>For this lesson you can \n<a href=\"http://ai2.appinventor.mit.edu\" target=\"_blank\">start App Inventor</a>\nand use the project you created in the previous lesson.   Or, you can \n<a target=\"_blank\" href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit6/templates/AndroidMashWebDbProjects/AndroidMashWebDbProjects.asc\">\nstart App Inventor with the Android Mash Db Projects Template</a>, which\ncontains the solution to the previous lesson.\n\n</p><p>In either case, you will want to rename your project <b><i>Android Mash Version 2</i></b>\nor something similar. \nThen complete the programming exercises and enhancements described \nabove.   If you get stuck, check out the solutions video.</p>\n\n<h2>Solutions</h2>\n\n<p>Here is the <a target=\"_blank\" href=\"https://docs.google.com/document/d/1pAjqpvFANblElg6-yvH1lNMDlV8ERCJGiN07X7jSw3A\">\ntext version</a> for enhancements 1 and 2.\n\n</p>\n\n<p>Video presentation of solutions to Enhancements 1 and 2:\n<br>\n<gcb-youtube videoid=\"gSgF2fDAA7A\" instanceid=\"CmMob5vIS186\">\n</gcb-youtube>\n<br>\n\n\n</p><h2>Exercises</h2><br><br><question quid=\"5211729575280640\" weight=\"1\" instanceid=\"wl1MQZpRfive\"></question><br>\n\n\n\n<h2>Reflection: For Your Portfolio</h2>\n\n<p>Create a page named <b><i>Data Persistence Projects</i></b> under the\n<i>Creative Projects&nbsp;</i>category of your portfolio and answer the following questions.\n</p> \n\n<ol>\n<li>Describe the enhancements you added to your app.  Provide screen shots of important blocks and describe how you used them to solve certain programming problems. \n</li><li>Describe how one or more of your enhancements used <i>data persistence</i>.\n</li>\n</ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 86, "duration": "", "notes": "https://docs.google.com/document/d/1JUXteddPCa8EMzJmzzvRNoxqDJWYcmAPMmbaZg5P5wk", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Big Data", "has_activity": false, "objectives": "<h2>Introduction</h2>This lesson focuses on the CS Principles \n<i>Data and Information</i> topic, focusing in particular on <i>Big Data</i>,\ni.e., the challenge of processing data sets containing enormous amounts of data.\n\n<br>\n<p>Data and information facilitate the creation of knowledge. Computing enables and \nempowers new methods of information processing, driving monumental change across \nmany disciplines \u2014 from art to business to science. Managing and interpreting an \noverwhelming amount of raw data is part of the foundation of our information society \nand economy. People use computers and computation to translate, process, and visualize raw data, and to create information. Computation and computer science facilitate and enable a new understanding of data and information that contributes knowledge to the world. In the next several lessons, you will work with data using a variety of computational tools and techniques to better understand the many ways in which data is transformed into information and knowledge.</p>\n<p><b><i>Big data</i></b> is a collection of data sets so large and complex that \nit becomes difficult to process using on-hand database management tools or \ntraditional \ndata processing applications.</p>\n\n<h2>Video Resources</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=qqfeUUjAIyQ\">The Economist Video</a> (2:20) \nNarrated slide show, emphasizes <b><i>exponential growth</i></b>.\n</li>\n\n<li><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=LrNlZ7-SMPk\">Link Analytics</a> (3:05)\nFast moving overview with lots of quantitative facts, electronic soundtrack, commercial \nending. \n</li>\n\n<li><a target=\"_blank\" href=\"http://www.ted.com/talks/hans_rosling_shows_the_best_stats_you_ve_ever_seen\">TedTalk: The best stats you've ever seen</a> (19:53)\nThe first few minutes emphasize the need to communicate effectively with data. Uses the gapminder data set.\n</li>\n\n<li><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=7D1CQ_LOizA\">Explaining Computer</a> (8:32)\nNarrated, animated slide show, British accent, covers <b><i>Hadoop</i></b>.\n</li>\n</ul>\n\n\n\n<h2>Introduction to Big Data</h2>\n\n<p>These <a href=\"https://docs.google.com/presentation/d/1JHCkT2DoMyClU_Oub2MWFBue8nhDxlCgbkNLPGDODOA/edit?usp=sharing\" target=\"blank\">Slides</a>\nare presented in the following three video segments.\n</p>\n\n\n<gcb-youtube videoid=\"DJJF6MpLXXk\" instanceid=\"k70JOUfgA18n\">\n</gcb-youtube>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359081\">\nTeacher Tube version</a>)\n\n&nbsp;<question quid=\"5667168544882688\" weight=\"1\" instanceid=\"PefNjSMFDCtq\"></question>\n&nbsp;<question quid=\"4848745178988544\" weight=\"1\" instanceid=\"tS6k3T0wOTSt\"></question>\n&nbsp;<question quid=\"5260588385042432\" weight=\"1\" instanceid=\"fG60NtfScJ3A\"></question>\n&nbsp;<question quid=\"6260020060618752\" weight=\"1\" instanceid=\"JqOKuGgGGeEN\"></question>\n<br>\n\n<h2>Processing Big Data</h2>\n\n<gcb-youtube videoid=\"iMO9hq2k4_A\" instanceid=\"Zl6rQS0Sp3pq\">\n</gcb-youtube>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359090\">\nTeacher Tube version</a>)\n\n<br>\n<question quid=\"5707274949492736\" weight=\"1\" instanceid=\"1fADldaSCc3x\">\n</question>&nbsp;\n;<question quid=\"5944648363147264\" weight=\"1\" instanceid=\"MIGC0D00AASc\">\n</question>&nbsp;\n<question quid=\"5631768182915072\" weight=\"1\" instanceid=\"Q2QXDWZmHrGL\">\n</question>\n\n<h2>Examples of Big Data</h2>\n\n<gcb-youtube videoid=\"UXjDePxhJpY\" instanceid=\"Omor2j8gNxQn\">\n</gcb-youtube>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359089\">\nTeacher Tube version</a>)\n\n<question quid=\"5763418761986048\" weight=\"1\" instanceid=\"bVgIIhBULL4d\">\n</question>\n<question quid=\"5630721452408832\" weight=\"1\" instanceid=\"wj5GefXVvThi\">\n</question>&nbsp;\n<question quid=\"5659915653742592\" weight=\"1\" instanceid=\"4YUYnsDKWoeY\">\n</question>\n\n<h2>Activity: Exploring Data Sets</h2>\n\n<p>Read this <a href=\"http://en.wikipedia.org/wiki/Big_data\" target=\"blank\">Wikipedia Article on Big Data</a>, then explore some of the examples of big data that are included in the article. Try to find at least 2 data sets that interest you. Some of the examples include:\n</p>\n\n<p>Answer the portfolio reflection questions about the data set.</p>\n\n<ul>\n   <li>Visualizing Data (Reddit maintains a <a href=\"http://www.reddit.com/r/dataisbeautiful/top/\" target=\"blank\">Data is Beautiful</a> site that has lots of visualizations of interesting data sets.  Browse through that collection.)</li>\n   <li>Student Debt Data (Here's a nice visualization of <a href=\"http://www.nytimes.com/interactive/2012/05/13/business/student-debt-at-colleges-and-universities.html?ref=tuition&amp;_r=2&amp;\" target=\"blank\">student debt</a> that was put together by the New York Times.)</li>\n   <li>Growth of the Internet (This is a nice <a href=\"http://evolutionofweb.appspot.com/#/growth/day\" target=\"_blank\">interactive visualization</a> of how the Internet has grown and when various technologies have been introduced.)</li>\n</ul>\n\n<br>\n\n<h2>Reflection: For Your Portfolio</h2>\nCreate a page named <i>Data and Information</i> under the <i>Reflections</i> category of your portfolio and answer the following questions.\n\n<br>\n<ol>\n   <li>Choose one of the data sets listed above in the <i>Activity</i> section and give \n         a brief description of it.\n          What specifically were the types of data (text, sounds, transactions, etc.) included in the data set you chose? </li>\n   <li>What new facts did you learn when exploring the data set? List at least 3 facts.</li>\n   <li>Write a question you have about the data set you chose. Now, convert that question into a hypothesis \n          (a statement)   with your prediction about the data.<br>\n       (Hypotheses take the form of \"If __________, then _________.\" For example, a hypothesis about \n       the student debt data could be, \"If the tuition costs are higher at an institution, the student debt will be higher.\"</li>\n   <li>Identify at least one security and/or privacy concern that is associated with the data in the data set you chose?</li>\n   <li>If your data set included a visualization, what was useful about the visualization? How would you change or \n          improve the visualization?</li>\n</ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 87, "duration": "", "notes": "https://docs.google.com/presentation/d/1JHCkT2DoMyClU_Oub2MWFBue8nhDxlCgbkNLPGDODOA", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Using Fusiontables to Visualize Data", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\nNow that you know what big data is and having seen examples, what do you think can be done with big data? Can it be manipulated to answer questions? What tools can be used to manipulate big data? What is a Google Fusion Table?\nComputers provide powerful tools to process all of this information. It's important in the 21st century to be conversant with these tools and to be able to use them to gain knowledge and insight. One such tool is Google Fusion tables, an cloud application that helps you manage, process, and visualize data through the use of tables. Wikipedia provides a nice explanation of Google Fusion Tables.\nGovernments and other large organizations are increasingly making their data publicly available.  It's important to know about some of these sources and to see how one can download and process that data for one's own purposes. \nThe way in which data is manipulated can influence interpretation. For example, a graph of test scores can help individuals make conclusions quicker and more easily than a table with test scores. This is because a graph allows individuals to visually notice trends in the data.\n\n<h2>Activity 1: Exploring the Fusion Tables Gallery</h2>\nBrowse the <a href=\"https://sites.google.com/site/fusiontablestalks/stories\" target=\"blank\">Fusion tables Gallery</a> which provides many examples of how Fusion tables are being used. Browse to see what can be done and what others have done.\n\n\n\n<br><br><img src=\"https://ram8647.appspot.com/mobileCSP/assets/img/FusionTableExampleGallery.JPG\" class=\"yui-img\" height=\"400\" width=\"700\"><br>\n\n<h2>Activity 2: Create a Google Fusion Table</h2>\nFirst you will need to have a data set. Let's start by using Google spreadsheets to create a small data set.\n\n<h4>Step 1: Create a Data Set</h4>\n<ol> \n<li>Open <a href=\"http://drive.google.com\">Google Drive</a> and sign in if you haven\u2019t already.\n</li><li>In your Google drive, click \u2018CREATE\u2019, and select \u2018Spreadsheet\u2019.\n</li><li>To name the file. double-click 'Untitled Spreadsheet' in the top left hand corner and give your data set a name. Then click 'OK'. Now your data will automatically be saved in your Google Drive.\n</li><li>Fill in the spreadsheet with your data. Try to have at least 10 entries.\nNote: Be sure to have some text (e.g.names), some numbers (e.g.ages, birth year) and locations (e.g. zip codes, latitude and longitude) all in your data set. For example, you might choose to do a data set on your family members that contains their names, ages, and their zip codes.\n</li>\n</ol>\n\n<h4>Step 2: Getting the Data into a Fusion Table</h4>\n<ol>\n<li>Open <a href=\"http://drive.google.com\">Google Drive</a> and sign in if you haven\u2019t already.\n</li><li>In your Google drive, click Create. \n</li><li>Then select 'Connect more apps' from the drop down menu. \n</li><li>In the pop-up window select 'Fusion Tables' and click the blue '+ connect' button. \nNote: If you have already connected Fusion Tables with your Google Drive you will not need to do this.\n</li><li>Go back to your Google Drive and click Create again. \n</li><li>Select 'Fusion Table' from the drop down menu. \n</li><li>In the pop-up window select the 'Google Spreadsheets' tab \n</li><li>Choose the spreadsheet you would like to use. This should be the spreadsheet you created using the instructions above.\n</li><li>Click the 'Select' button. Google Fusion Tables may then ask for permission to view and manage your spreadsheets. Click the 'Accept' button. If so, you may need to then repeat the previous steps.\n</li><li>Wait for the data to load into a preview of the table and click 'Next' again. \n</li><li>Click 'Finish'\n</li></ol>\n\nGreat job! Now you can start using data visualization tools to view and manage your data. Get started with the tutorials below.\n\n<h2>Activity 3: Fusion Table Map Tutorial</h2> \nComplete the <a href=\"https://support.google.com/fusiontables/answer/2527132?hl=en&amp;topic=2573107&amp;ctx=topic\" target=\"blank\">Google Fusion table map tutorial</a>. \nThis tutorial shows an example on how to construct an interactive map using data that contains geocoded information, such as latitude and longitude. \n\n<br><br><img src=\"https://ram8647.appspot.com/mobileCSP/assets/img/FusionTableMap.JPG\" class=\"yui-img selected\" height=\"400\" width=\"700\"><br>\n\n<h2>Activity 4: Customize and Filter Fusion Table Tutorial</h2>\nComplete the <a href=\"https://support.google.com/fusiontables/answer/2562121?hl=en&amp;topic=2573107&amp;ctx=topic\" target=\"blank\">Customize and Filter tutorial</a> that describes how to visualize data using charts and graphs.\n\n<h2>Activity 5: Putting It All Togther - The Fusion Table Exercise</h2>\nWork with a partner to complete the <a href=\"https://docs.google.com/document/d/1yT4wcVOAKUXz5Xum5FWzMQim-Vn1C-OLN9sXjMmUFQo/edit#heading=h.qo7kou40d1wi\" target=\"blank\">Fusion Table Exercise</a>. In this exercise, you will download a big data set from data.gov, upload it into Google Fusion Tables, formulate some questions about the data, and then use the Fusion table manipulation tools (filtering, visualization) to answer the questions.\n\n<h2>Reflection</h2>\nCreate a portfolio page called <i>Fusion Table Exercise</i> under the <i>Reflections</i> category of your portfolio. This page should be written as a report and include the following information (small paragraph for each):\n<ol>\n<li>Summarize the assignment in your own words.\n</li><li>Explain what data you used and where you found it. \n</li><li>Describe the steps you took to complete this assignment. (Hint: The Fusion Table Exercise Google Doc contains some helpful section headers.)\n</li><li>Include your 3-5 questions about the data.\n</li><li>Include visualizations of the data you created to answer the questions. (Hint: screenshots might be useful)\n</li><li>Describe what you learned in completing this assignment and how you might use this information in future projects (for any class).\n\n</li></ol>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 88, "duration": "", "notes": "https://docs.google.com/document/d/1yT4wcVOAKUXz5Xum5FWzMQim-Vn1C-OLN9sXjMmUFQo/edit#heading=h.qo7kou40d1wi", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "A Mobile Fusiontable App (Optional)", "has_activity": false, "objectives": "<p>This lesson creates a simple app that presents some fusion table data. </p>\n<p style=\"color:red\">Note: this lesson is <b><i>optional</i></b>. We were not able to complete it in time for the summer course but will be working to put the materials up here for the academic year.</p>\n<p>However, you can view the <a href=\"https://docs.google.com/document/d/18rPd7_VytQcL_oM77SpL3wf1o6aOVVkLQH8xDybFnAc\" target=\"_blank\">text version of the lesson</a>.</p>\n\n<h2>Questions and Exercises</h2>\n<question quid=\"5757191143292928\" weight=\"1\" instanceid=\"dqEwumkwQ4nU\"></question>&nbsp;<question quid=\"5752281458802688\" weight=\"1\" instanceid=\"QRxMAawR9fUt\"></question>&nbsp;<question quid=\"5655294990352384\" weight=\"1\" instanceid=\"SCE12qTKDfS4\"></question><br>", "unit_id": 26, "activity_title": "", "video": "", "lesson_id": 89, "duration": "", "notes": "https://docs.google.com/document/d/18rPd7_VytQcL_oM77SpL3wf1o6aOVVkLQH8xDybFnAc", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Overview", "has_activity": false, "objectives": "<p>This unit focuses on the <b><i>Internet</i></b>, one of the big ideas in computer science.</p>\n\n<h3>Unit Features</h3>\n<ul>\n<li>Programming: The App Inventor lessons in this unit show different ways to use the internet in apps, including the ability to send text messages over Wifi, finding directions via the Google Maps API,&nbsp;. \n</li><li>CS Principles: These lessons focus on the Internet, how it works, how it enables innovation and collaboration, and security concerns for using it.\n</li>\n</ul>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 116, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "What is the Internet?", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\nThe Internet and the World Wide Web have had a tremendous influence\non our world and our lives.  Yet, most people do not really understand what the Internet \nis and how it works.  This unit will provide an overview of the Internet, its main technical\nfeatures, and its impact. \n\n<p>This lesson addresses the question <i><b>What is the Internet?</b></i> It\nprovides a high-level overview of some of the key concepts and terminology.  A \nfollow-up lesson will go into greater detail in explaining how the Internet works.\n\n</p><p>Let's begin with a <i>common misconception</i>.  Most people do not distinguish\nbetween the  <i>Internet</i> and the <i>World Wide Web</i>, but they are two \ncompletely different things.  The basic distinction is this:\n\n</p><ul>\n\n<li>The <i>World Wide Web (WWW)</i> is an application that runs on the\nInternet.  The WWW is a system of interlinked resources -- documents, images, sounds,\nvideos, data files -- that are stored on the Internet and can be accessed through a \n<i>browser</i>.\n\n<p></p></li><li>The <i>Internet</i> (capital \"I\") is the underlying global network that supports\nthe WWW and many other applications.  It consists of many different local networks that\nare connected together by various hardware devices.  \n\n</li></ul>\n\n<p>(<a target=\"_blank\" href=\"https://docs.google.com/presentation/d/1tMJPSDrzOtXJFDVxkVbMvZGw-uzADpiIdM4gXe9f54I\">Slides</a>)</p>\n\n<h2>What is the Internet, Part 1 - The Basics\n</h2>\n\n<gcb-youtube videoid=\"GdTE9sOBN30\" instanceid=\"v3velg4yHOVS\"></gcb-youtube><br>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359108\">\nTeacher Tube version</a>)\n\n<h3>Activity 1 - Explore the Evolution of the Web</h3>\n<p>As you learned in the presentation, the Internet has grown exponentially. \nExplore it's evolution using this \n<a href=\"http://evolutionofweb.appspot.com/?hl=en#/growth/day\" target=\"_blank\">interactive graphic</a>\n to see what new technologies have impacted growth.</p>\n\n\n<h2>What is the Internet, Part 2 - Internet vs WWW\n</h2>\n<gcb-youtube videoid=\"mLTNMn62bhM\" instanceid=\"3nFEtEcWq1E7\"></gcb-youtube><br>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359099\">\nTeacher Tube version</a>)\n\n<h3>Activity 2 - Concept Map</h3>\n<p>Create a concept map that uses \"The Internet\" as it's central term and (at least) the following terms from the first and second presentations. Include definitions or examples of the terms to help you remember them.<br></p>\n\n<table>\n<tbody><tr>\n<td>Network\n<br>World Wide Web\n<br>Client\n<br>SMTP/POP\n<br>URI\n<br>Protocol\n<br>Modem\n<br>Ethernet\n</td>\n\n<td>LAN\n<br>WAN\n<br>Server\n<br>HTTP\n<br>HTML\n<br>Router\n<br>Internet Service Provider\n<br>Wifi\n</td>\n</tr>\n</tbody></table>\n\n<h2>What is the Internet, Part 3 - Internet Performance\n</h2>\n<gcb-youtube videoid=\"Njs0IBMIiCc\" instanceid=\"6rDWawjxj8Bv\"></gcb-youtube><br>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359096\">\nTeacher Tube version</a>)\n\n<h3>Activity 3 - Measuring Bandwidth</h3>   \n\nAs you learned in the slide presentation bandwidth\nis a measure of a network's speed measured in\nbits per second.\n\n<ul>\n<li>Use <a target=\"_blank\" href=\"http://www.cnet.com/internet-speed-test/\">\nCNET's Bandwidth tool</a> to measure\nthe bandwidth from your home and from your school.  Which has the faster\nnetwork?  \n\n</li><li>Use <a target=\"_blank\" href=\"http://www.netindex.com/download/2,1/United-States/#\">\nOokla's Interactive Global Broadband map</a> to explore the\nvariation of bandwidth speeds in the US.  Which state has the\nfastest average speed?  Which state has the slowest?  What is the\naverage for Hartford, CT?  For Boston, MA?  For San Francisco, CA?\n\n</li></ul>\n\n<h3>Activity 4 - Measuring Latency</h3>   \n\nAs you learned in the slide presentation latency is a measure of the time\nit takes information to get from its source to its destination.\n\n<ul>\n<li>Use <a target=\"_blank\" href=\"http://www.his.com/cgi-bin/ping\">HIS.com's Ping tool</a> to measure\nthe average latency between HIS.com's site and the following Web sites:\n<ol>\n<li>http://google.com\n</li><li>http://whitehouse.gov\n</li><li>http://mobile-csp.org\n</li></ol> \n\n</li></ul>\n\n\n<h2>Questions and Exercises</h2>\n\n<question quid=\"5678091720458240\" weight=\"1\" instanceid=\"FnawopZ2OTvY\">\n</question><br>\n<question quid=\"5668235307384832\" weight=\"1\" instanceid=\"kZXOrFS4rhrH\">\n</question><br>\n<question quid=\"5756035713204224\" weight=\"1\" instanceid=\"SwCp6lqMuPzq\">\n</question><br>\n<question quid=\"5721869516800000\" weight=\"1\" instanceid=\"yhfDRfKshUwB\">\n</question><br>\n<question quid=\"5715350830186496\" weight=\"1\" instanceid=\"sizzc6Ev2vCV\">\n</question>\n\n<h2>Still Curious</h2>\n\nThere is a wealth of good introductory information about the Internet and the WWW.\n\n<ul>\n<li>Start by reading the respective Wikipedia pages:  \n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Internet\">Internet</a> \nand <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/WWW\">WWW</a> .\n<p></p></li><li>Here's another brief explanation of the \n<a target=\"_blank\" href=\"http://netforbeginners.about.com/od/i/f/What-Is-The-Internet.htm\">\ndifference between the Internet and WWW</a>.\n<p></p></li><li>Here's a <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=Bkd3VyQMBK0&amp;noredirect=1\">\nshort video</a> (4 minutes) about Tim Berners-Lee.\n\n</li></ul>\n\n<h2>Reflection: For Your Portfolio</h2>\nCreate a page on your portfolio named <i>What is the Internet?</i> under the <i>Reflections</i> category of your portfolio and answer the following questions:\n<ol>\n<li>What is the Internet? What is the World Wide Web? Are they the same?\n</li><li> What is bandwidth? If you measured bandwidth outside of school, what was it at home or work? What do you think accounts for the differences?\n</li><li> What is latency?\n</li></ol>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 99, "duration": "", "notes": "https://docs.google.com/presentation/d/1tMJPSDrzOtXJFDVxkVbMvZGw-uzADpiIdM4gXe9f54I", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "No Texting While Busy Tutorial", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n\n<iframe src=\"//www.youtube-nocookie.com/embed/Al82272L8tw?rel=0\" allowfullscreen=\"\" frameborder=\"0\" height=\"420\" width=\"315\">\n</iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359113\">\nTeacher Tube version</a>)\n\n<br></td>\n<td><b><i>No Texting While Busy</i></b> uses the App Inventor \nTexting Component to receive and send text messages.  \nThis version is a variation of the \n<a target=\"_blank\" href=\"http://appinventor.mit.edu/explore/content/no-text-while-driving.html\">\nNo Text While Driving</a> tutorial \nand it shows how to use the \n<a target=\"_blank\" href=\"http://appinventor.mit.edu/explore/content/google-voice.html\">\nTexting component over Wifi</a> \n(for devices with no Sim card or Mobile service plan). The app itself \nis bare bones. It is designed to respond automatically to messages \nreceived while the user is busy.  The app simply displays the message \nin a log and sends an automatic response.  \n\n<p>The lesson contains several \nsuggestions for enhancements.\n\n<br>\n<br>\n<br>\n<br>\n</p><p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>use App Inventor's Texting component;\n</li><li>work with<i>Google Voice</i>, both the mobile app and the <i>Google Voice</i> account;\n</li><li>handle received text messages in App Inventor.\n</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<br>\n<br>\n<h2>Tutorial</h2>\n\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit7/templates/NoTextingWhileBusy/NoTextingWhileBusy.asc\" target=\"_blank\">open App Inventor with the No Texting While Busy Template</a>\n in a separate tab and follow along with the following tutorial.\n\n<br><br>\nIf you prefer, you can \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/1NwBaKgSkpW18titqPSnlKINEUykb67il4IfTa9umYDI\">\nclick here for a text-based version</a> of the tutorial.\n</p>\n\n<gcb-youtube videoid=\"821nlCBewEQ\" instanceid=\"xRWAkRvI17aX\">\n</gcb-youtube>\n<br>\n\n\n<h2>Enhancements: Creative Projects</h2>\n<p>Here are some ideas for programming projects.\n\n\n\n</p><ul>\n<li><b>Customization:</b> Add a feature that allows the user to input the \nmessage that gets sent automatically while busy.   For a simple version of this, \na <i>Textbox</i> and a <i>Button</i> could be used.\n\n</li><li><b>Customization:</b> A more sophisticated version of the above \nenhancement might be to add a <i>Listpicker</i> that lets the user choose the \ncategory of \u2018busyness\u2019 and then sets the outgoing message to one that \nis appropriate for that category. For example, the categories might by \n[driving, studying, working]  and the corresponding messages might be \n[\u201cDriving, TTYL\u201d, \u201cGotta study now sorry\u201d, \u201cI\u2019m at work now and can\u2019t \nrespond. I\u2019ll get back to you soon..\u201d].\n\n</li><li><b>Look and Feel: </b> Improve the overall appearance of the app by using layouts,\nimages, and other UI features.\n\n</li><li><b>Persistence:</b>  Add a TinyDb component to the app so that their custom \nreplies will persist between uses of the app.\n\n</li><li><b>Settings Screen (Advanced):</b> Add a second Settings screen that allows \nthe user to set certain Texting and/or app properties.  For example, for the \nTexting component, let the user control whether GoogleVoice is enabled \nand when the app is receiving messages (Off, Always, Foreground).   \nFor the app, maybe the custom message setting could be done on this screen?  \n\n<br>HINT: You may need to use the \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/1lnYq4Fuw6DPKohEv1gdqpzNdyugERrw3aI_GPYBh8Y4\">\nHow to: Pass Information Between Screens</a> tutorial.\n</li></ul>\n\n\n<p></p>\n<h2>Questions</h2>\n<question instanceid=\"KDlzYkuYGVuk\" weight=\"1\" quid=\"5415703544856576\"></question><question instanceid=\"amefRsT8OKEL\" weight=\"1\" quid=\"6028020389249024\"></question>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named \n<i><b>No Texting While Busy</b></i> under the <i>Reflections</i> category of your \nportfolio and write\nbrief answers to the following questions.\n\n<ol>\n<li>What is the main functionality of this app? Which block(s) control the primary \nfunction of this app? \n</li>\n\n<li>Describe briefly how the <i>MessageReceived</i> event handler works.\n</li>\n\n\n</ol>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 110, "duration": "", "notes": "https://docs.google.com/document/d/1NwBaKgSkpW18titqPSnlKINEUykb67il4IfTa9umYDI", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Cloud Computing and Ethics", "has_activity": false, "objectives": "<h2>Introduction</h2>\nThis lesson introduces and explains the popular concept of cloud computing. One activity is to read and discuss the Wikipedia article on the 10 Commandments of Computer Ethics. \n\n<h2>What is Cloud Computing?</h2>Cloud computing is a popular (marketing) term for a distributed computing system whereby a computer program runs on many different computers connected by a network. &nbsp;Individuals use cloud computing services all the time (Facebook, Google search, Twitter, DropBox).&nbsp;This technology is used to provide application services (Google docs, Facebook, Google search), which are rapidly encroaching on desktop applications (Microsoft word, Excel).  When working in cloud computing applications, we typically say we are storing things \"on the cloud\". This is because the work that we do in cloud computing applications is not stored on our local hard drive. Instead, it is saved on a real-time communication network. &nbsp;Because of this the Internet and cloud computing help facilitate collaborative works. For example, earlier in the course you used <a href=\"http://drive.google.com\">Google Drive</a> to create a spreadsheet. That spreadsheet is saved \"on the cloud\" and not on your computer's hard drive. Therefore, any one that you give access to your spreadsheet can add data to it from their own computer!&nbsp;\n<br><br>\nCloud computing has obvious advantages such as relieving users from having to manage their own data and information and making it easier to share information, but it has obvious impacts as well on the privacy of our information. Recall the Blown to Bits Chapter 2 on the issue of privacy. In addition, cloud computing has disadvantages such as space limitations for particular services, if there is no Internet connection you cannot access the cloud, and if a server crashes you may not be able to access your files and information.\n<br><br>\nWikipedia has a nice article on <a href=\"http://en.wikipedia.org/wiki/Cloud_computing\">Cloud Computing</a>.\n\n<h2>The Client/Server Model</h2>\nCloud computing is made possible by the Internet and the World Wide Web and employs a computation model known as <i>client-server computing</i>.  Client-server computing is a model in which there are only clients and servers communicating over a network. \nA client, or application, depends on servers for files and other information.<br><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t\t\t\t\t</span><img src=\"https://ram8647.appspot.com/mobileCSP/assets/img/ClientServerModel.png\" class=\"yui-img\"><br><br>A simple example of a <i>client</i> is the browser application that runs on a laptop or a phone (e.g an e-mail application).  Examples of <i>servers</i> include Google's search engine, Twitter's service, Facebook's service, and iTunes service.  \nMobile phones are especially dependent on services such as GPS, texting, email.\n\n<h2>Activity</h2>\nInnovations in computing have raised legal and ethical concerns. From commercial access to music and movie downloads and streaming and open source and licensing of software and content, how individuals use computers is becoming more and more important.\n<br><br>\nRead the Wikipedia article on the <a href=\"http://en.wikipedia.org/wiki/Ten_Commandments_of_Computer_Ethics\" target=\"blank\">Ten Commandments of Computer Ethics</a>. While reading, consider the following: \n<ol>\n<li>Which commandments in the article do you follow? \n</li><li>Are there any that you don\u2019t follow?\n</li>\n</ol>\n \n<h2>Exercises</h2>\n<question quid=\"6548720480944128\" weight=\"1\" instanceid=\"z7Kyprp7MHpu\"></question><question quid=\"5102821217140736\" weight=\"1\" instanceid=\"mCSiOvWvUO41\"></question><question quid=\"4923559616970752\" weight=\"1\" instanceid=\"8uERaXwqZLJf\"></question><question quid=\"5904433913266176\" weight=\"1\" instanceid=\"D06rfNy3wAXf\"></question><question quid=\"6321091106570240\" weight=\"1\" instanceid=\"Zh7DaJfr2kOD\"></question><question quid=\"5947246147272704\" weight=\"1\" instanceid=\"oDtuqkDOPcUp\"></question><br>\n\n<h2>Reflection: For Your Portfolio</h2>\nCreate a page named <i>Cloud Computing and Ethics</i> under the <i>Reflections</i> category of your portfolio and answer the following questions:\n\n<br>\n<ol>\n   <li>Give a description of cloud computing.\n</li><li>Identify the clients and servers in at least two examples of cloud applications.  \n</li><li>Which of the 10 Commandments of Computer Ethics do you follow? Why is it important to follow these commandments?\n</li><li>Select two of the commandments and give an example each of someone following and not following that commandment.\n</li></ol>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 100, "duration": "", "notes": "", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "How the Internet Works", "has_activity": false, "objectives": "<h2>Introduction</h2>\n<p>This lesson goes more deeply into the infrastructure and mechanics of the Internet.\nIt explains packet switching, TCP/IP and the protocol hierarchy, as well as IP addresses and domain names.</p>\n\n\n<p>(<a target=\"_blank\" href=\"https://docs.google.com/presentation/d/1B9ltm9-nVrF2snHPNyBxSsbVIXTvG6vLXIJEXblAxbs\">Slides</a>)\n</p>\n<h2>How the Internet Works, Part 1</h2>\n<gcb-youtube videoid=\"f4TjIlS8Bms\" instanceid=\"r4a02eLGpnUz\"></gcb-youtube><br>\n\n<h3>Activity - Using Interactive Tools to Observe the Internet</h3> \n\nThe <a target=\"_blank\" href=\"http://centralops.net/co/\">CentralOps.net</a> has \nfree interactive tools that can be used to observe packet routing, latency time, and \nother Internet statistics.  Just choose the tool you want to use from the navigation bar\non the left.\n\n\n<ul>\n<li><a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Ping_(networking_utility)\">Ping</a>\n tests whether a host computer is reachable by repeatedly sending data\npackets from the CentralOps.net server in Dallas, TX to the host computer.\nFor each of the following servers, write down the average round trip time (RTT).\n\n<ul>\n<li>google.com, yahoo.com, www.trincoll.edu, appinventor.mit.edu\n</li></ul>\n\n<p>Here are some questions to think about:\n\n</p><ul>\n<li>Did any of the servers lose packets? \n</li><li>Are you able to find a server that has a really long RTT or does lose packets?\n</li></ul>\n\n\n</li><li><b>Traceroute</b> lets you trace the route from the CentralOps.net server in \nDallas, TX to some destination server. Here are some servers to try.  \n<ul>\n<li>google.com, yahoo.com, www.trincoll.edu, appinventor.mit.edu\n</li></ul>\n\n</li><li>Use Use <a target=\"_blank\" href=\"http://traceroute.monitis.com/\">\nthe Monitis Traceroute tool</a> to measure\nthe average latency between various servers on the Internet.  How much\ntime and how many hops do the following routes take:\n<ol>\n<li>http://google.com\n</li><li>http://whitehouse.gov\n</li><li>http://mobile-csp.org\n</li></ol> \n\n</li></ul>\n\n\n<h2>How the Internet Works, Part 2</h2>\n<gcb-youtube videoid=\"W0w-n3YHvjo\" instanceid=\"6Pv5OAvlOU7m\"></gcb-youtube><br>\n<h3>Activity - Packet Sniffers &amp; Public Networks</h3>\n<p>Watch <a href=\"http://youtu.be/b56WwssMxZw\" target=\"_blank\">this video</a> that describes how a hacker could view your data on a public network using a packet sniffer.\nDiscuss with your classmates when and where you use public networks, how you use the Internet on them, and how you might protect your data.</p>\n\n\n<h2>How the Internet Works, Part 3</h2>\n<gcb-youtube videoid=\"qPo7WJ1J-SA\" instanceid=\"IUeiulWc8Ks2\"></gcb-youtube><br>\n<h3>Activity - Lookup Domain Names &amp; IP Addresses</h3>\n<p>Using the tools below, try looking up the IP addresses for various websites, including their subdomains. Do you see any patterns? Now look up your school's domain name and IP address, and then the IP address for your computer or mobile device. Do you see any patterns?</p>\n<ul>\n<li><a href=\"https://who.is/\" target=\"_blank\">WhoIs.com</a> - find the IP address for a given host name\n</li><li><a href=\"http://www.whatip.com/\" target=\"_blank\">WhatIP.com</a> - find the IP address of the device visiting the website\n</li><li>What's my IP? - <a href=\"touch.whatsmyip.org\" target=\"_blank\">mobile version</a>\n</li><li>Possible searches: 1) google.com, maps.google.com; 2) www.wikipedia.org, en.wikipedia.org; 3) mit.edu, appinventor.mit.edu\n</li></ul>\n\n\n\n<h2>Questions and Exercises</h2>\n<question quid=\"4911545570033664\" weight=\"1\" instanceid=\"nsSuWrvMAauX\"></question>\n<question quid=\"5699788435619840\" weight=\"1\" instanceid=\"pk5TN00OdesU\"></question>\n<question quid=\"5761540401659904\" weight=\"1\" instanceid=\"xpxldwL7eRNz\"></question>\n<question quid=\"5983646179655680\" weight=\"1\" instanceid=\"53ApS9z4Gh2i\"></question>\n<question quid=\"6480012731482112\" weight=\"1\" instanceid=\"R6l9R5QDaSWC\"></question>\n\n\n\n\n<h2>Still Curious</h2>\n\nThere is a wealth of good introductory and comprehensive information about the Internet and the WWW.\n\n<ul>\n<li>As always, \n<a target=\"_blank\" href=\"http://en.wikipedia.org\">Wikipedia</a> \nis an excellent resource as a first stop. Its pages on \n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Internet_protocol_suite\">Internet protocol</a>,\n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Ping_(networking_utility)\">Ping</a>,\n<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Traceroute\">Traceroute</a>, and the other topics\nin this lesson are all accurate and accessible.\n\n\n</li><li>The <a target=\"_blank\" href=\"http://computer.howstuffworks.com/router1.htm\">\nHow Stuff Works</a> site has a nice animated description of how routers\nwork to direct traffic on the Internet. \n\n</li><li>For a very detailed and comprehensive discussion of networking -- sort of\nlike reading a short book -- see the <a target=\"_blank\" href=\"http://www.comptechdoc.org/independent/networking/guide/index.html\">\nCTDP's Networking Tutorial</a>, which covers the topic in much more detail than\nwe have done here.\n\n</li></ul>\n\n<h2>Reflection: For Your Portfolio</h2>\nCreate a page on your portfolio named <i>How the Internet Works?</i> under the <i>Reflections</i> category of your portfolio and answer the following questions:\n<ol>\n<li>What are ping and traceroute? How does each work?\n</li><li>What are the benefits of packet switching?\n</li><li>What is the TCP/IP Model?\n</li><li>What are packet sniffers? Why is it important to protect your data when using public wifi connections?\n</li><li>What is the difference between IPv4 and IPv6? Why have we shifted to IPv6?\n</li><li>What is the link between IP addresses and domain names?\n</li></ol>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 102, "duration": "", "notes": "https://docs.google.com/presentation/d/1B9ltm9-nVrF2snHPNyBxSsbVIXTvG6vLXIJEXblAxbs", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "My Directions Tutorial", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n<iframe width=\"315\" height=\"420\" src=\"//www.youtube-nocookie.com/embed/j1eiu8Dy_SI\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n\n</td><td>\n<b><i>My Directions</i></b> This tutorial shows how to use the Location Sensor \nin combination with Google Maps to display directions from the user\u2019s \ncurrent location to a selected destination.\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359114\">\nTeacher Tube version</a>)\n\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul>\n<li>create an app that\n<ul>\n<li>uses the Global Positioning System(GPS) to obtain the user's current location,\n</li><li>uses the Google Maps Application Programming Interface (API) to \nobtain directions from the user's current location to a destination address;\n</li>\n</ul>\n</li><li>appreciate that Google Maps API is an abstraction that allows apps\nto leverage existing functionality;\n</li><li>obtain some additional experience working with lists and TinyDB to save user-generated information persistently.</li></ul>\n<p></p>\n</td></tr></tbody></table>\n\n<h3>Building the MyDirections App</h3>\n<p>To get started, <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit7/templates/MyDirections/MyDirectionsTemplate.asc\" target=\"_blank\">open App Inventor with the My Directions Template </a><u>&nbsp;i</u>n a separate tab and follow along with these tutorials.&nbsp;<br>\n<br>You can either click on the thumbnails to view the video or \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/19q94J-fc9t4TjhrDOcl_skO-WAMg10Y8Y03-TaG64M8/edit?usp=sharing\">\nclick here</a> to read the tutorial.\n\n\n</p>\n\n<table><tbody><tr><td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=LdoJUouVWjw\">\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/LdoJUouVWjw?rel=0\" frameborder=\"0\" allowfullscreen=\"\">\n\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n\n</iframe></a></td>\n<td>\n<iframe width=\"250\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/0Wu_BvUVCM8?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n\n</td>\n</tr>\n</tbody></table>\n\n<h2>Enhancements: Creative Projects</h2>\n\nThere are a number of enhancements you could implement to improve this app.\n<ol>\n<li>In its current form, the destination addresses are created by the programmer. Add a Textbox and a Button to the UI to enable the user to input their own destination addresses. Addresses entered by the user should be added to the destinations list. This will make it possible to share the app with friends.\n</li><li>Improve the presentation of the search results by using or modifying one or more additional API arguments in the Map\u2019s URL. \n</li><li><b>Advanced:</b> Add a TinyDb to the app so that the user\u2019s destinations will persist. Addresses saved in the TinyDb will be there the next time the app is used.&nbsp;<span id=\"docs-internal-guid-c6e1980d-cbdb-7b60-9fc9-0e6a4f08b726\"><span style=\"font-size: 15px; font-family: Arial; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;\">\n<br><img src=\"https://lh5.googleusercontent.com/yJ7te3jGckqeXrGW3IiJSd4QHqUiRfALH0oUaZFsK5q7zeJm-UOfFHTfXpCCETeBVP0T2XgwN0rEkwnrucEkJe9wmQtta2xhTqBgQ1O0jPEhn66WS3FkG4OWkjEoVPXvfw\" width=\"624px;\" height=\"100px;\" style=\"transform: rotate(0rad); -webkit-transform: rotate(0rad);\" alt=\"Screen Shot 2014-08-05 at 3.27.37 PM.png\"></span></span><br><br>\n<b>HINT 1:</b>  Lists (as well as numbers and strings) can be stored in a TinyDb.  So you can store the entire destinations list as one element. Determine when and how to store the destinations. Then, determine when and how to retrieve the destinations.&nbsp;<span style=\"line-height: 1.22;\">\n<br><br>\n<b>HINT 2:</b> The destinations should be retrieved from the TinyDb when the app is initialized.  Here\u2019s how:&nbsp;</span><span style=\"line-height: 1.22;\">\n<br><br>\n<i>NOTE:</i> This can be tricky to understand.  The first time the app is run, there definitely won\u2019t be any \u2018addresses\u2019 stored in the TinyDb. You can specify how to handle the empty data situation with the valueIfTagNotThere parameter. In the example, we set global destinations to a default fixed list so the first time the app runs it will have some sample destinations You could also put a create empty list in valueIfTagNotThere if you wanted the destinations list empty to start. This problem won\u2019t arise once the user has stored some addresses in the TinyDb.</span>\n</li></ol><b><b>\n\n<br>\n<h2>Questions</h2>\n<question quid=\"5708573640228864\" weight=\"1\" instanceid=\"MsEJ0vmcqJrP\">\n</question><br>\n<br><question quid=\"5155582105354240\" weight=\"1\" instanceid=\"yAc0ZsMnkuZh\">\n</question>\n\n\n<h3>Still Curious?</h3>\n\n<p>\nIn this lesson you used the Google Maps Application Programming Interface (API), an \nabstraction that lets you specify commands to the Google Maps application.  This is a \nnice example of <i>cloud computing</i>:  Google Maps is the cloud-based application\nthat programmers can incorporated into their apps by learning the API.  This is also\na nice example of how a program -- in this case a mobile app -- can leverage\nfunctionality that professional programmers have developed.\n\n</p><p>This example is not an isolated case. YouTube, Flickr, Twitter, and Amazon all provide APIs to use at least part of their services.\n\n</p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named <i><b>My Directions</b></i> under the <i>Reflections</i> category of your portfolio and write brief answers to the following questions:\n\n<ol>\n<li>What are the advantages of having a location aware app? What are the disadvantages?\n</li>\n\n<li>If you added any enhancements, post the screenshots to your portfolio and explain how you implemented the enhancements.\n</li>\n\n</ol></b></b>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 105, "duration": "", "notes": "https://docs.google.com/document/d/19q94J-fc9t4TjhrDOcl_skO-WAMg10Y8Y03-TaG64M8", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Cryptography Basics", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\n<p><i>Cryptography</i> means <i>secret writing</i>. It is the art and science of\nsending secret messages and it has been used by generals and governments and \neveryday people practically since the invention of written language. \n\n</p><p>As we will see in the next lesson, modern cryptographic techniques are essential\nto guaranteeing the security of our transactions on the Internet.  Cryptography plays a\nrole whenever you make an online purchase at Amazon or provide your password to\nGoogle.  If we couldn't rely on those transactions being secure -- i.e., being encrypted\nusing some cryptographic algorithm -- we really wouldn't have the Internet as we know\nit today.\n\n</p><p>This lesson focuses on some of the classical ciphers, going all the way back to \none of the first ciphers, the Caesar cipher, which Julius Caesar used in 34 B.C.  Like the\nother ciphers we study in this lesson, it is what is known as a <i>symmetric cipher</i>,\nwhich means that the same <i>key</i> is used both for <i>encrypting</i> and \n<i>decrypting</i> messages.   As we will also see, all ciphers consist of two parts,\nthe <i>key</i> and their <i>algorithm</i>.  And it is the key, not the algorithm,\nthat allows the cipher to create secret messages. In fact, in modern cryptography the\nalgorithms are all based on <i>open standards</i> that are created by teams of \nexperts, discussed openly and adopted and maintained by standards organizations.\n\n</p><p>So, let's take a look at some of the classical ciphers and some of the basic \nprinciples of cryptography.  There are several hands-on activities in this lesson, where\nyou'll have a chance to practice encrypting and decrypting messages and analyzing\nciphers.\n\n</p>\n\n<p>(<a target=\"_blank\" href=\"https://docs.google.com/presentation/d/1gl-nhvC5U5QofdmcqKn43lqE6yqnLjFi7QjSVhXv82A\">Slides</a>)</p>\n\n<h2>Part 1: Caesar Cipher</h2>\n\n<gcb-youtube videoid=\"7Tfw_-QRiAs\" instanceid=\"pSW244IFw8qw\">\n</gcb-youtube>\n<br>\n\n<h2>Activity: Caesar Cipher</h2>\n\n<gcb-iframe src=\"https://appinventor.trincoll.edu/csp/caesarcipher/\" title=\"Caesar Cipher\" height=\"300\" width=\"650\" instanceid=\"IBDTlyHm0G8e\">\n</gcb-iframe>\n\n<ol>\n<li><b>By Hand:</b> Use the Caesar cipher to encrypt your name.  Use \na key of 3 on the first try.  Then use the script above to check your answer.\n\n<p></p></li><li><b>Brute force search</b>.  A <i><b>brute force</b></i> search\nfor a Caesar key would be to test every possible key.  How many keys would you \nhave to test?\n\n<p>Use brute force search to <b><i>crack</i></b> the \nfollowing message. What is the key?\n</p><blockquote>\n<pre>YTNP HZCV JZF OTO TE! \n</pre>\n</blockquote>\n<br>\n</li></ol>\n\n<h2>Part 2: Simple Substitution Cipher</h2>\n\n<gcb-youtube videoid=\"uvCYeWUoXPo\" instanceid=\"KDUhV0V5LAM5\">\n</gcb-youtube>\n<br>\n\n\n<h2>Activity: Simple Substitution Cipher</h2>\n\n\n<gcb-iframe src=\"https://appinventor.trincoll.edu/csp/simplesubstitution/\" title=\"\" height=\"350\" width=\"650\" instanceid=\"Txh18D2GB1Cj\">\n</gcb-iframe>\n<br>\n\n<ol>\n<li><b>By Hand:</b> Use the Simple Substitution cipher to encrypt your name. \nChoose your own keyword to create a cipher alphabet.   \nThen use the script to check your result.\n\n</li><li><b>Decrypt:</b> The following word,  <b><i>SIRTQSMTCKJ</i></b>, \nwas encrypted with the keyword <b><i>simple</i></b>.  Can you decrypt it?\n\n</li><li><b>Brute force attack.</b> How many keys (arrangements of the alphabet) \nwould you have to try to perform a brute force attack?\n\n</li></ol>\n\n<h2>Part 3: Frequency Analysis</h2>\n\n<gcb-youtube videoid=\"4d9cmN1xTDs\" instanceid=\"TlcD8kBLwWHT\">\n</gcb-youtube>\n<br>\n\n<h2>Activity: Frequency Analysis</h2>\n\n<gcb-iframe src=\"https://appinventor.trincoll.edu/csp/frequencies/\" title=\"\" height=\"400\" width=\"675\" instanceid=\"lckufhHb4INz\">\n</gcb-iframe>\n\n<ol>\n<li><b>Frequency analysis:</b> One of the following messages was encrypted \nusing a <i>substitution cipher</i> and the other with a <i>transposition cipher</i>.\nCan you identify which is which? \nPaste the messages into the frequency analyzer tool (above) and observe their\nfrequency histograms?. \n\n<br><br><b>Text 1.</b>\n<pre> \nnybfx ymjgj xytky nrjxn ybfxy mjbtw xytky nrjx nybfx ymjfl jtkbn xitrn ybfxy mjflj \ntkktt qnxms jxxn ybfxy mjjut hmtkg jqnjk nybfx ymjju thmtk nshwj izqny dnyb fxymj \nxjfxt stkqn lmyny bfxym jxjfx tstki fwpsj xxny bfxym jxuwn sltkm tujny bfxym jbnsy \njwtki jxufn wbjm fijaj wdymn slgjk twjzx bjmfi stymn slgjk twjzx bjbj wjfqq ltnsl inwjh \nyytmj fajsb jbjwj fqqlt nslin wjhy ymjty mjwbf dnsxm twyym jujwn tibfx xtkfw qnpjy \nmjuwj xjsy ujwnt iymfy xtrjt knyxs tnxnj xyfzy mtwny njxns xnxyj itsny xgjn slwjh jnaji \nktwlt titwk twjan qnsym jxzuj wqfyn ajijl wjjt khtru fwnxt stsqd\n</pre>\n\n<br><b>Text 2.</b> \n<pre>ttbti swhot istta osmwh gflhs tsecf liaho ondia henit ahena nwtpnf ewtie fpree rhbou \nhnhbo uerli deovw rlode oeasr hrdsa itrei ttein ittie ntote gceoo rrits etegc psoya hsfmt \nsesfm iahew dtseo oiewh pheet tecir uytss sohts ssoks isero oisen oeawa vtnee watne \newagn rtenw egnit htwih tpiao reeet eoaoo sieuo tiiei ieidg dfvih pliee omrol setet wtese \niotao siaoo fwphe lwtof wtofs tsipt wtsid egfed gfweo gtaea grehn oeofl psrdm fssri \nsdbnv foone avefi nweoi arowg fiaef nsteb isefc tieag ieare ahgha hrdhy irsoi rseli ceeli \nctryt ewskh nphst oahss nsrer oelur droan\n</pre>\n\n</li>\n\n</ol>\n\n<h2>Part 4: Vigenere Cipher</h2>\n\n<gcb-youtube videoid=\"Vzp6_Dnxh14\" instanceid=\"a200xTcZihnL\">\n</gcb-youtube>\n<br>\n\n\n<h2>Activity: Vigenere Cipher</h2>\n\n<gcb-iframe src=\"https://appinventor.trincoll.edu/csp/vigenerecipher/\" title=\"\" height=\"400\" width=\"650\" instanceid=\"jFLkO9JnZB8I\">\n</gcb-iframe><br>\n\n<ol>\n<li><b>By Hand:</b> Use the Vigenere cipher to encrypt your name.  Choose\nyour own keyword.\n\n<p></p></li><li><b>Decrypt</b> the following message, which was encrypted \nusing Vigenere cipher with\nthe keyword <i>zebras</i>. \n\n<blockquote>\n<pre>SLJJ IK OSMPADOLBSELHG \n</pre>\n</blockquote>\n<br>\n</li>\n\n\n<li><b>Frequency analysis:</b> Use the <i>Frequency Analyzer</i> tool (above) to\ncount the letter frequencies in the following text, which is the same text that was\nencrypted in an earlier exercise.  In this case it was encrypted using Vigenere\ncipher.  What differences do you observe from the histograms you used in the previous\nexercise. \n<blockquote>\n<pre>sabjt zdffj tgexj dekhx xrslg ixfrk ssgki edwj kwsrx ivayd sgnik csnzt ozwuy esfip wfgnp \njjhfd wtzt ozwuy ewosd yoxai mzexh xxrsl gifgo ugsgz nuqie llasc jkws rxivs wzwpe \noxhki kilve tkhwr ibjof njbik fdwt ztozw uyeko vjegg elpge asabj tzdaj etwqs gueko ejiw \nwgeev vwqcu yifff fwojd ytnez zhoft zhrhs exnvf lsod afies kphfi ffhji eusxp vandr xvwwq \nibcly nmoxd aqidk tzds uyejv ezznk gsskt zdtfi igcab jsgee scicd xivpj dwfet hdvj fdlge \nujoed sgztk msjji wrxbl tznvj kiwrm ojiks iefna swcv iffvf teaui ewojf spuoj essvv akmok \nhwryq vrdzx jmevd ksve gegpd psqmt fngmp z\n</pre>\n</blockquote>\n</li>\n</ol>\n\n\n<h2>Part 5: Perfect Secrecy and the Key Exchange Problem</h2>\n\n<gcb-youtube videoid=\"hqa-iJg9D-I\" instanceid=\"zUbuEqiLQ8KI\">\n</gcb-youtube>\n<br>\n\n\n<h2>Questions and Exercises</h2>\n<question quid=\"5942828555304960\" weight=\"1\" instanceid=\"vhnotnwRC0Pc\">\n</question>\n<br>\n\n<question quid=\"4968993844625408\" weight=\"1\" instanceid=\"81OWSY0jdDFS\">\n</question>\n<br>\n\n<question quid=\"6505778508726272\" weight=\"1\" instanceid=\"4FriYLGWpawF\">\n</question>\n<br>\n\n<question quid=\"5813418774757376\" weight=\"1\" instanceid=\"NKTOdS1SN24p\">\n</question>\n<br>\n\n<question quid=\"4906743662379008\" weight=\"1\" instanceid=\"C9kjWP3NILjz\">\n</question>\n<br>\n\n<question quid=\"6588675001417728\" weight=\"1\" instanceid=\"Z11jKxsFP3HR\">\n</question>\n<br><question quid=\"5720742171770880\" weight=\"1\" instanceid=\"gqilgreWDpjk\"></question><br><question quid=\"5653803764285440\" weight=\"1\" instanceid=\"T4oNxRepWSfA\"></question><br><question quid=\"5686820520067072\" weight=\"1\" instanceid=\"MHkFXxdzqHgV\"></question><br>\n\n<h2>Still Curious</h2> \n\n<p>Ever want to incorporate encryption into one of your App Inventor apps?  Here's a\n<a target=\"_blank\" href=\"https://docs.google.com/document/d/1nHI6vo-4Kd05Q6xqIKYzfsEZy0t1rHT0dW_Q5OxtNLg\">\nCaesar cipher tutorial</a>  that shows you how to do that. \n\n</p><p>After implementing the Caesar cipher, if you want an additional challenge, try\ncreating an app that does <i>Simple Substitution</i>.  Or try incorporating an\nencryption scheme into one of your own apps. \n\n\n\n</p>\n\n<h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named \n<i><b>Cryptography Basics</b></i> under the <i>Reflections</i> category of your \nportfolio and write\nbrief answers to the following questions.\n<ol>\n<li>Explain briefly how the following substitution ciphers can be broken:  Caesar cipher,\nSimple substitution cipher, Vigenere cipher.\n</li><li>Define symmetric encryption.\n</li>\n</ol>\n", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 122, "duration": "", "notes": "https://docs.google.com/presentation/d/1gl-nhvC5U5QofdmcqKn43lqE6yqnLjFi7QjSVhXv82A", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Cryptography: Securing the Internet", "has_activity": false, "objectives": "<h2>Introduction</h2>\n\n<p>This lesson focuses on the modern cryptographic systems that are used to \nsecure the Internet.  It describes how the <i>Diffie-Hellman</i> algorithm solves\nthe <i>key exchange problem</i>, a crucial step in making the Internet possible.  \nWithout the ability to securely exchange secret keys, it would be impossible to conduct\nfinancial transactions over a network.  As we shall see, it is the <i>intractability</i> of\nsolving a certain <i>one-way math function</i> that makes Diffie-Hellman possible.\n\n</p><p>It also describes the <i>Rivest-Shamir-Adleman (RSA)</i> <i>public key</i>\nalgorithm.  In this case we'll see that it's the <i>intractability</i> of the <i>prime\nfactorization</i> problem that makes RSA possible. \n\n</p><p>The lesson concludes by describing the handshake that takes place between your\nbrowser and a web server whenever a secure transaction is involved.  Secure transactions\ninclude accessing a Web page through the <i>HTTPs</i> protocol.  Or exchanging \ninformation through the Internet's <i>Secure Socket Level (SSL)</i>.  As we will see\nboth <i>symmetric</i> and <i>public key</i> algorithms are used in this process.\n\n</p><p>The lesson will also describe the Internet's <i>trust model</i> -- i.e., a model\nthat uses <i>digital certificates</i> to ensure that your browser can trust Google or \nAmazon when their servers share their public keys with the browsers.\n</p>\n\n<p>The system that guarantees the security of the Internet is an amazingly complex and fascinating system that pulls together many of the\nconcepts we've been studying in this course. \n\n\n</p><h2>Slides</h2>\n\n<a target=\"_blank\" href=\"https://docs.google.com/presentation/d/1O4fSXY7KwHj-e6LcU6_q4sx7yuY_Epad2rXuCBxGwnk\">\nCryptography, Part II</a>\n\n\n<h2>Part 1: Diffie-Hellman Key Exchange</h2>\n\n<p>This video includes video clips from Brit Cruise's excellent explanation\nof the <i>Diffie-Hellman key exchange algorithm</i>.  You may wish to\npause the video where suggested to try the hands-on color-mixing demo\nbelow.\n\n<br><gcb-youtube videoid=\"ppyb_T2iH1E\" instanceid=\"1d06x8Hj3Pjd\">\n</gcb-youtube>\n<br>\n\n</p><h2>Activity:  Diffie-Hellman Exchange Secret Color Demo</h2>\n\n<p>This Web app provides an implementation of the <i>color-mixing analogy</i>\npresented in the Brit Cruise video.  You can select a shared public color and then your\nown private (secret) color.  When you click \"Show Shared Secret!\" the app will \ndisplay the secret color that it shares with you. \n\n</p><p>The app will also give you an opportunity to use the <i><b>hexadecimal\nnumber system</b></i> that we talked back in Unit 2.  Colors are represented\nin an RGB system -- i.e., by mixing Red (R), Green (G), and Blue (B) primary colors\nin varying quantities.  The mixtures are represented by 6-digit hexadecimal numbers,\nwhere the first two digits represent the amount of red, the next two represent the \namount of green, and the last two represent the about of blue.  For example, pure\n<font color=\"red\">red</font> is <font color=\"red\">FF0000</font>.  In \nthis case FF is the maximum amount of \nred (equal to 255 in decimal).\nThe hex number <font color=\"#00FF00\">00FF00</font> would represent \npure <font color=\"green\">green</font>.  \nIf you mix lots of blue and green, <font color=\"#00FFFF\">00FFFF</font>, you should \nget <font color=\"#00FFFF\">aqua</font>.  If you mix lots of red with some green, \n<font color=\"#ff8500\">FF8500</font>, you should get\n<font color=\"ff8500\">orange</font>. \n\n</p><p>Give it a try.  Just your hex numbers into the text boxes and click the \n\"Show Shared Secret!\" button.\n\n<gcb-iframe src=\"https://appinventor.trincoll.edu/csp/diffiehellmancolor/\" title=\"\" height=\"450\" width=\"650\" instanceid=\"k8nug819cUct\">\n</gcb-iframe>\n<br>\n\n</p>\n\n<h2>Part 2: RSA and HTTPs</h2>\n\n<gcb-youtube videoid=\"_iiHvsFv-eg\" instanceid=\"uRBug8dxskvH\">\n</gcb-youtube>\n<br>\n\n\n<h2>Questions and Exercises</h2>\n\n\n<question quid=\"4791722492035072\" weight=\"1\" instanceid=\"dmgXRhglGa4R\">\n</question>\n<br><question quid=\"5224544600064000\" weight=\"1\" instanceid=\"cgos24S98ZTc\"></question><br><question quid=\"5669476368384000\" weight=\"1\" instanceid=\"EmXkblMIn5uQ\"></question><br><question quid=\"6308147668975616\" weight=\"1\" instanceid=\"RxmQq07OxjkK\"></question><br><br>\n\n<font color=\"red\">More to come</font>\n\n\n<h2>Still Curious?</h2>\n\n<p>Brit Cruise has made an entire series of videos explaining encryption, including this\nexcellent video on the \n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=wXB-V_Keiu8#t=425\">RSA algorithm</a>. \nThe Khan Academy has incorporated the Cruise videos into an excellent interactive \n<a target=\"_blank\" href=\"https://www.khanacademy.org/computing/computer-science/cryptography\">course on Cryptography</a>, \nfrom the Caesar cipher to public key encryption. \n\n\n</p><h2>Reflection: For Your Portfolio</h2>\n\nCreate a new page named \n<i><b>Cryptography: Securing the Internet</b></i> under the <i>Reflections</i> category of your \nportfolio and write\nbrief answers to the following questions.\n\n<ol>\n<li>Explain in your own words how public key encryption is not symmetric.\n</li><li>Cryptography relies on <i>open standards</i> - protocol or \nstandard that is publicly available. Why are open standards necessary?\n</li>\n</ol>\n\n", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 108, "duration": "", "notes": "https://docs.google.com/presentation/d/1O4fSXY7KwHj-e6LcU6_q4sx7yuY_Epad2rXuCBxGwnk", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "BB: Cryptography", "has_activity": false, "objectives": "<table style=\"border: 0\">\n<tbody><tr><td><a target=\"_blank\" width=\"200\" href=\"\">\n<img class=\"yui-img\" src=\"assets/img/blowntobits.jpg\" style=\"float:left; padding-right: 10px\" align=\"left\"></a>\n</td>\n<td>\n<p>Chapter 5 of Blown to Bits (p. 161-193) covers the basics of encryption and how it works to secure\nthe internet.  This chapter meets many of the CSP's essential knowledge goals.  Parts of \nthe chapter can be skipped. Here are some of the topics\ncovered in the reading:</p>\n\n<ul>\n<li>Cryptography</li>\n<li>Encryption</li>\n<li>The Internet</li>\n</ul>\n</td>\n</tr>\n</tbody></table>\n\n\n<h2>Activity</h2>\nRead Chapter 5 of \n<a target=\"_blank\" href=\"http://www.bitsbook.com/wp-content/uploads/2008/12/B2B_3.pdf#page=179\">Blown to Bits</a>. The chapter describes encryption and cryptography.\n&nbsp;\n<br>\n<br>\n<div style=\"text-align: center\" class=\"yui-wk-div\">\n<img src=\"https://ram8647.appspot.com/mobileCSP/assets/img/BBCh5VigenereCipher.png\" class=\"yui-img selected\">\n</div>\n<br>\n<p>Read Chapter 5 to learn about encryption and cryptography and how they work.\n<br>\n\n\n</p><h2>Reading Questions</h2>\nKeep these questions in mind as you read chapter 5. \nFor each question, write a short answer and post your answers on a page\ncalled <i>Blown to Bits, Chapter 5</i> under the <i>Homework</i> category on your portfolio.  Don't worry if you \nthink you don't know the right answer.  Just give it your best shot. \n\n<ol>\n<b>Short answer:</b> <br>  <li>What is encryption?\n</li><li>What is cryptography? Provide an example.\n</li><li>What is security through obscurity and why is it bad?\n</li><li>What is the key agreement protocol and why is it so important to Internet commerce?\n</li><li>What is a certificate and what role does it play in Internet security?\n</li><br><b>Free Response:</b><br>\n<li>In your opinion, are digital signatures more secure than handwritten signatures? Explain.\n</li><br><b>Bonus Questions (may require additional reading):</b><br>\n<li>Create your own encryption and decryption. Be prepared to share your creation with classmates.\n</li>\n</ol>\n", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 107, "duration": "", "notes": "https://docs.google.com/document/d/1iLQ2fYUNt7QFu0Ym7FZZPoaR7QasJHybubaBON5DXc8/edit?usp=sharing", "properties": {}, "activity_listed": true}, {"scored": false, "now_available": true, "title": "Socially Aware App: Broadcast Hub Tutorial", "has_activity": false, "objectives": "<h2>Preview</h2>\n<table><tbody><tr><td>\n<iframe src=\"//www.youtube-nocookie.com/embed/8hGirBMNo-4\" allowfullscreen=\"\" frameborder=\"0\" height=\"380\" width=\"350\"></iframe>\n(<a target=\"_blank\" href=\"http://www.teachertube.com/video/359112\">\nTeacher Tube version</a>)\n\n<br></td><td>\n<b><i>BroadcastHub</i></b> This tutorial uses the App Inventor Texting Component to receive and send text messages to a list of registered members. The device running the app is the hub.&nbsp;Other devices can text \"joinhub\" to the hub to become a member. Messages sent to the hub by registered members are distributed to all the members.&nbsp;This version is a variation of the <a href=\"http://beta.appinventor.mit.edu/learn/tutorials/broadcasterhub/broadcasterhub.html\" style=\"text-decoration:none;\"><span style=\"font-family: Arial; color: rgb(17, 85, 204); vertical-align: baseline; white-space: pre-wrap;\">MIT tutorial</span></a><span style=\"font-family: Arial; color: rgb(51, 51, 51); vertical-align: baseline; white-space: pre-wrap;\">. &nbsp;It assumes that you know how to set up your device for using the </span><a href=\"http://appinventor.mit.edu/explore/content/google-voice.html\" style=\"text-decoration:none;\"><span style=\"font-family: Arial; color: rgb(17, 85, 204); vertical-align: baseline; white-space: pre-wrap;\">Texting component over Wifi</span></a><span style=\"font-family: Arial; color: rgb(51, 51, 51); vertical-align: baseline; white-space: pre-wrap;\"> (i.e., for devices with no Sim card or mobile service plan). &nbsp;The lesson includes several programming exercises that add enhancements to the basic app.\n\n<p>\n<b>Objectives:</b> In this lesson you will learn to :\n</p><ul><li>create an app that<ul><li>uses the Texting component and Google Voice to create a hub for group SMS messages,\n</li><li>follows a complex <i>if-else</i> algorithm for processing incoming texts;</li></ul></li><li>gain additional experience using procedures to organize an app.</li></ul>\n</span></td></tr></tbody></table>\n\n<h2>Building the BroadcastHub app</h2>\n<p>To get started open <a href=\"http://ai2.appinventor.mit.edu/?repo=templates.appinventor.mit.edu/trincoll/csp/unit7/templates/BroadcastHub/BroadcastHubTemplate.asc\" target=\"blank\">App Inventor with the BroadcastHub Template</a>&nbsp;<u>i</u>n a separate tab and follow along with these tutorials.&nbsp;<br>\n<br>You can either click on the thumbnails to view the video or \n<a target=\"_blank\" href=\"https://docs.google.com/document/d/1Kl03xcvO15R8I25wQmOXdJfvvHKVnNt1onvz3YbGKnc/edit\">\nclick here</a> to read the tutorial.\n\n\n</p>\n<table><tbody><tr><td>\n<a target=\"_blank\" href=\"https://www.youtube.com/watch?v=LdoJUouVWjw\">\n<iframe src=\"//www.youtube-nocookie.com/embed/nSZy0yK7F-M?rel=0\" allowfullscreen=\"\" frameborder=\"0\" height=\"200\" width=\"250\">\n\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;nbsp;&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;\n\n</iframe></a></td>\n<td>\n<a target=\"_blank\" href=\"https://www.youtube-nocookie.com/embed/YGaqFGICRc0?rel=0\">\n<iframe src=\"//www.youtube-nocookie.com/embed/YGaqFGICRc0?rel=0\" allowfullscreen=\"\" frameborder=\"0\" height=\"200\" width=\"250\"></iframe>\n</a>\n</td>\n</tr>\n</tbody></table>\n<p><br></p>\n\n<h2>Enhancements: Creative Projects</h2>\n<p>Here are some ideas for programming projects.</p>\n<ul>\n<li><b>Abstraction:</b> Break the if-else code into more easily readable chunks by defining and using procedures with parameters.\n</li>\n<li> Modify the distributeTheMessage procedure so that it doesn\u2019t distribute the message back to the sender of the message. HINT: You\u2019ll need an if-else block for this. \n</li>\n<li>Add a Clock component to the app so that you can display a timestamp when a message is received. The Clock component contains methods that enable you to get the current time (Clock.Now) and format it into a date and time.\n</li>\n<li>Add a TextToSpeech component so that the new members can be \u2018announced\u2019 to the user when a \u2018joinhub\u2019 message is received.\n</li>\n<li><b>Persistence:</b> Add a TinyDb so that the members of the hub can persist from one use of the app to another. \n</li>\n<li><b>Longer-term (Advanced) Project:</b>  Come up with your own variations of this app. For example, one variation might be to extend the app to have multiple hubs -- family, friends, etc.  And, allow members to tag their messages with certain prefixes to indicate which distribution list should receive the message -- e.g. \u201cfamily: The picnic is at 1 PM\u2019\n</li>\n\n</ul>\n\n\n\n<h2>Questions</h2><question instanceid=\"gbaXNn3t2aI7\" weight=\"1\" quid=\"6541603451699200\"></question><question instanceid=\"apZiSwWhBKxC\" weight=\"1\" quid=\"5959747320676352\"></question><question instanceid=\"p6l9Jl6gXmrs\" weight=\"1\" quid=\"6285036869386240\"></question><question instanceid=\"ezIVe628go7o\" weight=\"1\" quid=\"5941684030406656\"></question><br>\n<br>\n\n\n<h2>Reflection: For Your Portfolio</h2>\nCreate a new page named \n<i><b>Broadcast Hub</b></i> under the <i>Reflections</i> category of your \nportfolio and write brief answers to the following questions:\n\n<ol>\n<li>How is the For Each loop used in this app? What is the significance of this loop? \n</li>\n\n<li>Besides Texting and the For Each loop, what programming concept plays a significant role in the functionality of this app? Explain.\n</li>\n</ol>", "unit_id": 25, "activity_title": "", "video": "", "lesson_id": 111, "duration": "", "notes": "https://docs.google.com/document/d/1Kl03xcvO15R8I25wQmOXdJfvvHKVnNt1onvz3YbGKnc", "properties": {}, "activity_listed": true}], "next_id": 126, "version": "1.3"}