{

"quiz_initialize_variable" :{"Name":"quiz_initialize_variable","DisplayName":"Statements: Initialize a Global Variable","Description":"<a href=\"http://www.youtube.com/watch?v=TvTx-6C2Q6U\" target=\"_blank\">How to initialize a global variable</a>","QuestionHTML":"Define (initialize) a global variable named <font color=\"red\"> $#STR1#$</font> and give it an initial value of <font color=\"red\">-91.9</font>. \n ","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You will need an <i>initialize</i> block from the <i>Variables</i> drawer.", "You will also need a <i>number</b> block from the <i>Math</i> drawer.", "Pseudocode: Initialize global $#STR1#$ to -91.9"],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{"1":"189","STR1":"dotsize"},"FunctionName":"","FunctionDef":"var global_$#STR1#$;\nglobal_$#STR1#$ = -91.9;\n","FunctionInputs":"undefined","XmlDictionary":{"1":"10...200","STR1":["score","total","X","Y","dotsize"]},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"87\" y=\"27\"><field name=\"NAME\">$#STR1#$</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">-91.9</field></block></value></block></xml>"},

"quiz_statements" :{"Name":"quiz_statements","DisplayName":"Statements: Increment by 1 Statement","Description":"<a href=\"http://www.youtube.com/watch?v=Odw-potCwrM\" target=\"_blank\">How to increment a variable</a>","QuestionHTML":"Write a setter statement that adds 1 to the global variable <i>Z</i>. ","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["The <i>setter</i> block is in the <i>Variables</i> drawer.", "You will also need a <i>getter</i> block in the <i>Variables</i> drawer.", "Create an expression block for <i>Z + 1</i> and plug it into the <i>set global Z</i> block.", "Pseudocode: Set Z to Z + 1"],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_Z;\n\n\nglobal_Z = 1;\n\nglobal_Z = global_Z + 1;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"53\" y=\"3\"><field name=\"NAME\">Z</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"53\" y=\"3\"><field name=\"NAME\">Z</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"56\" y=\"48\"><field name=\"VAR\">global Z</field><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><field name=\"VAR\">global Z</field></block></value><value name=\"NUM1\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block></value></block></xml>"},

"quiz_incrementing" :{"Name":"quiz_incrementing","DisplayName":"Statements: Add a number to a Global","Description":"<a href=\"http://www.youtube.com/watch?v=JDA4WKajIC0&feature=youtube_gdata\" target=\"_blank\">How to add a number to a global variable</a>","QuestionHTML":"Use a setter to increment global <i>Z</i> by -91.9.\n ","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["The <i>setter</i> block is in the <i>Variables</i> drawer.", "You will also need a <i>getter</i> block in the <i>Variables</i> drawer.", "Create an expression block for <i>Z + -91.9</i> and plug it into the <i>set global Z</i> block.", "Pseudocode: Set Z to Z + -91.9"],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{"1":"9"},"FunctionName":"","FunctionDef":"var global_Z;\n\n\nglobal_Z = 10;\n\nglobal_Z = global_Z + -91.9;\n","FunctionInputs":"undefined","XmlDictionary":{"1":"1...20"},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"1\" y=\"-1\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">10</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"1\" y=\"-1\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">10</title></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"252\" y=\"169\"><title name=\"VAR\">global Z</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global Z</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">-91.9</title></block></value></block></value></block></xml>"},

"quiz_double_variable" :{"Name":"quiz_double_variable","DisplayName":"Statements: Double a Variable","Description":"<a href=\"http://www.youtube.com/watch?v=vGWBVFlnsYA&feature=youtube_gdata\" target=\"_blank\">How to double a global variable</a>.","QuestionHTML":"Construct a block to double the value of $#STR1#$, which has initial value -91.9.","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need a setter block in the <i>Variables</i> drawer.","You'll need a math block in the <i>Math</i> drawer.","To double a variable, ether multiply it times 2 or add it to itself and assign the result back to the variable using the setter.", "Pseudocode: Set $#STR1#$ to $#STR1#$ * 2"],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer"],"Components":[],"VariableMappings":{"1":"172","STR1":"C"},"FunctionName":"","FunctionDef":"var global_$#STR1#$;\nglobal_$#STR1#$ = -91.9;\nglobal_$#STR1#$ = global_$#STR1#$ * 2;\n","FunctionInputs":"undefined","XmlDictionary":{"1":"100...200","STR1":["A","B","C"]},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"36\" y=\"-1\"><field name=\"NAME\">$#STR1#$</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">-91.9</field></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"36\" y=\"-1\"><field name=\"NAME\">$#STR1#$</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">-91.9</field></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"40\" y=\"49\"><field name=\"VAR\">global $#STR1#$</field><value name=\"VALUE\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><field name=\"VAR\">global $#STR1#$</field></block></value><value name=\"NUM1\"><block type=\"math_number\"><field name=\"NUM\">2</field></block></value></block></value></block></xml>"},

"quiz_random_number" :{"Name":"quiz_random_number","DisplayName":"Statements: Random Integer","Description":"Uses the random function.","QuestionHTML":"Assign a random number between -91.9 and -92.9 to the global variable $#STR1#$.  ","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Use the <font color=\"red\">random_integer_from_to</font> block in the Math drawer."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","mutator_container", "math_mutator_item", "math_number","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{"1":"-10","2":"160","STR1":"B"},"FunctionName":"","FunctionDef":"var global_$#STR1#$;\nfunction math_random_int(a, b) {\n  if (a > b) {\n    // Swap a and b to ensure a is smaller.\n    var c = a;\n    a = b;\n    b = c;\n  }\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\nglobal_$#STR1#$ = 0;\nglobal_$#STR1#$ = math_random_int(-91.9, -92.9);\n","FunctionInputs":"undefined","XmlDictionary":{"1":"-10...10","2":"100...200","STR1":["A","B","C","X","Y","Z"]},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"95\" y=\"-7\"><field name=\"NAME\">$#STR1#$</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">0</field></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"95\" y=\"-7\"><field name=\"NAME\">$#STR1#$</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">0</field></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"94\" y=\"39\"><field name=\"VAR\">global $#STR1#$</field><value name=\"VALUE\"><block type=\"math_random_int\" inline=\"true\"><value name=\"FROM\"><block type=\"math_number\"><field name=\"NUM\">-91.9</field></block></value><value name=\"TO\"><block type=\"math_number\"><field name=\"NUM\">-92.9</field></block></value></block></value></block></xml>"},

"quiz_initialize" :{"Name":"quiz_initialize","DisplayName":"Statements: Assignment Sequence","Description":"Sequence of assignment statements.","QuestionHTML":"Create a sequence of setter statements that sets the values of all global variables to 0.\n ","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You will need a <i>setter</i> block for each global variable. These are in the  <i>Variables</i> drawer.", "Each block should just set the global variable's value to 0.", "Pseudocode: Set X to 0\nSet Y to 0"],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_X;\nvar global_Y;\n\n\nglobal_X = 10;\n\nglobal_Y = 20;\n\nglobal_X = 0;\nglobal_Y = 0;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"40\" y=\"14\"><field name=\"NAME\">X</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">10</field></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"44\" y=\"54\"><field name=\"NAME\">Y</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">20</field></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"40\" y=\"14\"><field name=\"NAME\">X</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">10</field></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"44\" y=\"54\"><field name=\"NAME\">Y</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">20</field></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"76\" y=\"109\"><field name=\"VAR\">global X</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value><next><block type=\"lexical_variable_set\" inline=\"false\"><field name=\"VAR\">global Y</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block></next></block></xml>"},

"quiz_background_color" :{"Name":"quiz_background_color","DisplayName":"Statements: Set Button BackgroundColor Property","Description":"Use a setter block to set the button's background color.","QuestionHTML":"Complete the block shown here so that it sets <i>Button1's</i> BackgroundColor to <font color=\"red\">red</font>.\n ","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Color blocks are in the <i>Colors</i> drawer."],"BuiltIns":["color_black","color_white","color_red","color_pink","color_orange","color_yellow","color_green","color_cyan","color_blue","color_magenta","color_light_gray","color_gray","color_dark_gray","color_make_color","color_split_color","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_Button1BackgroundColor;\nglobal_Button1BackgroundColor = -65536;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"component_set_get\" inline=\"false\" x=\"72\" y=\"27\"><mutation set_or_get=\"set\" component_type=\"Button\" instance_name=\"Button1\" property_name=\"BackgroundColor\" is_generic=\"false\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><field name=\"PROP\">BackgroundColor</field></block></xml>","Xmlsolution":"<xml><block type=\"component_set_get\" inline=\"false\" x=\"56\" y=\"13\"><mutation set_or_get=\"set\" component_type=\"Button\" instance_name=\"Button1\" property_name=\"BackgroundColor\" is_generic=\"false\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><field name=\"PROP\">BackgroundColor</field><value name=\"VALUE\"><block type=\"color_red\"><field name=\"COLOR\">#ff0000</field></block></value></block></xml>"},

"quiz_set_line_width" :{"Name":"quiz_set_line_width","DisplayName":"Statements: Set Canvas LineWidth Property","Description":"Set the value of the Canvas's line width to five times the current dotsize, where dotsize is a global.","QuestionHTML":"Given the global variable, <i>dotsize</i>, set the Canvas’s <i>LineWidth</i> to five times the dotsize.","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You can find the setter for LineWidth in the Canvas drawer.","Use the multiplication operator in the Math drawer.","You'll also need the getter block in the Variables drawer.",""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Canvas1","Canvas"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_dotSize;\nglobal_dotSize = 2;\nvar global_Canvas1LineWidth;\nglobal_Canvas1LineWidth = global_dotSize * 5;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"124\" y=\"9\"><title name=\"NAME\">dotSize</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"117\" y=\"11\"><title name=\"NAME\">dotSize</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block><block type=\"Canvas1_setproperty\" inline=\"false\" x=\"117\" y=\"66\"><mutation yailtype=\"number\"></mutation><title name=\"COMPONENT_SELECTOR\">Canvas1</title><title name=\"PROP\">LineWidth</title><value name=\"VALUE\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global dotSize</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">5</title></block></value></block></value></block></xml>"},

"quiz_text_color" :{"Name":"quiz_text_color","DisplayName":"Statements: Set Button TextColor Property","Description":"Use a setter block to set a button's Text color property.","QuestionHTML":"Use a <i>setter block</i> to set Button1's <font color=\"red\">TextColor</font> property to <font color=\"magenta\">magenta</font>.\n ","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You will need to drag Button1's setter block from the <i>Button</i> drawer to the workspace.","You will also need to select the <i>TextColor</i> property from the block's property mutator."],"BuiltIns":["color_black","color_white","color_red","color_pink","color_orange","color_yellow","color_green","color_cyan","color_blue","color_magenta","color_light_gray","color_gray","color_dark_gray","color_make_color","color_split_color","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_Button1TextColor;\nglobal_Button1TextColor = -65281;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"Button1_setproperty\" inline=\"false\" x=\"74\" y=\"39\"><mutation yailtype=\"number\"></mutation><title name=\"COMPONENT_SELECTOR\">Button1</title><title name=\"PROP\">TextColor</title><value name=\"VALUE\"><block type=\"color_magenta\"><title name=\"COLOR\">#ff00ff</title></block></value></block></xml>"},

"quiz_simple_if_else" :{"Name":"quiz_simple_if_else","DisplayName":"Statements: Set Global in If/Else","Description":"<a href=\"http://www.youtube.com/watch?v=VrzzXpJW8co&feature=youtube_gdata\" target=\"_blank\">How to conditionally set a  variable</a>.","QuestionHTML":"Construct an if-else statement that adds 1 to the variable X if variable Y is greater than 0 and otherwise subtracts 1.","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["For the <i>if-slot</i> you'll need a <i>greater-than</i> block from the Math drawer.","For the <i>do-slot</i> you'll need to construct a statement that adds 1 to X.","For the <i>else-slot</i> you'll need to construct a statement that substracts 1 from X."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container", "math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_X;\nvar global_Y;\nglobal_X = 0;\nglobal_Y = 0;\nif (global_Y > global_Y) {\n  global_X = global_X + 1;\n} else {\n  global_X = global_X - 1;\n}","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"200\" y=\"1\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"204\" y=\"39\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"controls_if\" inline=\"false\" x=\"212\" y=\"85\"><mutation else=\"1\"></mutation></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"200\" y=\"1\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"204\" y=\"39\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"controls_if\" inline=\"false\" x=\"202\" y=\"85\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"math_compare\" inline=\"true\"><title name=\"OP\">GT</title><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global Y</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></value><statement name=\"DO0\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global X</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></statement><statement name=\"ELSE\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global X</title><value name=\"VALUE\"><block type=\"math_subtract\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></statement></block></xml>"},

"quiz_if_x_greater_than_y" :{"Name":"quiz_if_x_greater_than_y","DisplayName":"Statements: Use If/Else to Set a Label","Description":"Construct a simple if/else statement","QuestionHTML":"Construct an if/else block that expresses the following statement: If the variable X is greater than the variable Y, then the word \"Greater\" should be assigned to Label1. Otherwise \"Lesser\" should be assigned. (Spelling counts.)","AnswerHTML":"","AnswerType":"eval_stmt","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Values such as \"Greater\" are Text objects in the Text drawer.","The greater-than block is in the Math drawer.",""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","text","text_join","text_length","text_isEmpty","text_trim","text_changeCase","controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Label1","Label"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"var global_X;\nvar global_Y;\nglobal_X = 100;\nglobal_Y = 100;\nvar global_Label1Text;\nglobal_Label1Text=0;\nif (global_X > global_Y) {\n global_Label1Text = 'Greater';\n} else {\n global_Label1Text = 'Lesser';\n}","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"108\" y=\"3\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">100</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"333\" y=\"4\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">100</title></block></value></block></xml>","Xmlsolution":""},

"quiz_eval_arithmetic" :{"Name":"quiz_eval_arithmetic","DisplayName":"Expressions: Evaluate Simple Arithmetic Expression","Description":"Describe the quiz problem.","QuestionHTML":"Evaluate the expression and type your answer into the text box.","AnswerHTML":"","AnswerType":"eval_expr","AnswerVisibility":"visible","ResultHTML":"","Hints":["If the expression is too hard to do in your head, feel free to use a calculator.", "To skip the problem, just hit the 'Submit' button. You'll be given the correct answer."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"function xmlGenerator(xml,low, high, op){var ops = ['ADD', 'MINUS', 'MULTIPLY', 'DIVIDE', 'POWER'];var name1=''; var name2=''; var type = '';if (!op){op = ops[Math.floor(Math.random() * ops.length)];if (op == 'ADD'){name1='NUM0'; name2='NUM1'; type = 'math_add';}else if (op == 'MINUS'){name1='A';name2='B';type = 'math_subtract';} else if (op == 'MULTIPLY'){name1='NUM0';name2='NUM1';type = 'math_multiply'; } else if (op == 'DIVIDE') {name1='A';name2='B';type = 'math_division';} else {type = 'math_power';name1='A';name2='B';}}var n1 = Math.floor(Math.random() * 10);var n2 = Math.floor(Math.random() * 10);if (low && high) {n1 = low + Math.floor(Math.random() * (high - low + 1));n2 = low + Math.floor(Math.random() * (high - low + 1));}if (op == 'DIVIDE' && n2 == 0) {n2 = 1;}if (op == 'DIVIDE') {var factor = Math.floor(Math.random() * 5);n1 = n2 * factor;}if (op == 'POWER' && n2 > 3) {n2 = 3;}xml = xml.replace('$type', type);xml = xml.replace('$arg1', n1);xml = xml.replace('$arg2', n2);xml=xml.replace('$name1',name1);xml=xml.replace('$name2',name2);return xml; }","Xmltemplate":"<xml><block type=\"$type\" inline=\"true\" x=\"85\" y=\"100\"><mutation items=\"2\"></mutation><value name=\"$name1\"><block type=\"math_number\"><title name=\"NUM\">$arg1</title></block></value><value name=\"$name2\"><block type=\"math_number\"><title name=\"NUM\">$arg2</title></block></value></block></xml>","Xmlsolution":""},

"quiz_eval_relations" :{"Name":"quiz_eval_relations","DisplayName":"Expressions: Evaluate Simple Relational Expression","Description":"Describe the quiz problem.","QuestionHTML":"Evaluate the expression as <b>true</b> or <b>false</b> and type your answer into the text box.","AnswerHTML":"","AnswerType":"eval_expr","AnswerVisibility":"visible","ResultHTML":"","Hints":["You can skip the problem by hitting the 'Submit' button.  The correct answer will be displayed."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"function xmlGenerator(xml, low, high, op) {var ops = ['EQ', 'NEQ', 'LT', 'LTE', 'GT', 'GTE'];   if (!op) { op = ops[Math.floor(Math.random() * ops.length)]; } var n1 = Math.floor(Math.random() * 10); var n2 = Math.floor(Math.random() * 10); if (low && high) { n1 = low + Math.floor(Math.random() * (high - low + 1)); n2 = low + Math.floor(Math.random() * (high - low + 1)); } xml = xml.replace('$OP', op); xml = xml.replace('$N1', n1); xml = xml.replace('$N2', n2); return xml; }","Xmltemplate":"<xml><block type=\"math_compare\"><title name=\"OP\" >$OP</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">$N1</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">$N2</title></block></value></block></xml>","Xmlsolution":""},

"quiz_simple_relations_fillin" :{"Name":"quiz_simple_relations_fillin","DisplayName":"Expressions: Complete a Relational Expression","Description":"Simple binary relational fill in the block questions.","QuestionHTML":"Complete the expression in any way you wish so that the resulting expression is true.","AnswerHTML":"","AnswerType":"eval_expr_fillin","AnswerVisibility":"hidden","ResultHTML":"","Hints":[""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"function xmlGenerator(xml, low, high, op) {var ops = ['EQ', 'NEQ', 'LT', 'LTE', 'GT', 'GTE']; if (!op) { op = ops[Math.floor(Math.random() * ops.length)]; } var n1 = Math.floor(Math.random() * 10); var n2 = Math.floor(Math.random() * 10); if (low && high) { n1 = low + Math.floor(Math.random() * (high - low + 1)); n2 = low + Math.floor(Math.random() * (high - low + 1)); } xml = xml.replace('$OP', op); xml = xml.replace('$N1', n1); xml = xml.replace('$N2', n2); return xml; }","Xmltemplate":"<xml><block type=\"math_compare\"><title name=\"OP\">$OP</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">$N1</title></block></value></block><block type=\"math_number\" x=\"85\" y=\"55\"><title name=\"NUM\">$N2</title></block></xml>","Xmlsolution":""},

"quiz_stop_player_if_playing" :{"Name":"quiz_stop_player_if_playing","DisplayName":"Control: Stop Player if Playing","Description":"Simple if-else to start and stop the Player","QuestionHTML":"Complete this <i>Button.Click</i> event handler so that it will <b><i>stop</i></b> the Player if it is already playing. Otherwise it will <b><i>start</i></b> the Player.\n ","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need the appropriate purple blocks from the <i>Player</i> drawer.","Think about what action to \"do\" when the Player is playing.","Think about what action to \"do\" when the Player is <b>not</b> playing."],"BuiltIns":["controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Player1","Player"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"133\" y=\"15\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"controls_if\" inline=\"false\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"component_set_get\"><mutation set_or_get=\"get\" component_type=\"Player\" instance_name=\"Player1\" property_name=\"IsPlaying\" is_generic=\"false\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field><field name=\"PROP\">IsPlaying</field></block></value></block></statement></block></xml>","Xmlsolution":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"132\" y=\"26\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"controls_if\" inline=\"false\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"component_set_get\"><mutation component_type=\"Player\" set_or_get=\"get\" property_name=\"IsPlaying\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field><field name=\"PROP\">IsPlaying</field></block></value><statement name=\"DO0\"><block type=\"component_method\"><mutation component_type=\"Player\" method_name=\"Stop\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field></block></statement><statement name=\"ELSE\"><block type=\"component_method\"><mutation component_type=\"Player\" method_name=\"Start\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field></block></statement></block></statement></block></xml>"},

"quiz_if_else_stop_start_player" :{"Name":"quiz_if_else_stop_start_player","DisplayName":"Control: If Else Stop Start Player","Description":"Construct an if/else block to start and stop the Player depending on whether it's already playing","QuestionHTML":"Complete the <i>Button1.Click</i> event. It should <b><i>pause</i></b> the Player if it is already playing. Otherwise it should <i><b>start</b></i> the Player.","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need an <i>if</i> block in the <i>Control</i> drawer.","Use the <i>mutator</i> on the <i>if block</i> to add an <i><b>else</b></i> slot.","Use the <i>drop-down widget</i> on the <i>Player1.isLooping</i> block to select the <i>Player1.isPlaying</i> property.","You'll need the appropriate purple blocks from the <i>Player</i> drawer."],"BuiltIns":["controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Player1","Player"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"133\" y=\"15\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><title name=\"COMPONENT_SELECTOR\">Button1</title></block></xml>","Xmlsolution":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"132\" y=\"26\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"controls_if\" inline=\"false\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"component_set_get\"><mutation component_type=\"Player\" set_or_get=\"get\" property_name=\"IsPlaying\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field><field name=\"PROP\">IsPlaying</field></block></value><statement name=\"DO0\"><block type=\"component_method\"><mutation component_type=\"Player\" method_name=\"Pause\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field></block></statement><statement name=\"ELSE\"><block type=\"component_method\"><mutation component_type=\"Player\" method_name=\"Start\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field></block></statement></block></statement></block></xml>"},

"quiz_concat" :{"Name":"quiz_concat","DisplayName":"Procedures: Concatenate String Parameters","Description":"Procedure to concat a string.","QuestionHTML":"Write a procedure named <i>concat</i> that takes a string parameter, concatenates its parameter to itself and assigns the result to the global variable Z.\n ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":[""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","text","text_join","text_length","text_isEmpty","text_trim","text_changeCase","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"concat(str)","FunctionDef":"var x;\nvar global_Z;\n\nfunction concat(x) {\n global_Z = String(x) + String(x);\n}\n\n\nglobal_Z = 'hi';\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"28\" y=\"2\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"text\"><title name=\"TEXT\">hi</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"28\" y=\"2\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"text\"><title name=\"TEXT\">hi</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"35\" y=\"47\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">concat</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global Z</title><value name=\"VALUE\"><block type=\"text_join\" inline=\"false\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"ADD1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value></block></value></block></statement></block></xml>"},

"quiz_proc_two_params" :{"Name":"quiz_proc_two_params","DisplayName":"Procedures: Multiply Numeric Parameters","Description":"Define a procedure with two parameters.","QuestionHTML":"Define a procedure named <i>procTwoParams</i> that multiplies its two parameters and assigns the result to the global variable Z. ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":[""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"procTwoParams(num,num)","FunctionDef":"var x;\nvar y;\nvar global_Z;\n\nfunction procTwoParams(x, y) {\n global_Z = x * y;\n}\n\n\nglobal_Z = 1;\n","FunctionInputs":[],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"28\" y=\"14\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"28\" y=\"14\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"274\" y=\"22\"><mutation><arg name=\"x\"></arg><arg name=\"y\"></arg></mutation><title name=\"NAME\">procTwoParams</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global Z</title><value name=\"VALUE\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">y</title></block></value></block></value></block></statement></block></xml>"},

"quiz_procedure_with_parameter" :{"Name":"quiz_procedure_with_parameter","DisplayName":"Procedures: Define increment() to Increment a Global by Parameter","Description":"Define a procedure that has a parameter","QuestionHTML":"Define a procedure called <i>increment(X)</i> that adds X to the global variable Z. ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Use the <i>to-procedure</i> block in the Procedures drawer.", "In the do slot, you will need to construct a statement that adds 1 to the variable X."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"increment(num)","FunctionDef":"var x;\nvar global_Z;\n\nfunction increment(x) {\n global_Z = global_Z + x;\n}\n\n\nglobal_Z = 1;\n","FunctionInputs":[],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"89\" y=\"-1\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"89\" y=\"-1\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"95\" y=\"42\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">increment</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global Z</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global Z</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value></block></value></block></statement></block></xml>"},

"quiz_proc_call_sum" :{"Name":"quiz_proc_call_sum","DisplayName":"Procedures: Define a Procedure that Calls a Procedure","Description":"Define a procedure that calls a function","QuestionHTML":"Given the function <i>sum</i> and global variables X, Y, and Z, define a procedure named <i>add</i> that calls sum to compute the sum of X and Y and assigns the result to Z. ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":[""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"add()","FunctionDef":"var a;\nvar b;\nvar global_Z;\nvar global_X;\nvar global_Y;\n\nfunction sum(a, b) {\n return a + b;\n}\n\nfunction add() {\n global_Z = sum(global_X, global_Y);\n}\n\n\nglobal_X = 1;\n\nglobal_Y = 1;\n\nglobal_Z = 0;\n","FunctionInputs":[],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"292\" y=\"-8\"><mutation><arg name=\"a\"></arg><arg name=\"b\"></arg></mutation><field name=\"NAME\">sum</field><value name=\"RETURN\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><field name=\"VAR\">a</field></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><field name=\"VAR\">b</field></block></value></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"1\" y=\"-1\"><field name=\"NAME\">X</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"16\" y=\"29\"><field name=\"NAME\">Y</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"31\" y=\"59\"><field name=\"NAME\">Z</field><value name=\"VALUE\"><block type=\"math_number\"><field name=\"NUM\">0</field></block></value></block></xml>","Xmlsolution":""},

"quiz_add_globals" :{"Name":"quiz_add_globals","DisplayName":"Procedures: Define add() To Compute the Sum of Two Globals","Description":"Procedure to add two globals","QuestionHTML":"Given the global variables X, Y, and Z, define a procedure named <i>add</i> that computes the sum of X and Y and stores the result in Z.\n ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":[""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"add()","FunctionDef":"var global_Z;\nvar global_X;\nvar global_Y;\n\nfunction add() {\n global_Z = global_X + global_Y;\n}\n\n\nglobal_X = 1;\n\nglobal_Y = 1;\n\nglobal_Z = 1;\n","FunctionInputs":[],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"99\" y=\"0\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"97\" y=\"36\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"98\" y=\"72\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"99\" y=\"0\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"319\" y=\"0\"><mutation></mutation><title name=\"NAME\">add</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global Z</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global Y</title></block></value></block></value></block></statement></block><block type=\"global_declaration\" inline=\"false\" x=\"97\" y=\"36\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"98\" y=\"72\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></xml>"},

"quiz_proc_double" :{"Name":"quiz_proc_double","DisplayName":"Procedures: Define double() to double a Global Variable","Description":"A procedure that doubles a global.","QuestionHTML":"Define a procedure named <i>double</i> that doubles the global variable X.","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You will need a <i>to-procedure-return</i> block in the Procedures drawer.", "Place an expression that doubles the value of the parameter into the <i>return</i> slot."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"double()","FunctionDef":"var global_X;\n\nfunction double() {\n global_X = global_X * 2;\n}\n\n\nglobal_X = 1;\n","FunctionInputs":[],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"121\" y=\"9\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"121\" y=\"9\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"119\" y=\"59\"><mutation></mutation><title name=\"NAME\">proc</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global X</title><value name=\"VALUE\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></statement></block></xml>"},

"quiz_procedure_bug" :{"Name":"quiz_procedure_bug","DisplayName":"Procedures: Fix a Bug in updateScore() Procedure","Description":"Fix the bug in the procedure.","QuestionHTML":"The <i>updateScore</i> procedure contains a <font color=\"red\">bug</font>. It's supposed to calculate the hit rate and then display the hit rate in <i>Label1</i>. Find and fix the bug.\n ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Think about the order of the statements."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Label1","Label"]],"VariableMappings":{},"FunctionName":"updateScore()","FunctionDef":"var global_hitRate;\nvar global_hits;\nvar global_misses;\nvar global_Label1Text;\nglobal_Label1Text='';\nfunction calculateHitRate() {\n  global_hitRate = global_hits / (global_hits + global_misses);\n}\nfunction updateScore() {\n  calculateHitRate();\n  global_Label1Text = global_hitRate;\n}\nglobal_hitRate = 0;\nglobal_hits = 0;\nglobal_misses = 0;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"40\" y=\"-3\"><title name=\"NAME\">hitRate</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"39\" y=\"33\"><title name=\"NAME\">hits</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"39\" y=\"68\"><title name=\"NAME\">misses</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"40\" y=\"105\"><mutation></mutation><title name=\"NAME\">calculateHitRate</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global hitRate</title><value name=\"VALUE\"><block type=\"math_division\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global hits</title></block></value><value name=\"B\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global hits</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global misses</title></block></value></block></value></block></value></block></statement></block><block type=\"procedures_defnoreturn\" x=\"42\" y=\"201\"><mutation></mutation><title name=\"NAME\">updateScore</title><statement name=\"STACK\"><block type=\"component_set_get\"><mutation component_type=\"Label\" set_or_get=\"set\" property_name=\"Text\" is_generic=\"false\" instance_name=\"Label1\"></mutation><title name=\"COMPONENT_SELECTOR\">Label1</title><title name=\"PROP\">Text</title><value name=\"VALUE\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global hitRate</title></block></value><next><block type=\"procedures_callnoreturn\"><mutation name=\"calculateHitRate\"></mutation><title name=\"PROCNAME\">calculateHitRate</title></block></next></block></statement></block></xml>","Xmlsolution":""},

"quiz_calculate_hit_rate" :{"Name":"quiz_calculate_hit_rate","DisplayName":"Procedures: Define Procedure to Calculate Hit Rate","Description":"Calculates hitrate = hits / (hits + misses)","QuestionHTML":"Using the pre-defined global variables, define a procedure named <font color=\"red\">calculateHitRate</font> that calculates the player's <i>hit percentage</i>, which is defined as: hitRate = hits / (hits + misses). \n ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need the <i>procedure do</i> block in the Procedures drawer.", "Your procedure should <i>set the value</i> of the global <i>hitRate</i> variable.", "Build your math expression using blocks in the Math drawer"],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"calculateHitRate()","FunctionDef":"var global_hitRate;\nvar global_hits;\nvar global_misses;\nglobal_hits = 0;\nglobal_misses = 0;\nglobal_hitRate = 0;\n\nfunction calculateHitRate() {\n  global_hitRate = global_hits / (global_hits + global_misses);\n}\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"63\" y=\"-9\"><title name=\"NAME\">hits</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"61\" y=\"29\"><title name=\"NAME\">misses</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"65\" y=\"76\"><title name=\"NAME\">hitRate</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"63\" y=\"-9\"><title name=\"NAME\">hits</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"64\" y=\"28\"><title name=\"NAME\">misses</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"62\" y=\"72\"><title name=\"NAME\">hitRate</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"62\" y=\"118\"><mutation></mutation><title name=\"NAME\">calculateHitRate</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global hitRate</title><value name=\"VALUE\"><block type=\"math_division\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global hits</title></block></value><value name=\"B\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global hits</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global misses</title></block></value></block></value></block></value></block></statement></block></xml>"},

"quiz_reset_score" :{"Name":"quiz_reset_score","DisplayName":"Procedures: Define resetScore() to Set Score to 0","Description":"Given a global variable, score, define a procedure, resetScore() that sets the global to 0.","QuestionHTML":"Define a procedure named <font color=\"red\">resetScore</font> that sets the global variable <font color=\"red\">score</font> to 0.\n ","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["The procedure definition block is in the Procedures drawer.","You will need to use a <i>Setter</i> block in the Variables drawer.",""],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"resetScore()","FunctionDef":"var global_score;\n\nfunction resetScore() {\n  global_score = 0;\n}\n\nglobal_score = 0;\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"74\" y=\"6\"><title name=\"NAME\">score</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"74\" y=\"6\"><title name=\"NAME\">score</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"75\" y=\"51\"><mutation></mutation><title name=\"NAME\">score</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global score</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></statement></block></xml>"},

"quiz_hello_purr" :{"Name":"quiz_hello_purr","DisplayName":"Event Handler: When Button Click Vibrate","Description":"Add a Sound.Vibrate block to the Button.Click procedure.","QuestionHTML":"Update the blocks shown here so that when the button is clicked, the phone vibrates for 500 milliseconds (ms) after the sound is played.","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Look in the 'Sound' drawer for the Sound.Vibrate block.","You'll need a Number block from the Math drawer.","The open slot in the Sound.Vibrate block represents the duration of the vibration in milliseconds (thousandths of a second)."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container", "math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Sound1", "Sound"]],"VariableMappings":{},"FunctionName":"Button1Click()","FunctionDef":"","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"component_method\"><mutation component_type=\"Sound\" method_name=\"Play\" is_generic=\"false\" instance_name=\"Sound1\"></mutation><field name=\"COMPONENT_SELECTOR\">Sound1</field></block></statement></block></xml>","Xmlsolution":"<xml><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"component_method\"><mutation component_type=\"Sound\" method_name=\"Play\" is_generic=\"false\" instance_name=\"Sound1\"></mutation><field name=\"COMPONENT_SELECTOR\">Sound1</field><next><block type=\"component_method\" inline=\"false\"><mutation component_type=\"Sound\" method_name=\"Vibrate\" is_generic=\"false\" instance_name=\"Sound1\"></mutation><field name=\"COMPONENT_SELECTOR\">Sound1</field><value name=\"ARG0\"><block type=\"math_number\"><field name=\"NUM\">500</field></block></value></block></next></block></statement></block></xml>"},

"quiz_canvas_touched" :{"Name":"quiz_canvas_touched","DisplayName":"Event Handler: When Canvas Touched Set a Variable","Description":"Perform a procedure when the Canvas is touched.","QuestionHTML":"When the Canvas is touched, set the Canvas Height to the value of global variable <i>X</i>.","AnswerHTML":"","AnswerType":"proc_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need a CanvasTouched event handler for this problem.", "The setter for Canvas Height is in the <i>Canvas</i> drawer."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Canvas1","Canvas"]],"VariableMappings":{},"FunctionName":"Canvas1Touched()","FunctionDef":"var global_X;\nglobal_X = 1;\nvar global_Canvas1Height;\nglobal_Canvas1Height = 0;\nfunction Canvas1Touched(){\n global_Canvas1Height = global_X;\n}\n","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"83\" y=\"4\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">400</title></block></value></block></xml>"},

 "quiz_increment_variable" :   {
  "Name" : "quiz_increment_variable", 
  "DisplayName" : "Event Handler: When Button Clicked Increment Variable", 
  "ProblemType" : "variable_increment",
  "Description" : "Ask the user to code a variable increment operation when a Button is clicked.",
  "QuestionHTML" : "Complete the block so that it adds 1 to the variable 'X' when Button1 is clicked.",
  "AnswerHTML" : "",
  "AnswerType" : "proc_def",
  "AnswerVisibility" : "hidden",
  "ResultHTML" : "",
  "Hints" : ["Blocks for setting and getting variable values are in the 'Variables' drawer.", "You'll need to do an addition operation.", "Pseudocode: Set X to (get X) + 1"],
  "BuiltIns" : ["mutator_container", "math_mutator_item", "math_number", "math_compare", "math_add", "math_subtract", "math_division", "math_multiply", "math_power",
	       "global_declaration", "lexical_variable_get", "lexical_variable_set"],
  "Components" : [["Button1","Button"]],
  "FunctionName":"Button1Click()",
  "FunctionDef":"var global_X = 0;\nfunction Button1Click(){\n global_X = global_X + 1;\n}\n",
  "XmlDictionary":{},
  "Xmlgenerator" : "undefined",
  "Xmltemplate" : "<xml><block type=\"component_event\" x=\"85\" y=\"100\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation></block><block type=\"global_declaration\" inline=\"false\"  x=\"85\" y=\"50\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>",
  "Xmlsolution" : ""},

"quiz_pause_the_player" :{"Name":"quiz_pause_the_player","DisplayName":"Event Handler: Pause the Player","Description":"Pause the Player component when the button is clicked","QuestionHTML":"Complete the <i>Button1.Click</i> event handler so that it will <i><b>pause</b></i> the <i>Player</i> when the button is clicked.","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need the appropriate purple block from the <i>Player</i> drawer."],"BuiltIns":["controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Player1","Player"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field></block></xml>","Xmlsolution":"<xml><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"component_method\"><mutation component_type=\"Player\" method_name=\"Pause\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field></block></statement></block></xml>"},

"quiz_button_click_stop_player" :{"Name":"quiz_button_click_stop_player","DisplayName":"Event Handler: Button Click Stop Player","Description":"Stop the Player when the button is clicked.","QuestionHTML":"Put together all the blocks necessary to handle a button click event on <i>Button1</i>. When <i>Button1</i> is clicked, the app should <i><b>stop</b></i> the <i>Player</i> component.\n ","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need the <i>Button.Click</i> event handler in the <i>Button</i> drawer.","You'll need an appropriate purple block from the <i>Player</i> drawer. "],"BuiltIns":["controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Player1","Player"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"component_method\"><mutation component_type=\"Player\" method_name=\"Stop\" is_generic=\"false\" instance_name=\"Player1\"></mutation><field name=\"COMPONENT_SELECTOR\">Player1</field></block></statement></block></xml>"},

"quiz_pause_the_sound": {"Name":"quiz_pause_the_sound","DisplayName":"Event Handler: Pause the sound","Description":"Pause the sound when a button is clicked.","QuestionHTML":"Complete the <i>Button.Click</i> event handler so that it will <i><b>pause</b></i> the <i>Sound</i> component when it is clicked.\n","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["The <i>Sound</i> component is similar to the </i>Player</i> component.","Look for an appropriate <font color=\"purple\">purple block</font> in the <i>Sound</i> drawer."],"BuiltIns":["controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Sound1","Sound"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field></block></xml>","Xmlsolution":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"component_method\"><mutation component_type=\"Sound\" method_name=\"Pause\" is_generic=\"false\" instance_name=\"Sound1\"></mutation><field name=\"COMPONENT_SELECTOR\">Sound1</field></block></statement></block></xml>"},

"quiz_button_click_stop_sound" :{"Name":"quiz_button_click_stop_sound","DisplayName":"Event Handler: Button Click Stop Sound","Description":"A button click event handler that stops the sound component.","QuestionHTML":"Put together all the blocks necessary to handle a button click event on <i>Button1</i>. When <i>Button1</i> is clicked, the app should <i><b>stop</b></i> the <i>Sound</i> component.\n ","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["The <i>Sound</i> component is similar to the <i>Player</i> component.","You'll need the <i>Button.Click</i> event handler in the <i>Button</i> drawer.","You'll need an appropriate purple block from the <i>Sound</i> drawer. "],"BuiltIns":["mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[["Button1","Button"],["Sound1","Sound"]],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"component_event\" x=\"124\" y=\"6\"><mutation component_type=\"Button\" instance_name=\"Button1\" event_name=\"Click\"></mutation><field name=\"COMPONENT_SELECTOR\">Button1</field><statement name=\"DO\"><block type=\"component_method\"><mutation component_type=\"Sound\" method_name=\"Stop\" is_generic=\"false\" instance_name=\"Sound1\"></mutation><field name=\"COMPONENT_SELECTOR\">Sound1</field></block></statement></block></xml>"},

"quiz_trivial_function" :{"Name":"quiz_trivial_function","DisplayName":"Functions: f()=0","Description":"Trivial function definition.","QuestionHTML":"Define f() = 0. That is, define a function named <i>f</i> that takes no parameters and returns 0.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["This is a hint","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"f()","FunctionDef":"function f() {\n return 0;\n}","FunctionInputs":["0","0","0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"102\" y=\"4\"><mutation></mutation><title name=\"NAME\">procedure</title></block></xml>","Xmlsolution":""},

"quiz_null_function" :{"Name":"quiz_null_function","DisplayName":"Functions: f(x)=0","Description":"Trivial function definition.","QuestionHTML":"Define f(x) = 0. That is, define a function named <i>f</i> that takes 1 parameter and returns 0.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["This is a hint","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"f()","FunctionDef":"function f(x) {\n return 0;\n}","FunctionInputs":["1,0","2,0","3,0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_double_function" :{"Name":"quiz_double_function","DisplayName":"Functions: double(x)","Description":"A doubling function","QuestionHTML":"Write a function, double(x), that doubles the value of its single argument. ","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need a <i>to-procedure-return</i> block in the Procedures drawer.", "Place an expression that doubles the value of the parameter into the <i>return</i> slot."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","math_number","math_on_list","math_power","math_random_float","math_random_int","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames","mutator_container","InstantInTime","YailTypeToBlocklyType","YailTypeToBlocklyTypeMap","setTooltip","wrapSentence"],"Components":[],"VariableMappings":{},"FunctionName":"double(num)","FunctionDef":"function double(x) {\n return x * 2;\n}","FunctionInputs":["1,2","2,4","3,6","0,0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_function_square" :{"Name":"quiz_function_square","DisplayName":"Functions: square(x)","Description":"Simple Function Definition","QuestionHTML":"Define a function square(x) that squares its single argument. ","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need the procedures-with-return block in the Procedures drawer. ","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","logic_boolean","logic_compare","logic_false","logic_negate","logic_operation","logic_or","text", "text_compare","text_contains","text_isEmpty","text_join","text_join_item","text_length","text_replace_all","text_segment","text_split","text_split_at_spaces","text_trim","wrapSentence","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"square(num)","FunctionDef":"function square(x) {\n  return x * x;\n}","FunctionInputs":["0","1","2","10"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_is_odd" :{"Name":"quiz_is_odd","DisplayName":"Functions: isOdd(x)","Description":"A function definition problem.","QuestionHTML":"Write a function <font color=\"red\">isOdd(x)</font> that returns true if its argument is an odd number. Do not use if/else.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need a <i>to-procedure-return</i> block in the Procedures drawer.","You can put the <i>is-odd</i> expression right into the <i>return</i> slot.","In pseudocode, isOdd(x):  (x mod 2) = 1"],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"isOdd(num)","FunctionDef":"function isOdd(x) {\n  return x % 2 != 0;\n}","FunctionInputs":["0","1","2","3","4","5","6","7","8","9","-1","-2"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_is_divisible_by" :{"Name":"quiz_is_divisible_by","DisplayName":"Functions: isDivisibleBy(x,y)","Description":"Describe the quiz problem.","QuestionHTML":"Define a function 'isDivisibleBy(x,y)' that returns true if <i>x</i> is evenly divisible by <i>y</i>. Otherwise it returns false.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"isDivisibleBy(num,num)","FunctionDef":"function isDivisibleBy(x, y) {\n  return x % y == 0;\n}","FunctionInputs":["4,2"," 4,1"," 4,3"," 15,2"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_simple_function": {"Name":"quiz_simple_function","DisplayName":"Functions: sum(low,high)","Description":"Describe the quiz problem.","QuestionHTML":"Write a function, h(x,y), that returns the sum of the numbers from x to y inclusive.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"h(num,num)","FunctionDef":"function h(x, y) {\n  return function(sum,i) {\n    return function() {\n    while (i <= y) {\n    sum = sum + i;\n    i = i + 1;\n  }\n  return sum;\n  }();\n  }(0,x);\n}","FunctionInputs":["0,0","1,10","1,20"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_pounds_to_kilograms" :{"Name":"quiz_pounds_to_kilograms","DisplayName":"Functions: lbsToKgs(x)","Description":"Describe the quiz problem.","QuestionHTML":"Write a function <font color=\"red\">lbsToKg(x)</font> that converts pounds to kg.  I kg = 2.2 pounds.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"lbsToKg(num)","FunctionDef":"function lbsToKg(x) {\n  return x / 2.2;\n}","FunctionInputs":["1","2.2","0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"></xml>","Xmlsolution":""},

"quiz_quarts_to_gallons" :{"Name":"quiz_quarts_to_gallons","DisplayName":"Functions: quartsToGallons(x)","Description":"Describe the quiz problem.","QuestionHTML":"Define a function 'quartsToGallons(x)', with one parameter representing amount in quarts, that returns the amount in gallons, where 1 gal. = 4 qts.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["mutator_container", "math_mutator_item", "math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"quartsToGallons(num)","FunctionDef":"function quartsToGallons(q) {\n  return q / 4;\n}","FunctionInputs":["0","4","6","8"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_cups_to_tablespoons" :{"Name":"quiz_cups_to_tablespoons","DisplayName":"Functions: cupsToTablespoons(x)","Description":"Describe the quiz problem.","QuestionHTML":"Write a function cupsToTablespoons that converts cups to tbsp using 1 cup = 16 tbsps.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"cupsToTablespoons(num)","FunctionDef":"function cupsToTablespoons(x) {\n  return x * 16;\n}","FunctionInputs":["0","1","2","4"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_hypotenuse" :{"Name":"quiz_hypotenuse","DisplayName":"Functions: hypotenuse(a,b)","Description":"Function Definition.","QuestionHTML":"Define a function named <i>hypotenuse(a,b)</i> that calculates the length of the hypotenuse of a right triangle given the lengths of its other two sides, <i>a</i> and <i>b</i>.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need a <i>to-procedure-return</i> block from the Procedures drawer","The calculation for the hypotenuse can go right in the <i>return</i> slot.","In pseudocode, hypotenuse = sqrt(a^2 + b^2)."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"hypotenuse(num,num)","FunctionDef":"function hypotenuse(a, b) {\n  return Math.sqrt(a * a + b * b);\n}","FunctionInputs":["3,4"," 5,12"," 6,7"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_sqrt_of_average" :{"Name":"quiz_sqrt_of_average","DisplayName":"Functions: sqrtOfAverage(x,y)","Description":"Describe the quiz problem.","QuestionHTML":"Define a function named <i>sqrtOfAverage(x,y)</i> that takes the squareroot of the average of its 2 arguments, <i>x</i> and <i>y</i>.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","mutator_container", "math_mutator_item", "math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"sqrtOfAverage(num,num)","FunctionDef":"function sqrtOfAverage(x, y) {\n  return Math.sqrt((x + y) / 2);\n}","FunctionInputs":["0,10","10,20","0,0","12345,98765"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":""},

"quiz_recursive_sum": {"Name":"quiz_recursive_sum","DisplayName":"Functions: Recursive sum(n)","Description":"Recursive function definition","QuestionHTML":"Write a recursive function, sum(n), that computes the sum of 1..n.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","logic_boolean","logic_compare","logic_false","logic_negate","logic_operation","logic_or","text","text_compare","text_contains","text_isEmpty","text_join","text_join_item","text_length","text_replace_all","text_segment","text_split","text_split_at_spaces","text_trim","wrapSentence","controls_choose","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"sum(num)","FunctionDef":"function sum(n) {\n  return function() {\n    if (n <= 0) {\n      return 0; \n    } else {\n      return n + sum(n - 1); \n    }\n  }();\n}","FunctionInputs":["0","1","5","10","100"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"133\" y=\"31\"><mutation><arg name=\"n\"></arg></mutation><title name=\"NAME\">sum</title><value name=\"RETURN\"><block type=\"controls_choose\" inline=\"false\"></block></value></block></xml>","Xmlsolution":""}


}
  

